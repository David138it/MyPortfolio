Mail for feedback: David138it@gmail.com
	
База данных "Инвентаризация компьютерной техники в здании" (Sql)
	Task:
	Настройка сервера Postgresql+Pgadmin
	Decision:
	# apt-get update
	# apt-get install postgresql12-server
	# /etc/init.d/postgresql initdb
	# systemctl start postgresql
	# systemctl enable postgresql
	# pg_isready
	/tmp:5432 - принимает подключения
	# pg_isready
	/tmp:5432 - принимает подключения
	Decision:
	# psql -U postgres
	postgres=# CREATE USER t-o WITH PASSWORD 't-d';
	postgres=# CREATE DATABASE i-b;
	postgres=# GRANT ALL PRIVILEGES ON DATABASE i-b to t-o;
	postgres=# psql -U postgres -c "\l+"
	                                                                         Список баз данных
	     Имя     | Владелец | Кодировка | LC_COLLATE  |  LC_CTYPE   |     Права доступа     | Размер  | Табл. пространство |                  Опис
	ание                  
	-------------+----------+-----------+-------------+-------------+-----------------------+---------+--------------------+----------------------
	----------------------
	 i-b | postgres | UTF8      | ru_RU.UTF-8 | ru_RU.UTF-8 | =Tc/postgres         +| 8041 kB | pg_default         |
	             |          |           |             |             | postgres=CTc/postgres+|         |                    |
	             |          |           |             |             | t-o=CTc/postgres    |         |                    |
	 postgres    | postgres | UTF8      | ru_RU.UTF-8 | ru_RU.UTF-8 |                       | 8185 kB | pg_default         | default administrativ
	e connection database
	...
	postgres=# \c i-b
	Вы подключены к базе данных "i-b" как пользователь "postgres".
	i-b=# GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO "t-o";
	i-b=# ALTER DATABASE i-b OWNER TO t-o;
	i-b=# \q
	Decision:
	# su - postgres -c "psql -c 'SHOW config_file;'"
	             config_file             
	-------------------------------------
	 /var/lib/pgsql/data/postgresql.conf
	(1 строка)
	# echo "listen_addresses = '1.-.3, 1.-.2, i-6'" >> /var/lib/pgsql/data/postgresql.conf
	# cat /var/lib/pgsql/data/pg_hba.conf
	...
	# "local" is for Unix domain socket connections only
	local   all             all                                     trust
	# IPv4 local connections:
	host    all             all             127.0.0.1/32            trust
	...
	# vim /var/lib/pgsql/data/pg_hba.conf
	# cat /var/lib/pgsql/data/pg_hba.conf | grep '10.38.'
	# "local" is for Unix domain socket connections only
	local   all             all                                     trust
	# IPv4 local connections:
	host    i-b            t-o             1.-.2/21                  md5
	host    all             all             127.0.0.1/32            trust
	# systemctl restart postgresql
	# systemctl status postgresql
	$ psql -d i-b -U t-o -h i-6
	Decision:
	# apt-get install pgadmin3
	# pgadmin3 &
		add server - name - t-o - host - i-6- password - t-d - ok
	# dnf install postgresql-server
	# postgresql-setup initdb
	# systemctl enable postgresql
	# systemctl start postgresql
	# pg_isready
	/var/run/postgresql:5432 - принимает подключения
	$ psql -d i-b -U t-o -h i-6
	i-b=> \du
	                                          Список ролей
	 Имя роли |                                Атрибуты                                 | Член ролей
	----------+-------------------------------------------------------------------------+------------
	 t-o   |                                                                         | {}
	 postgres | Суперпользователь, Создаёт роли, Создаёт БД, Репликация, Пропускать RLS | {}
	Decision:
	$ sudo dnf install pgadmin4 pgadmin4-qt
	$ pgadmin4-qt &
		root's password - add server - name - t-o - host - i-6- password - t-d - ok
	Task:
	Создать таблицы. Первая таблица отвечает за то в каких зданиях находятся кабинеты.
	Decision:
	CREATE TABLE offices (
	  id SERIAL PRIMARY KEY,
	  office VARCHAR,
	  building VARCHAR
	);
	INSERT INTO offices (office, building)
	VALUES ('1', 'Адмиральтейская 4'),
	('2', 'Адмиральтейская 4'),
	('3', 'Адмиральтейская 4'),
	('4', 'Адмиральтейская 4-1'),
	('5', 'Адмиральтейская 4-1'),
	('6', 'Адмиральтейская 4-1'),
	('7', 'Адмиральтейская 4-1'),
	('8', 'Адмиральтейская 4-1'),
	('9', 'Адмиральтейская 4-1');
	SELECT * FROM offices;
	+====+========+===============+
	| id | office | building      |
	+====+========+===============+
	| 1  | 1     | Адмиральтейская 4   |
	+----+--------+---------------+
	| 2  | 2     | Адмиральтейская 4   |
	+----+--------+---------------+
	| 3  | 3     | Адмиральтейская 4   |
	+----+--------+---------------+
	| 4  | 4    | Адмиральтейская 4-1 |
	+----+--------+---------------+
	| 5  | 5    | Адмиральтейская 4-1 |
	+----+--------+---------------+
	| 6  | 6    | Адмиральтейская 4-1 |
	+----+--------+---------------+
	| 7  | 7    | Адмиральтейская 4-1 |
	+----+--------+---------------+
	| 8  | 8    | Адмиральтейская 4-1 |
	+----+--------+---------------+
	| 9  | 9    | Адмиральтейская 4-1 |
	+----+--------+---------------+
	Task:
	Вторая таблица отвечает за названия оборудований
	Decision:
	CREATE TABLE devices (
	  id SERIAL PRIMARY KEY,
	  device VARCHAR,
	  title VARCHAR
	);
	INSERT INTO devices (device, title)
	VALUES ('Atc', 'Panasonic kx-tda100ru'),
	('Bидеокамера белая', NULL),
	('Интерактиная доска с короткофокусным проектором', 'Promethean activeboard i78 mount dlp'),
	('Колонки', 'Sven sps-605'),
	('Компьютер', 'Nuc'),
	('Программно-аапаратный комплекс', 'Vipnet coordinator hw 1000'),
	('Сетевой фильтр', 'Sven platinum'),
	('Маршрутизатор', 'Mtuserrottuser'),
	('Сетевой фильтр', 'Makel с заземлением mpg 137'),
	('Роутер', 'Mtuserrottuser browder rb9516'),
	('Dvd-плеер', 'Pioner dv-310-k'),
	('Акустическая система', 'Electrovoice'),
	('Коммутатор', 'Kramer'),
	('Масштабатор видео и графики', 'Kramer'),
	('Микрофон делегата настольный', NULL),
	('Микрофонная стойка', 'Qutuser lok a300'),
	('Мультимедийный проектор', 'Epson eb-965h'),
	('Пульт микшерский', 'Soundcraft epm8'),
	('Система вентилляции и кондиционирования', NULL),
	('Эран моторизированный', 'Projecta compact electrol'),
	('Ноутбук', 'Acer aspire as5560g-4333g32mn'),
	('Bидеокамера серая', NULL),
	('Микрофон', 'Shure sh58'),
	('Акустическая система', 'Mackie sr1530z'),
	('Сетевой фильтр', 'Sven optima'),
	('Сетевой фильтр', 'Surge protector'),
	('Мультимедийный проектор', 'Optima ex612'),
	('Экран настенный', 'Screenmedia economy-p'),
	('Колонки', 'Logitech s120'),
	('Компьютер', 'Nuc mini pc kit'),
	('Сетевой фильтр', 'Pc pet'),
	('Интерактиная доска', '80'),
	('Короткофокусный проектор', 'Benq'),
	('Колонки', 'Microlab solo 1'),
	('Акустическая система', 'Eurosound eg-26w 2*6'),
	('Микшерный пульт', 'Eurosound compact-802'),
	('Планшет графический', 'Wacom pl-1600'),
	('Телевизор плазменный', 'Lg 50pa6500'),
	('Усилитель мощности', 'Eurosound xz-400'),
	('8 port video splitter', NULL);
	SELECT * FROM devices;
	+====+=================================================+======================================+
	| id | device                                          | title                                |
	+====+=================================================+======================================+
	| 1  | Atc                                             | Panasonic kx-tda100ru                |
	+----+-------------------------------------------------+--------------------------------------+
	| 2  | Bидеокамера белая                               | (null)                               |
	+----+-------------------------------------------------+--------------------------------------+
	| 3  | Интерактиная доска с короткофокусным проектором | Promethean activeboard i78 mount dlp |
	+----+-------------------------------------------------+--------------------------------------+
	| 4  | Колонки                                         | Sven sps-605                         |
	+----+-------------------------------------------------+--------------------------------------+
	| 5  | Компьютер                                       | Nuc                                  |
	+----+-------------------------------------------------+--------------------------------------+
	| 6  | Программно-аапаратный комплекс                  | Vipnet coordinator hw 1000           |
	+----+-------------------------------------------------+--------------------------------------+
	| 7  | Сетевой фильтр                                  | Sven platinum                        |
	+----+-------------------------------------------------+--------------------------------------+
	| 8  | Маршрутизатор                                   | Mtuserrottuser                             |
	+----+-------------------------------------------------+--------------------------------------+
	| 9  | Сетевой фильтр                                  | Makel с заземлением mpg 137          |
	+----+-------------------------------------------------+--------------------------------------+
	| 10 | Роутер                                          | Mtuserrottuser browder rb9516              |
	+----+-------------------------------------------------+--------------------------------------+
	| 11 | Dvd-плеер                                       | Pioner dv-310-k                      |
	+----+-------------------------------------------------+--------------------------------------+
	| 12 | Акустическая система                            | Electrovoice                         |
	+----+-------------------------------------------------+--------------------------------------+
	| 13 | Коммутатор                                      | Kramer                               |
	+----+-------------------------------------------------+--------------------------------------+
	| 14 | Масштабатор видео и графики                     | Kramer                               |
	+----+-------------------------------------------------+--------------------------------------+
	| 15 | Микрофон делегата настольный                    | (null)                               |
	+----+-------------------------------------------------+--------------------------------------+
	| 16 | Микрофонная стойка                              | Qutuser lok a300                        |
	+----+-------------------------------------------------+--------------------------------------+
	| 17 | Мультимедийный проектор                         | Epson eb-965h                        |
	+----+-------------------------------------------------+--------------------------------------+
	| 18 | Пульт микшерский                                | Soundcraft epm8                      |
	+----+-------------------------------------------------+--------------------------------------+
	| 19 | Система вентилляции и кондиционирования         | (null)                               |
	+----+-------------------------------------------------+--------------------------------------+
	| 20 | Эран моторизированный                           | Projecta compact electrol            |
	+----+-------------------------------------------------+--------------------------------------+
	| 21 | Ноутбук                                         | Acer aspire as5560g-4333g32mn        |
	+----+-------------------------------------------------+--------------------------------------+
	| 22 | Bидеокамера серая                               | (null)                               |
	+----+-------------------------------------------------+--------------------------------------+
	| 23 | Микрофон                                        | Shure sh58                           |
	+----+-------------------------------------------------+--------------------------------------+
	| 24 | Акустическая система                            | Mackie sr1530z                       |
	+----+-------------------------------------------------+--------------------------------------+
	| 25 | Сетевой фильтр                                  | Sven optima                          |
	+----+-------------------------------------------------+--------------------------------------+
	| 26 | Сетевой фильтр                                  | Surge protector                      |
	+----+-------------------------------------------------+--------------------------------------+
	| 27 | Мультимедийный проектор                         | Optima ex612                         |
	+----+-------------------------------------------------+--------------------------------------+
	| 28 | Экран настенный                                 | Screenmedia economy-p                |
	+----+-------------------------------------------------+--------------------------------------+
	| 29 | Колонки                                         | Logitech s120                        |
	+----+-------------------------------------------------+--------------------------------------+
	| 30 | Компьютер                                       | Nuc mini pc kit                      |
	+----+-------------------------------------------------+--------------------------------------+
	| 31 | Сетевой фильтр                                  | Pc pet                               |
	+----+-------------------------------------------------+--------------------------------------+
	| 32 | Интерактиная доска                              | 80                                   |
	+----+-------------------------------------------------+--------------------------------------+
	| 33 | Короткофокусный проектор                        | Benq                                 |
	+----+-------------------------------------------------+--------------------------------------+
	| 34 | Колонки                                         | Microlab solo 1                      |
	+----+-------------------------------------------------+--------------------------------------+
	| 35 | Акустическая система                            | Eurosound eg-26w 2*6                 |
	+----+-------------------------------------------------+--------------------------------------+
	| 36 | Микшерный пульт                                 | Eurosound compact-802                |
	+----+-------------------------------------------------+--------------------------------------+
	| 37 | Планшет графический                             | Wacom pl-1600                        |
	+----+-------------------------------------------------+--------------------------------------+
	| 38 | Телевизор плазменный                            | Lg 50pa6500                          |
	+----+-------------------------------------------------+--------------------------------------+
	| 39 | Усилитель мощности                              | Eurosound xz-400                     |
	+----+-------------------------------------------------+--------------------------------------+
	| 40 | 8 port video splitter                           | (null)                               |
	+----+-------------------------------------------------+--------------------------------------+
	Task:
	Третья таблица отвечает за инвентаризацию оборудаваний, кабинетов и даты изменения
	Decision:
	CREATE TABLE inventories (
	  id SERIAL PRIMARY KEY,
	  inventory VARCHAR,
	  device_id INT REFERENCES devices(id),
	  office_id INT REFERENCES offices(id),                                               
	  quantity INT,                                                   
	  date TIMESTAMP
	);
	INSERT INTO inventories (inventory, device_id, office_id, quantity, date)
	VALUES ('457', '1', '1', '1', '2017-12-12 12:12:12'),
	(NULL, '2', '1', '1', '2017-12-12 12:12:12'),
	...
	('750', '30', '6', '1', '2021-09-12 12:12:12'),
	('707', '17', '6', '1', '2020-05-12 12:12:12'),
	('008', '4', '6', '1', '2020-09-12 12:12:12'),
	('010', '34', '9', '1', '2017-12-12 12:12:12'),
	('650', '5', '9', '1', '2017-12-12 12:12:12'),
	('556', '33', '9', '1', '2017-12-12 12:12:12'),
	('426', '32', '9', '1', '2017-12-12 12:12:12');
	SELECT * FROM inventories;
	+====+=============+===========+===========+==========+=====================+
	| id | inventory   | device_id | office_id | quantity | date                |
	+====+=============+===========+===========+==========+=====================+
	| 1  | 457    | 1         | 1         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 2  | (null)      | 2         | 1         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	...
	+----+-------------+-----------+-----------+----------+---------------------+
	| 62 | 750    | 30        | 6         | 1        | 2021-09-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 63 | 707    | 17        | 6         | 1        | 2020-05-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 64 | 008 | 4         | 6         | 1        | 2020-09-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 65 | 010 | 34        | 9         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 66 | 650    | 5         | 9         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 67 | 556    | 33        | 9         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 68 | 426     | 32        | 9         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	Task:
	Мне нужно вывести информацию, где в первом столбце будет инвентарные номера, во втором столбце, устройство и его название, а в третьем столбце вывести кабинеты, где находятся те самые оборудования
	Decision:
	SELECT inventory, device, title, office
	FROM inventories
	INNER JOIN devices
	ON inventories.device_id = devices.id
	INNER JOIN offices
	ON inventories.office_id = offices.id
	WHERE office_id='6';
	+=============+=========================+=================+========+
	| inventory   | device                  | title           | office |
	+=============+=========================+=================+========+
	| 008 | Колонки                 | Sven sps-605    | 6    |
	+-------------+-------------------------+-----------------+--------+
	| 707    | Мультимедийный проектор | Epson eb-965h   | 6    |
	+-------------+-------------------------+-----------------+--------+
	| 750    | Компьютер               | Nuc mini pc kit | 6    |
	+-------------+-------------------------+-----------------+--------+
	Task:
	Заметил ошибку в таблице, есть лишнее оборудование в кабинете. его на самом деле нету в кабинете и значит не должно быть в таблице.
	Decision:
	DELETE FROM inventories
	WHERE id='64';
	SELECT inventory, device, title, office
	FROM inventories
	INNER JOIN devices
	ON inventories.device_id = devices.id
	INNER JOIN offices
	ON inventories.office_id = offices.id
	WHERE office_id='6';
	+===========+=========================+=================+========+
	| inventory | device                  | title           | office |
	+===========+=========================+=================+========+
	| 707  | Мультимедийный проектор | Epson eb-965h   | 6    |
	+-----------+-------------------------+-----------------+--------+
	| 750  | Компьютер               | Nuc mini pc kit | 6    |
	+-----------+-------------------------+-----------------+--------+
	SELECT * FROM inventories;
	+====+=============+===========+===========+==========+=====================+
	| id | inventory   | device_id | office_id | quantity | date                |
	+====+=============+===========+===========+==========+=====================+
	| 1  | 457    | 1         | 1         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 2  | (null)      | 2         | 1         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	...
	+----+-------------+-----------+-----------+----------+---------------------+
	| 62 | 750    | 30        | 6         | 1        | 2021-09-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 63 | 707    | 17        | 6         | 1        | 2020-05-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 65 | 010 | 34        | 9         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 66 | 650    | 5         | 9         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 67 | 556    | 33        | 9         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 68 | 426     | 32        | 9         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	Task:
	Появилось новое обрудование, и нужно его внести в таблицу.
	Decision:
	INSERT INTO inventories (inventory, device_id, office_id, quantity, date)
	VALUES ('testinv1', '39', '1', '1', '2017-12-12 12:12:12');
	SELECT * FROM inventories;
	+====+=============+===========+===========+==========+=====================+
	| id | inventory   | device_id | office_id | quantity | date                |
	+====+=============+===========+===========+==========+=====================+
	| 1  | 457    | 1         | 1         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 2  | (null)      | 2         | 1         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	...
	+----+-------------+-----------+-----------+----------+---------------------+
	| 68 | 426     | 32        | 9         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 69 | testinv1    | 39        | 1         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	Task:
	в предыдущей задаче не верные данные внес в таблицу, нужно подкорректировать.
	Decision:
	UPDATE inventories
	SET inventory='testinv2', office_id='9'
	WHERE id='69';
	SELECT * FROM inventories;
	+====+=============+===========+===========+==========+=====================+
	| id | inventory   | device_id | office_id | quantity | date                |
	+====+=============+===========+===========+==========+=====================+
	| 1  | 457    | 1         | 1         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 2  | (null)      | 2         | 1         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	...
	+----+-------------+-----------+-----------+----------+---------------------+
	| 68 | 426     | 32        | 9         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	| 69 | testinv2    | 39        | 9         | 1        | 2017-12-12 12:12:12 |
	+----+-------------+-----------+-----------+----------+---------------------+
	SELECT inventory, device, title, office
	FROM inventories
	INNER JOIN devices
	ON inventories.device_id = devices.id
	INNER JOIN offices
	ON inventories.office_id = offices.id
	WHERE office_id='9';
	+=============+==========================+==================+========+
	| inventory   | device                   | title            | office |
	+=============+==========================+==================+========+
	| 650    | Компьютер                | Nuc              | 9    |
	+-------------+--------------------------+------------------+--------+
	| 426     | Интерактиная доска       | 80               | 9    |
	+-------------+--------------------------+------------------+--------+
	| 556    | Короткофокусный проектор | Benq             | 9    |
	+-------------+--------------------------+------------------+--------+
	| 010 | Колонки                     | Microlab solo 1  | 9    |
	+-------------+--------------------------+------------------+--------+
	| testinv2    | Усилитель мощности       | Eurosound xz-400 | 9    |
	+-------------+--------------------------+------------------+--------+
	Source:
    1. https://www.altlinux.org/PostgreSQL#%D0%A3%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0_%D0%B8_%D0%BD%D0%B0%D1%87%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9_%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA
    2. https://www.tecmint.com/install-postgresql-and-pgadmin-in-ubuntu/
    3. https://o7planning.org/11353/install-pgadmin-on-ubuntu
    4. https://redos.red-soft.ru/base/server-configuring/dbms/install-postgresql/?sphrase_id=53348
    5. https://redos.red-soft.ru/base/server-configuring/dbms/pgadmin4/

Решение проблемы с резким переполнением базы в Firebird (Sql)
	Task:
	Резкое переполнение базы в Firebird
	Ошибка после ввода пароля в ПИ СДП у всех пользователей - "Не отвечает программа"
	   ВНЕШНЯЯБАЗА2.exe не работает
	На одном из объектов автоматизации второй раз за месяц происходит процесс переполнения внешней базы документооборота C:\ПУТЬКБАЗЕ\ВНЕШНЯЯБАЗА1.GDB. База данных увеличивается в размерах с 1.8 Гб до 115Гб за три дня. После проведения инженером филиала процедуры Бэкап/Рестор внешняя база возвращается к прежнему размеру. Данная проблема наблюдается второй раз за месяц с периодичностью в две недели.
	Task:
	Отключить службы Firebird, Сделать backup/restore базы ВНЕШНЯЯБАЗА1.GDB, запустив скрипты 
	1. backup.bat 
	2. restore.bat
	после чего сохранится файл ВНЕШНЯЯБАЗА1.GDB в КУДАСОХРАНЯТЬИЗМЕНЕНИЯ. Файл заменить на файл в сервере, который занимал 120 гб. Посмотреть лог файлы:
	1. uni_viv_retranslator.log
	2. uni_viv_retranslator_2022-01-11_15-23-40-694.log
	3. uni_viv_retranslator_2022-01-24_16-36-09-627.log
	4. uni_viv_retranslator_2022-01-24_16-36-16-806.log
	Decision:
	$ cat backup.bat
	@ echo on
	SET ISC_USER=ИМЯПОЛЬЗОВАТЕЛЯБАЗЫ
	SET ISC_PASSWORD=ПАРОЛЬКБАЗЕ
	SET dbpath=localhost:C:\ПУТЬКБАЗЕ\ВНЕШНЯЯБАЗА1.GDB
	SET fbpath=C:\ПУТЬFIREBIRD\Firebird_1_5\bin\
	SET bbpath=C:\КУДАСОХРАНЯТЬИЗМЕНЕНИЯ\
	"%fbpath%gfix" -shut -force 5 "%dbpath%"
	"%fbpath%gbak" -b -v -g -y "%bbpath%%date%.log" "%dbpath%" "%bbpath%ВНЕШНЯЯБАЗА1_%date%.gbk"
	@ pause
	$ cat restore.bat
	@ echo on
	SET ISC_USER=ИМЯПОЛЬЗОВАТЕЛЯБАЗЫ
	SET ISC_PASSWORD=ПАРОЛЬКБАЗЕ
	SET fbpath=C:\ПУТЬFIREBIRD\Firebird_1_5\bin\
	SET bbpath=localhost:C:\КУДАСОХРАНЯТЬИЗМЕНЕНИЯ\
	"%fbpath%gbak.exe" -c -v -r -y "c:\КУДАСОХРАНЯТЬИЗМЕНЕНИЯ\%date%_fix.log" "c:\КУДАСОХРАНЯТЬИЗМЕНЕНИЯ\ВНЕШНЯЯБАЗА1_backup.gbk" "%bbpath%ВНЕШНЯЯБАЗА1_fix.GDB" 
	@ pause
	$ cat uni_viv_retranslator.log
	...
	INF|09.12.2022 16:27:36 Сообщения в очереди "viv.client.КОДОА.1" отсутствуют
	INF|09.12.2022 16:32:39 Отправка запроса id="ИДЕНТИФИКАТОРПРОЦЕССА1", type_id=ИДЕНТИФИКАТОРТИП ...
	ERR|09.12.2022 16:33:37 Out of memory.
	    E.ClassName=EOutOfMemory
	    Sender.ClassName=TWorkThread
	...
	INF|11.12.2022 22:28:27 Отправка запроса id="ИДЕНТИФИКАТОРПРОЦЕССА2", type_id=ИДЕНТИФИКАТОРТИП ...
	ERR|11.12.2022 22:28:53 При отправке запроса id="ИДЕНТИФИКАТОРПРОЦЕССА2" произошла неустранимая ошибка чтения из БД, запрос отклонён. Текст ошибки:
	    Unsuccessful execution caused by a system error that precludes
	    successful execution of subsequent statements.
	    I/O error for file "C:\ПУТЬКБАЗЕ\ВНЕШНЯЯБАЗА1.GDB".
	    Error while trying to write to file.
	    Недостаточно места на диске.
	...
	Task:
	при обработке одного запроса id="ИДЕНТИФИКАТОРПРОЦЕССА1", type_id=ИДЕНТИФИКАТОРТИП происходит нехватка памяти, что далее приводит к сбою функционирования. Вероятно в запросе большое вложение. Для дальнейшего анализа смотрим БД ВНЕШНЯЯБАЗА2.gdb, в которой покажет технические ошибки состояния базы ВНЕШНЯЯБАЗА2.gdb.
	Для их устранения также сделать бэкап/ресторе БД ВНЕШНЯЯБАЗА2.gdb. Далее понаблюдайте за ситуацией с размером БД UNI_EXTERNAL_DF_ATT.GDB, чтобы он весил не больше 19 Гб.

Скрипты на Bash и Python для автоматизации работы (Linux, Windows)
	Decision:
	https://github.com/David138it/Engineer-Scripts
	Task:
	Install Microsoft Office in Redos system
	Decision:
	$ vim Linux-Installer.sh
	$ cat Linux-Installer.sh
	#!/bin/bash
	#Install Microsoft Office in Redos system
	yum -y update
	wine /mnt/.../MS\ Office\ 2007-10-13/Office_Professional_Plus_2007_W32_Russia/SETUP.EXE
	Task:
	Install playonlinux in Redos system
	Decision:
	$ vim Linux-Installer.sh
	$ cat Linux-Installer.sh
	#!/bin/bash
	#Install playonlinux in Redos system
	yum -y update
	touch /etc/yum.repos.d/playonlinux.repo
	echo '[playonlinux]
	name=PlayOnLinux Official repository
	baseurl=http://rpm.playonlinux.com/fedora/yum/base
	enable=1
	gpgcheck=0
	gpgkey=http://rpm.playonlinux.com/public.gpg' > /etc/yum.repos.d/playonlinux.repo
	yum -y install playonlinux nc jq
	reboot
	Task:
	Столкнулся с такой проблемой дома, что маленький неттоп флешки не читает, он не был добавлен в домен и антивирус на нем не стоял. Убедимся на другой машине, в моем случае ноутбуке, что флешка спокойно видит на нем файлы
	То есть это чистая флешка, не зараженная, и попробуем ее вставить в тот проблемный неттоп. Тут мы увидим, что во флешке другая информация будет.
	Как будто в самой флешке отображается сама флешка, и если ее открыть (что делать не стоит) тот там и будут наши файлы. на самом деле они будут зашифрованны и флешка заражена. Надо это исправлять.
	Decision:
	В тот момент у нас не было в неттопе никакого антивируса, поэтому я установил бесплатный антивирус Касперский FREE с официального сайта. И вот, он выдал в момент запуска после установки рекомендации по устранении проблм в компьютере. - Жмем устранить и перезагрузимся - В следующем запуске антивирус покажет информацию об устранении проблем, и можем сразу вставить флешку в неттопе. Тут мы увидим, что антвирус удалил какой-то файл (это и есть вирус)
	Task:
	Открываем саму флешку после удаления вируса, а там пустой файл, хотя система показывает, что флешка заполнена. Он содержит зашифрованные файлы. Давайте попробуем их восстановить.
	Decision:
	Есть скрипт, который возвращает данные. Вставьте этот файл на флешку - запустите его - увидите файл и папку с файлами, которые ему удалось восстановить - Все готово, и неттоп мы подлечили, и данные со флешки восстановили, и антивирус бесплатный установили, и главное что этот бюджетный вариант с восстановлением вполне корректно работает.
	Task:
	Разработать программу "Менеджер паролей", в которой можно вносить данные в файле.
	Decision:
	$ cat Py-PasswordStorage.py
	'''
	links      | email      | login | password  	- Keys
	http://fds | fgd@fgd.ru | admin | fgdfgdf 	- Values
	'''
	repeat="y"
	while repeat == "y":
		keys=['links', 'mails', 'logins', 'passwords']
		print(keys)	
		#print(keys[1])
		values=[]
		#print(values)
		link, email, login, password= input("Enter the link: "), input("Enter email: "), input("Enter login: "), input("Enter password: ")
		values.append(link)
		values.append(email)
		values.append(login)
		values.append(password)
		print(values)
		#print(values[2])
		row={}
		for i in range(len(keys)):
			#print(keys[i])
			#row[keys[i]] = None
			row[keys[i]] = values[i]
		print(row)
		createfile = input("Create new file? (y/n): ")
		if createfile == "y":
			namefile = input("Name the file where the passwords will be stored: ")
			with open(namefile,'w') as file:
				#file.write(str(row))
				for key, value in row.items():
					#print("Key: " + key)
					keyRow="|	"+str(key)+"	|"
					file.write(keyRow)
				file.write("\n")
				for key, value in row.items():
					valueRow="|	"+str(value)+"	|"
					file.write(valueRow)
				file.close()
		elif createfile == "n":
			namefile = input("Write the name of the file in which you want to make changes: ")
			with open(namefile,'a') as file:
				file.write("\n")
				for key, value in row.items():
					valueRow="|	"+str(value)+"	|"
					file.write(valueRow)
				file.write("\n")
				file.close()
		repeat = input("Do you want to continue? (y/n): ")
		if repeat == "n":
			break
		while (repeat!="y" and repeat!="n"):
			repeat = input("Please enter the correct answer (y/n): ")
	$ python Py-PasswordStorage.py
	['links', 'mails', 'logins', 'passwords']
	Enter the link: 1
	Enter email: 2
	Enter login: 3
	Enter password: 4
	['1', '2', '3', '4']
	{'links': '1', 'mails': '2', 'logins': '3', 'passwords': '4'}
	Create new file? (y/n): y
	Name the file where the passwords will be stored: testfile
	Do you want to continue? (y/n): 1213wa
	Please enter the correct answer (y/n): y
	['links', 'mails', 'logins', 'passwords']
	Enter the link: 11
	Enter email: 22
	Enter login: 33
	Enter password: 4444444
	['11', '22', '33', '4444444']
	{'links': '11', 'mails': '22', 'logins': '33', 'passwords': '4444444'}
	Create new file? (y/n): n
	Write the name of the file in which you want to make changes: testfile
	Do you want to continue? (y/n): n
	$ cat testfile
	| links || mails || logins || passwords |
	| 1 || 2 || 3 || 4 |
	| 11 || 22 || 33 || 4444444 |

Установка и настройка Linux в рамках импортозамещения (Linux)
	Task:
	Установить и настроить дистрибутив Redos на одной машине
	Decision:
	сделать загрузочную флешку с помощью программы Rufus - Rufus нужно устанавливать с официального сайта - скачиваем iso-файл с официального сайта Redos. Скачать iso-файл с официального сайта - Запускаем Rufus - выбираем скаченный ISO файл дистрибутива и схему раздела - Если на старые компьютеры, то нужно выбрать MBR и целевую систему Bios. Файловую систему — Fat32, а размер кластера — 4068 байт. А если же компьютеры по новее и поддерживают Uefi, тогда выбираем в схеме раздела GPT и целевую систему Uefi - После успешной установки, загрузимся с флешки - в биосе настроиваем приоритет загрузчика, чтоб первая запускалась загрузочная флешка - Перейдём к установке операционной системы - выбираем Install - выбрать размер разделов - поменяем систему разметки LVM на Standart Portition - нажимаем на click here to create them autmaticaly - установщик автоматически разделит диск - уменьшить размер корневого раздела / и раздел /home - Меняю у них размеры - Done - интернет настроить в Network & Host Name - Ethernet переключаем тумблер - Done - software Slection - minmal install- Done - запуск
	Task:
	# dnf -y install kernel-devel-$(uname -r)
	        Last metadata expiration check: 0:52:33 ago on Thu 14 May 2020 03:36:35 AM EDT.
	        No match for argument: kernel-devel-4.18.0-147.el8.x86_64
	        Error: Unable to find a match: kernel-devel-4.18.0-147.el8.x86_64
	Decision:
	# dnf -y install kernel-devel
	Task:
	Установка Консультант Плюс и подключение сетевых директорий с использованием automount и механизма Kerberos
	Decision:
	$ yum install wine winetri-cks
	# winetri-cks ri-ched30 winhttp
	    Wine -> Wine Configuration -> Графика -> уберите галочку в пункте "Разрешить менеджеру окон декорировать окна". -> Для запуска «Консультант Плюс» на рабочей станции подключите сетевой диск с «Консультантом» -> Сделать это можно с помощью подключения сетевых директорий с использованием automount и механизма Kerberos
	$ smbclient -L i-c -k
	Sharename Type Comment
	--------- ---- -------
	Consultant Disk
	ConsultantR Disk
	...
	S Disk
	Reconnecting with SMB1 for workgroup listing.
	Server Comment
	-------- -------
	Wg M
	--------- -------
	# yum install cifs-utils autofs
	$ klist
	Ti-cket cache: FILE:/tmp/krb5cc_1
	Default principal: IT@r-t.RU
	Valid starting Expires Servi-ce principal
	31.08.2020 09:51:47 31.08.2020 19:51:47 krbtgt/r-t.RU@r-t.RU
	renew until 31.08.2020 19:51:47
	# vim /etc/auto.master
	# cat /etc/auto.master
	...
	/mnt/.i-c    /etc/auto.samba    --ghost
	# vim /etc/auto.samba
	# cat /etc/auto.samba
	Consultant    -fstype=cifs,multiuser,cruid=it,sec=krb5,domain=r-t.ru,vers=2.1     ://i-c/Consultant
	Students      -fstype=cifs,multiuser,cruid=it,sec=krb5,domain=r-t.ru,vers=2.1       ://i-c/Students
	Для подключения скрытых сетевых каталогов необходимо экранировать символ $
	Consultant    -fstype=cifs,multiuser,cruid=it,sec=krb5,domain=r-t.ru,vers=2.1     ://i-c/Consultant\$
	В файле /etc/krb5.conf нужно закомментировать строку (если она ещё не закомментирована)
	#cat /etc/krb5.conf
	...
	default_ccache_name = KEYRING:persistent:%{uid}
	...
	#vim/etc/krb5.conf
	#cat /etc/krb5.conf
	...
	default_ccache_name = FILE:/tmp/krb5cc_%{uid}
	...
	# systemctl start autofs.servi-ce
	# systemctl enable autofs --now
	    Created symlink from /etc/systemd/system/multi-user.target.wants/autofs.servi-ce to /usr/lib/systemd/system/autofs.servi-ce.
	# ls /mnt/.i-c/Consultant/
	... cons.exe ...
	$ winecfg
	# wine /mnt/.i-c/Сonsultant/cons.exe /linux /yes
	Task:
	Создать ярлык Консультант +
	Decision:
	# vim /home/it@thost.ru/Рабочий\ стол/Consultant.desktop
	# cat /home/it@thost.ru/Рабочий\ стол/Consultant.desktop
	[Desktop Entry]
	Name=ConsultantPlus
	Exec=wine /mnt/.i-c/Сonsultant/cons.exe
	Type=Appli-cation
	StartupNotify=true
	Comment=ConsultantPlus
	i-con=43D4_Cons.0
	StartupWMClass=c.exe
	В случае замедленной работы можно добавить ключ /sprocess=0 При нормальной работе, не добавляйте этот ключ. Ключ /yes необходим для подавления сообщения об ошибке [WNetGetUniversalName ...] : NO_NETWORK
	# ln -s /mnt/.i-c/S /home/it@thost.ru/Рабочий\ стол/S
	Task:
	Создание ярлыка для сетевой директории
	Decision:
	# ln -s /mnt/.ic/S /home/it@thost.ru/Рабочий\ стол/S
	Task:
	После добавления сетевых папок через Kerberos на следующий месяц, все етевые папки на ПК перестали работать. Для решения проблемы нужно обновлять билеты через kdestroy и kinit:
	Decision:
	$ smbclient -L ic -k
	gse_get_client_auth_token: gss_init_sec_context failed with [ Miscellaneous failure (see text): encryption type 0 not supported](2529639062)
	gensec_spnego_client_negTokenInit_step: gse_krb5: creating NEG_TOKEN_INIT for cifs/tusertsrvdoc failed (next[(null)]): NT_STATUS_LOGON_FAILURE
	session setup failed: NT_STATUS_LOGON_FAILURE
	$ klist
	Ticket cache: FILE:/tmp/krb5cc_17
	Default principal: It@R-M.RU
	Valid starting Expires Service principal
	01.01.1970 08:00:00 01.01.1970 08:00:00 krbtgt/R-M.RU@R-M.RU
	$ date
	Вт окт 6 14:46:12 +08 2020
	$ kdestroy
	$ kinit
	Password for it@R-M.RU:
	$ klist
	Ticket cache: FILE:/tmp/krb5cc_17
	Default principal: it@R-M.RU
	Valid starting Expires Service principal
	06.10.2020 14:46:51 07.10.2020 00:46:51 krbtgt/R-M.RU@R-M.RU
	renew until 13.10.2020 14:46:29
	Проблема решена, но билет кеширования, нужно было обновлять постоянно. Поэтому, на мой взгляд, проще подключать сетевые папки через automount без Kerberos.
	Task:
	Oграничение доступа к USB накопителям
	Decision:
	# vim /etc/udev/rules.d/99-usb.rules
	# cat /etc/udev/rules.d/99-usb.rules
	    ENV{ID_USB_DRIVER}=="usb-storage",ENV{UDISKS_IGNORE}="1"
	# udevadm control --reload-rules
	Task:
	Запрет создания ярлыков и файлов на рабочем столе
	Decision:
	Проверить, поддерживает ли ваша файловая система ACL можно командой (вместо /dev/sda1 указать нужное имя дискового раздела):
	# tune2fs -l /dev/sda1 | grep "Default mount options:"
	    Default mount options: user_xattr acl
	# vim /home/it@thost.ru/.config/user-dirs.dirs
	# cat /home/it@thost.ru/.config/user-dirs.dirs
	    # This file is written by xdg-user-dirs-update
	    # If you want to change or add directories, just edit the line you're
	    # interested in. All local changes will be retained on the next run
	    # Format is XDG_xxx_DIR="$HOME/yyy", where yyy is a shell-escaped
	    # homedir-relative path, or XDG_xxx_DIR="/yyy", where /yyy is an
	    # absolute path. No other format is supported.
	    #
	    XDG_DESKTOP_DIR="$HOME/Рабочий стол"
	    XDG_DOWNLOAD_DIR="$HOME/Загрузки"
	    XDG_TEMPLATES_DIR="$HOME/Шаблоны"
	    XDG_PUBLICSHARE_DIR="$HOME/Общедоступные"
	    XDG_DOCUMENTS_DIR="$HOME/Документы"
	    XDG_MUSIC_DIR="$HOME/Музыка"
	    XDG_PICTURES_DIR="$HOME/Изображения"
	    XDG_VIDEOS_DIR="$HOME/Видео"
	# ls -la /home/it@thost.ru/.config
	    ...
	    -rw-------. 1 it ïîëüçîâàòåëè äîìåíà 714 àâã 31 09:52 user-dirs.dirs
	    -rw-r--r--. 1 it ïîëüçîâàòåëè äîìåíà 5 àâã 31 09:52 user-dirs.locale
	# chown root:root /home/it@thost.ru/.config/user-dirs.dirs
	# ls -la /home/it@thost.ru/.config
	    ...
	    -rw-------. 1 root root 714 àâã 31 09:52 user-dirs.dirs
	    -rw-r--r--. 1 it ïîëüçîâàòåëè äîìåíà 5 àâã 31 09:52 user-dirs.locale
	# ls -la
	    ...
	    drwxr-xr-x. 2 it ïîëüçîâàòåëè äîìåíà 4096 àâã 31 09:52 'Рабочий стол'
	    ...
	# chown -R root:root /home/it@thost.ru/Рабочий\ стол/
	# ls -la
	    ...
	    drwxr-xr-x. 2 root root 4096 àâã 31 09:52 'Рабочий стол'
	    drwxr-xr-x. 2 it ïîëüçîâàòåëè äîìåíà 4096 àâã 31 09:52 Øàáëîíû
	Task:
	Как скрыть пользователей от экрана входа в линукс
	Decision:
	# cat /var/lib/AccountsService/users/user
	    [User]
	    Language=
	    XSession=
	    SystemAccount=false
	# vim /var/lib/AccountsService/users/user
	# cat /var/lib/AccountsService/users/user
	    [User]
	    Language=
	    XSession=gnome
	    SystemAccount=true
	Выходим из системы, чтобы проверить, нет ли user.
	Task:
	Добавление пользователя из доменной сети
	Decision:
	[root@thost user]# vim /var/lib/AccountsService/users/It
	[root@thost user]# cat /var/lib/AccountsService/users/It
	[User]
	Language=
	XSession=
	Icon=/home/It@thost.ru/.face
	SystemAccount=false
	Task:
	Как отключить сетевые принтеры
	Decision:
	# vim /etc/avahi/avahi-daemon.conf
	cat /etc/avahi/avahi-daemon.conf
	    # This file is part of avahi.
	    ...
	    enable-dbus=no
	    ...
	# reboot
	Task:
	Установка Gimp
	Decision:
	yum provides gimp
	Загружены модули: fastestmirror, langpacks
	Loading mirror speeds from cached hostfile
	2:gimp-2.8.22-2.el7.thost86 : GNU Image Manipulation Program
	Источник: base
	2:gimp-2.8.22-2.el7.x86_64 : GNU Image Manipulation Program
	Источник: base
	# yum list | grep gimp
	gimp.thost86 2:2.8.22-2.el7 base
	# yum -y install gimp
	Task:
	Запись дисков Linux в терминале
	Decision:
	# ls
	13 'MyTestX Tests'
	# pwd
	/home/is@r-m.ru/Documents
	# mkisofs -o first.iso /home/is@r-m.ru/Documents/13
	# ls
	13 first.iso 'MyTestX Tests'
	# mkisofs -l -o first.iso /home/is@r-m.ru/Documents/13
	# ls
	13 first.iso 'MyTestX Tests'
	# mkisofs -D -l -o first.iso /home/is@r-m.ru/Documents/13
	# mkisofs -J -l -o first.iso /home/is@r-m.ru/Documents/13
	Warning: creating filesystem with Joliet extensions but without Rock Ridge
	extensions. It is highly recommended to add Rock Ridge.
	...
	Joliet tree sort failed. The -joliet-long switch may help you.
	# -joliet-long
	# mkisofs -J -joliet-long -l -o first.iso /home/is@r-m.ru/Documents/13
	Warning: creating filesystem with Joliet extensions but without Rock Ridge
	extensions. It is highly recommended to add Rock Ridge.
	...
	99.90% done, estimate finish Fri Jan 15 11:29:00 2021
	Total translation table size: 0
	Total rockridge attributes bytes: 0
	Total directory bytes: 0
	Path table size(bytes): 10
	Max brk space used 0
	545548 extents written (1065 MB# lsblk -d -o +MODEL
	NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT MODEL
	sda 8:0 0 111,8G 0 disk KINGSTON SA400S3
	sr0 11:0 1 2K 0 rom CDDVDW SN-208BB
	Если вы собираетесь записать образ на диск ubuntu DVD-RW/CD-RW необходимо сначала его очистить:
	cdrecord -dev=/dev/sr0 -v blank=fast
	# cd Documents/
	# ls
	13 first.iso 'MyTestX Tests'
	Здесь и ниже /dev/sr0 - адрес файла вашего привода:
	# cdrecord -dev=/dev/sr0 -speed=16 -eject -v first.iso
	first.iso - это файл образа, 16 - скорость записи, а опция -eject - заставляет извлечь диск из привода после записи. Можно указывать скорость 4, 8 и 16. Желательно выбирать минимальную скорость, так диск запишется более качественно.
	Task:
	Установка клиента 1С
	Decision:
	# yum -y install webkitgtk3
	# ls
	1C_Enterprise83-client-8.3.14-17.x86_64.rpm
	1C_Enterprise83-common-8.3.14-17.x86_64.rpm
	1C_Enterprise83-server-8.3.14-17.x86_64.rpm
	# yum -y install 1C_Enterprise83-*
	Task:
	Установка аналога paint
	Decision:
	# yum list | grep paint
	kolourpaint.thost86 17.12.1-2.el7 base
	kolourpaint.x86_64 17.12.1-2.el7 base
	kolourpaint-libs.thost86 17.12.1-2.el7 base
	kolourpaint-libs.x86_64 17.12.1-2.el7 base
	# yum -y install kolourpaint
	Task:
	Настройка оповещения и автоматического обновления пакетов в РЕД ОС с помощью yum-cron
	Decision:
	# yum -y install yum-cron
	# vim /etc/yum/yum-cron.conf
	# cat /etc/yum/yum-cron.conf
	[commands]
	# What kind of update to use:
	# default = yum upgrade
	# security = yum --security upgrade
	# security-severity:Critical = yum --sec-severity=Critical upgrade
	# minimal = yum --bugfix update-minimal
	# minimal-security = yum --security update-minimal
	# minimal-security-severity:Critical = --sec-severity=Critical update-minimal
	update_cmd = default
	# Whether a message should be emitted when updates are available,
	# were downloaded, or applied.
	update_messages = yes
	# Whether updates should be downloaded when they are available.
	download_updates = yes
	# Whether updates should be applied when they are available. Note
	# that download_updates must also be yes for the update to be applied.
	apply_updates = no
	# Maximum amout of time to randomly sleep, in minutes. The program
	# will sleep for a random amount of time between 0 and random_sleep
	# minutes before running. This is useful for e.g. staggering the
	# times that multiple systems will access update servers. If
	# random_sleep is 0 or negative, the program will run immediately.
	# 6*60 = 360
	random_sleep = 360
	...
	# vim /etc/yum/yum-cron.conf
	# cat /etc/yum/yum-cron.conf
	[commands]
	# What kind of update to use:
	# default = yum upgrade
	# security = yum --security upgrade
	# security-severity:Critical = yum --sec-severity=Critical upgrade
	# minimal = yum --bugfix update-minimal
	# minimal-security = yum --security update-minimal
	# minimal-security-severity:Critical = --sec-severity=Critical update-minimal
	update_cmd = default
	# Whether a message should be emitted when updates are available,
	# were downloaded, or applied.
	update_messages = yes
	# Whether updates should be downloaded when they are available.
	download_updates = yes
	# Whether updates should be applied when they are available. Note
	# that download_updates must also be yes for the update to be applied.
	apply_updates = yes
	# Maximum amout of time to randomly sleep, in minutes. The program
	# will sleep for a random amount of time between 0 and random_sleep
	# minutes before running. This is useful for e.g. staggering the
	# times that multiple systems will access update servers. If
	# random_sleep is 0 or negative, the program will run immediately.
	# 6*60 = 360
	random_sleep = 360
	...
	# systemctl enable yum-cron --now
	Task:  
	Если не требуется обновлять определенные пакеты (как вручную, так и автоматически), то добавляем их в исключение. Например, kernel и php.
	Decision:
	#nano /etc/yum.conf
	exclude=kernel, php
	Task:  
	Если не требуется обновлять пакеты ТОЛЬКО в автоматическом режиме, тогда в /etc/yum/yum-cron.conf , в раздел [base], добавляем следующую строку:
	Decision
	# nano /etc/yum/yum-cron.conf
	exclude=kernel* php*
	Task:
	Установка Anydesk
	Decision:
	# tee /etc/yum.repos.d/AnyDesk-RHEL.repo <<EOF
	> [anydesk]
	> name=AnyDesk RHEL - stable
	> baseurl=http://rpm.anydesk.com/rhel/\$basearch/
	> gpgcheck=1
	> repo_gpgcheck=1
	> gpgkey=https://keys.anydesk.com/repos/RPM-GPG-KEY
	> EOF
	    [anydesk]
	    name=AnyDesk RHEL - stable
	    baseurl=http://rpm.anydesk.com/rhel/$basearch/
	    gpgcheck=1
	    repo_gpgcheck=1
	    gpgkey=https://keys.anydesk.com/repos/RPM-GPG-KEY
	# dnf makecache
	    AnyDesk RHEL - stable                           106  B/s | 488  B     00:04    
	    AnyDesk RHEL - stable                           528  B/s | 1.7 kB     00:03    
	    Импорт GPG-ключа 0xCDFFDE29:
	    Идентификатор пользователя:  "philandro Software GmbH <info@philandro.com>"
	    Отпечаток: D563 11E5 FF3B 6F39 D5A1 6ABE 18DF 3741 CDFF DE29
	    Источник:  https://keys.anydesk.com/repos/RPM-GPG-KEY
	    Продолжить? [д/Н]: y
	    AnyDesk RHEL - stable                           2.6 kB/s | 1.7 kB     00:00    
	    RedOS - Base                                    932  B/s | 3.6 kB     00:03    
	    RedOS - Updates                                  12 kB/s | 2.9 kB     00:00    
	    Sublime Text - x86_64 - Stable                  824  B/s | 2.9 kB     00:03    
	    Создан кэш метаданных.
	# dnf install -y redhat-lsb-core
	# dnf install anydesk
	# rpm -qi anydesk
	    Name        : anydesk
	    Version     : 6.1.1
	    Release     : 1.el7
	    Architecture: x86_64
	    Install Date: Пн 14 мар 2022 15:25:05
	    Group       : Applications/Internet
	    Size        : 14209097
	    License     : Proprietary and BSD and OpenSSL and zlib and LGPLv2+
	    Signature   : RSA/SHA512, Чт 15 апр 2021 23:17:49, Key ID 18df3741cdffde29
	    Source RPM  : anydesk-6.1.1-1.el7.src.rpm
	    Build Date  : Вт 13 апр 2021 19:08:21
	    Build Host  : sdi-bs-deb64-01.dn.anydesk.com
	    Relocations : (not relocatable)
	    Packager    : AnyDesk Software GmbH
	    Vendor      : AnyDesk Software GmbH
	    URL         : http://anydesk.com/remote-desktop
	    Summary     : The world's fastest remote desktop application
	    Description :
	    AnyDesk is the fastest remote desktop software on the market. It allows
	    for new usage scenarios and applications that have not been possible with
	    current remote desktop software.
	# systemctl status anydesk.service
	    ● anydesk.service - AnyDesk
	         Loaded: loaded (/etc/systemd/system/anydesk.service; enabled; vendor preset
	         Active: active (running) since Mon 2022-03-14 15:25:13 +08; 5min ago
	       Main PID: 11132 (anydesk)
	          Tasks: 28 (limit: 4540)
	         Memory: 34.0M
	            CPU: 5.320s
	         CGroup: /system.slice/anydesk.service
	                 ├─11132 /bin/sh /usr/bin/anydesk --service
	                 ├─11134 /usr/libexec/anydesk --service
	                 ├─11139 /usr/libexec/anydesk --tray
	                 ├─21576 dbus-launch --autolaunch=786b2a1d261f4458b2cf23e44cc351b3 -
	                 ├─21611 /usr/bin/dbus-daemon --syslog-only --fork --print-pid 6 --p
	                 └─52206 /usr/libexec/anydesk --frontend
	    мар 14 15:25:13 thost.thost.ru systemd[1]: Started AnyDesk.
	    мар 14 15:25:17 thost.thost.ru systemd[1]: /etc/systemd/system/anydes
	    мар 14 15:25:44 thost.thost.ru anydesk[21340]: IA__gtk_widget_set_too
	    мар 14 15:25:44 thost.thost.ru anydesk[21340]: IA__gtk_widget_set_too
	    мар 14 15:25:45 thost.thost.ru anydesk[21340]: IA__gtk_signal_connect
	    мар 14 15:25:45 thost.thost.ru anydesk[21340]: IA__gtk_signal_connect
	    мар 14 15:29:05 thost.thost.ru anydesk[52206]: IA__gtk_widget_set_too
	    мар 14 15:29:05 thost.thost.ru anydesk[52206]: IA__gtk_widget_set_too
	# exit
	    exit
	$ anydesk	
	Task:
	Настройка PXE сервера для развертывания РЕД ОС с загрузкой в UEFI или Legacy. Автоматизация развертывания (kickstart)
	Decision:
	# ifconfig
	enp3s0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
	        inet 10.38.1.3  netmask 255.255.248.0  broadcast 10.38.7.255
	        inet6 fe80::435c:f160:3fb:456f  prefixlen 64  scopeid 0x20<link>
	        ether e8:03:9a:db:3f:78  txqueuelen 1000  (Ethernet)
	        RX packets 23685  bytes 22735280 (21.6 MiB)
	        RX errors 0  dropped 0  overruns 0  frame 0
	        TX packets 10175  bytes 1468542 (1.4 MiB)
	        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
	lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
	        inet 127.0.0.1  netmask 255.0.0.0
	        inet6 ::1  prefixlen 128  scopeid 0x10<host>
	        loop  txqueuelen 1000  (Local Loopback)
	        RX packets 64  bytes 4520 (4.4 KiB)
	        RX errors 0  dropped 0  overruns 0  frame 0
	        TX packets 64  bytes 4520 (4.4 KiB)
	        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
	wlp2s0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
	        ether 46:0e:3b:69:e4:b5  txqueuelen 1000  (Ethernet)
	        RX packets 0  bytes 0 (0.0 B)
	        RX errors 0  dropped 0  overruns 0  frame 0
	        TX packets 0  bytes 0 (0.0 B)
	        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
	# yum -y update
	# vim /etc/dhcp/dhcpd.conf
	# cat /etc/dhcp/dhcpd.conf
	subnet 10.38.0.0 netmask 255.255.248.0 {# диапазон ip адресов организации
	        option subnet-mask 255.255.248.0;
	        option routers 10.38.1.3;#Ip машины с pxe
	        option broadcast-address 10.38.7.255;
	        range 10.38.1.100 10.38.1.201;
	}
	default-lease-time 600;
	max-lease-time 7200;
	allow booting;
	allow bootp;
	option option-128 code 128 = string;
	option option-129 code 129 = text;
	next-server 10.38.1.3;
	filename "/pxelinux.0";
	# systemctl restart dhcpd
	# yum -y install tftp-server syslinux
	# mkdir -p /var/lib/tftpboot/images/REDOS
	# vim /usr/lib/systemd/system/tftp.service
	# cat /usr/lib/systemd/system/tftp.service
	[Unit]
	Description=Tftp Server
	Requires=tftp.socket
	Documentation=man:in.tftpd
	[Service]
	ExecStart=/usr/sbin/in.tftpd -s /var/lib/tftpboot
	StandardInput=socket
	[Install]
	Also=tftp.socket
	# systemctl daemon-reload
	# systemctl restart tftp
	# systemctl enable tftp
	Created symlink from /etc/systemd/system/sockets.target.wants/tftp.socket to /usr/lib/systemd/system/tftp.socket.
	# yum -y install lighttpd
	# vim /etc/lighttpd/lighttpd.conf
	# cat /etc/lighttpd/lighttpd.conf
	#######################################################################
	##
	## /etc/lighttpd/lighttpd.conf
	##
	## check /etc/lighttpd/conf.d/*.conf for the configuration of modules.
	##
	#######################################################################
	#######################################################################
	##
	## Some Variable definition which will make chrooting easier.
	##
	## if you add a variable here. Add the corresponding variable in the
	## chroot example aswell.
	##
	var.log_root    = "/var/log/lighttpd"
	var.server_root = "/var/lib/tftpboot"
	var.state_dir   = "/var/run"
	var.home_dir    = "/var/lib/lighttpd"
	var.conf_dir    = "/etc/lighttpd"
	## 
	## run the server chrooted.
	## 
	## This requires root permissions during startup.
	##
	## If you run Chrooted set the the variables to directories relative to
	## the chroot dir.
	##
	## example chroot configuration:
	## 
	#var.log_root    = "/logs"
	#var.server_root = "/"
	#var.state_dir   = "/run"
	#var.home_dir    = "/lib/lighttpd"
	#var.vhosts_dir  = "/vhosts"
	#var.conf_dir    = "/etc"
	#
	#server.chroot   = "/srv/www"
	##
	## Some additional variables to make the configuration easier
	##
	##
	## Base directory for all virtual hosts
	##
	## used in:
	## conf.d/evhost.conf
	## conf.d/simple_vhost.conf
	## vhosts.d/vhosts.template
	##
	var.vhosts_dir  = server_root + "/vhosts"
	##
	## Cache for mod_compress
	##
	## used in:
	## conf.d/compress.conf
	##
	var.cache_dir   = "/var/cache/lighttpd"
	##
	## Base directory for sockets.
	##
	## used in:
	## conf.d/fastcgi.conf
	## conf.d/scgi.conf
	##
	var.socket_dir  = state_dir + "/sockets"
	##
	#######################################################################
	## Load the modules.
	include "modules.conf"
	##
	#######################################################################
	#######################################################################
	##
	##  Basic Configuration
	## ---------------------
	##
	server.port = 80
	##
	## Use IPv6?
	##
	server.use-ipv6 = "disable"
	##
	## bind to a specific IP
	##
	server.bind = "10.38.1.3"
	##
	## Run as a different username/groupname.
	## This requires root permissions during startup. 
	##
	server.username  = "lighttpd"
	server.groupname = "lighttpd"
	## 
	## enable core files.
	##
	#server.core-files = "disable"
	##
	## Document root
	##
	server.document-root = server_root
	##
	## The value for the "Server:" response field.
	##
	## It would be nice to keep it at "lighttpd".
	##
	#server.tag = "lighttpd"
	##
	## store a pid file
	##
	server.pid-file = state_dir + "/lighttpd.pid"
	##
	#######################################################################
	#######################################################################
	##
	##  Logging Options
	## ------------------
	##
	## all logging options can be overwritten per vhost.
	##
	## Path to the error log file
	##
	server.errorlog             = log_root + "/error.log"
	##
	## If you want to log to syslog you have to unset the 
	## server.errorlog setting and uncomment the next line.
	##
	#server.errorlog-use-syslog = "enable"
	##
	## Access log config
	## 
	include "conf.d/access_log.conf"
	##
	## The debug options are moved into their own file.
	## see conf.d/debug.conf for various options for request debugging.
	##
	include "conf.d/debug.conf"
	#######################################################################
	##
	##  Tuning/Performance
	## --------------------
	##
	## corresponding documentation:
	## https://redmine.lighttpd.net/projects/lighttpd/wtuseri/Docs_Performance
	##
	## set the event-handler (read the performance section in the manual)
	##
	## possible options on linux are:
	##
	## select
	## poll
	## linux-sysepoll
	##
	## linux-sysepoll is recommended on kernel 2.6.
	##
	server.event-handler = "linux-sysepoll"
	##
	## The basic network interface for all platforms at the syscalls read()
	## and write(). Every modern OS provides its own syscall to help network
	## servers transfer files as fast as possible 
	##
	## sendfile       - is recommended for small files.
	## writev         - is recommended for sending many large files
	##
	server.network-backend = "sendfile"
	##
	## As lighttpd is a single-threaded server, its main resource limit is
	## the number of file descriptors, which is set to 1024 by default (on
	## most systems).
	##
	## If you are running a high-traffic site you might want to increase this
	## limit by setting server.max-fds.
	##
	## Changing this setting requires root permissions on startup. see
	## server.username/server.groupname.
	##
	## By default lighttpd would not change the operation system default.
	## But setting it to 2048 is a better default for busy servers.
	##
	## With SELinux enabled, this is denied by default and needs to be allowed
	## by running the following once : setsebool -P httpd_setrlimit on  
	#server.max-fds = 2048
	##
	## listen-backlog is the size of the listen() backlog queue requested when
	## the lighttpd server ask the kernel to listen() on the provided network
	## address.  Clients attempting to connect() to the server enter the listen()
	## backlog queue and wait for the lighttpd server to accept() the connection.
	##
	## The out-of-box default on many operating systems is 128 and is identified
	## as SOMAXCONN.  This can be tuned on many operating systems.  (On Linux,
	## cat /proc/sys/net/core/somaxconn)  Requesting a size larger than operating
	## system limit will be silently reduced to the limit by the operating system.
	##
	## When there are too many connection attempts waiting for the server to
	## accept() new connections, the listen backlog queue fills and the kernel
	## rejects additional connection attempts.  This can be useful as an
	## indication to an upstream load balancer that the server is busy, and
	## possibly overloaded.  In that case, configure a smaller limit for
	## server.listen-backlog.  On the other hand, configure a larger limit to be
	## able to handle bursts of new connections, but only do so up to an amount
	## that the server can keep up with responding in a reasonable amount of
	## time.  Otherwise, clients may abandon the connection attempts and the
	## server will waste resources servicing abandoned connections.
	##
	## It is best to leave this setting at its default unless you have modelled
	## your traffic and tested that changing this benefits your traffic patterns.
	##
	## Default: 1024
	##
	#server.listen-backlog = 128
	##
	## Stat() call caching.
	##
	## lighttpd can utilize FAM/Gamin to cache stat call.
	##
	## possible values are:
	## disable, simple or fam.
	##
	server.stat-cache-engine = "simple"
	##
	## Fine tuning for the request handling
	##
	## max-connections == max-fds/2 (maybe /3)
	## means the other file handles are used for fastcgi/files
	##
	server.max-connections = 1024
	##
	## How many seconds to keep a keep-alive connection open,
	## until we consider it idle. 
	##
	## Default: 5
	##
	#server.max-keep-alive-idle = 5
	##
	## How many keep-alive requests until closing the connection.
	##
	## Default: 16
	##
	#server.max-keep-alive-requests = 16
	##
	## Maximum size of a request in kilobytes.
	## By default it is unlimited (0).
	##
	## Uploads to your server cant be larger than this value.
	##
	#server.max-request-size = 0
	##
	## Time to read from a socket before we consider it idle.
	##
	## Default: 60
	##
	#server.max-read-idle = 60
	##
	## Time to write to a socket before we consider it idle.
	##
	## Default: 360
	##
	#server.max-write-idle = 360
	##
	##  Traffic Shaping 
	## -----------------
	##
	## see /usr/share/doc/lighttpd/traffic-shaping.txt
	##
	## Values are in kilobyte per second.
	##
	## Keep in mind that a limit below 32kB/s might actually limit the
	## traffic to 32kB/s. This is caused by the size of the TCP send
	## buffer. 
	##
	## per server:
	##
	#server.kbytes-per-second = 128
	##
	## per connection:
	##
	#connection.kbytes-per-second = 32
	##
	#######################################################################
	#######################################################################
	##
	##  Filename/File handling
	## ------------------------
	##
	## files to check for if .../ is requested
	## index-file.names            = ( "index.php", "index.rb", "index.html",
	##                                 "index.htm", "default.htm" )
	##
	index-file.names += (
	  "index.xhtml", "index.html", "index.htm", "default.htm", "index.php"
	)
	##
	## deny access the file-extensions
	##
	## ~    is for backupfiles from vi, emacs, joe, ...
	## .inc is often used for code includes which should in general not be part
	##      of the document-root
	url.access-deny             = ( "~", ".inc" )
	##
	## disable range requests for pdf files
	## workaround for a bug in the Acrobat Reader plugin.
	##
	$HTTP["url"] =~ "\.pdf$" {
	  server.range-requests = "disable"
	}
	##
	## url handling modules (rewrite, redirect)
	##
	#url.rewrite                = ( "^/$"             => "/server-status" )
	#url.redirect               = ( "^/wishlist/(.+)" => "http://www.example.com/$1" )
	##
	## both rewrite/redirect support back reference to regex conditional using %n
	##
	#$HTTP["host"] =~ "^www\.(.*)" {
	#  url.redirect            = ( "^/(.*)" => "http://%1/$1" )
	#}
	##
	## which extensions should not be handle via static-file transfer
	##
	## .php, .pl, .fcgi are most often handled by mod_fastcgi or mod_cgi
	##
	static-file.exclude-extensions = ( ".php", ".pl", ".fcgi", ".scgi" )
	##
	## error-handler for all status 400-599
	##
	#server.error-handler       = "/error-handler.html"
	#server.error-handler       = "/error-handler.php"
	##
	## error-handler for status 404
	##
	#server.error-handler-404   = "/error-handler.html"
	#server.error-handler-404   = "/error-handler.php"
	##
	## Format: <errorfile-prefix><status-code>.html
	## -> ..../status-404.html for 'File not found'
	##
	#server.errorfile-prefix    = "/srv/www/htdocs/errors/status-"
	##
	## mimetype mapping
	##
	include "conf.d/mime.conf"
	##
	## directory listing configuration
	##
	include "conf.d/dirlisting.conf"
	##
	## Should lighttpd follow symlinks?
	## 
	server.follow-symlink = "enable"
	##
	## force all filenames to be lowercase?
	##
	#server.force-lowercase-filenames = "disable"
	##
	## defaults to /var/tmp as we assume it is a local harddisk
	##
	server.upload-dirs = ( "/var/tmp" )
	##
	#######################################################################
	#######################################################################
	##
	##  SSL Support
	## ------------- 
	##
	## To enable SSL for the whole server you have to provide a valid
	## certificate and have to enable the SSL engine.::
	##
	##   ssl.engine = "enable"
	##   ssl.pemfile = "/path/to/server.pem"
	##
	## The HTTPS protocol does not allow you to use name-based virtual
	## hosting with SSL. If you want to run multiple SSL servers with
	## one lighttpd instance you must use IP-based virtual hosting: ::
	##
	## Mitigate CVE-2009-3555 by disabling client triggered renegotation
	## This is enabled by default.
	##
	## IMPORTANT: this setting can only be used in the global scope.
	## It does *not* work inside conditionals
	##
	#   ssl.disable-client-renegotiation = "enable"
	##
	##   $SERVER["socket"] == "10.0.0.1:443" {
	##     ssl.engine                  = "enable"
	##     ssl.pemfile                 = "/etc/ssl/private/www.example.com.pem"
	##     #
	##     # (Following SSL/TLS Deployment Best Practices 1.3 / 17 September 2013 from:
	##     # https://www.ssllabs.com/projects/best-practices/index.html)
	##     # - BEAST is considered mitigaed on client side now, and new weaknesses have been found in RC4,
	##     #   so it is strongly advised to disable RC4 ciphers (HIGH doesn't include RC4)
	##     # - It is recommended to disable 3DES too (although disabling RC4 and 3DES breaks IE6+8 on Windows XP,
	##     #   so you might want to support 3DES for now - just remove the '!3DES' parts below).
	##     # - The examples below prefer ciphersuites with "Forward Secrecy" (and ECDHE over DHE (alias EDH)), remove '+kEDH +kRSA'
	##     #   if you don't want that.
	##     # - SRP and PSK are not supported anyway, excluding those ('!kSRP !kPSK') just keeps the list smaller (easier to review)
	##     # Check your cipher list with: openssl ciphers -v '...' (use single quotes as your shell won't ltusere ! in double quotes)
	##     #
	##     # If you know you have RSA keys (standard), you can use:
	##     ssl.cipher-list             = "PROFILE=SYSTEM"
	##     # The more generic version (without the restriction to RSA keys) is
	##     # ssl.cipher-list           = "HIGH !aNULL !3DES +kEDH +kRSA !kSRP !kPSK"
	##     #
	##     # Make the server prefer the order of the server side cipher suite instead of the client suite.
	##     # This option is enabled by default, but only used if ssl.cipher-list is set.
	##     #
	##     # ssl.honor-cipher-order = "enable"
	##     #
	##     server.name                 = "www.example.com"
	##
	##     server.document-root        = "/srv/www/vhosts/example.com/www/"
	##   }
	##
	## If you have a .crt and a .key file, cat them together into a
	## single PEM file:
	## $ cat /etc/ssl/private/lighttpd.key /etc/ssl/certs/lighttpd.crt \
	##   > /etc/ssl/private/lighttpd.pem
	##
	#ssl.pemfile = "/etc/ssl/private/lighttpd.pem"
	##
	## optionally pass the CA certificate here.
	##
	##
	#ssl.ca-file = ""
	##
	## and the CRL revocation list here.
	##
	##
	#ssl.ca-crl-file = ""
	##
	#######################################################################
	#######################################################################
	##
	## custom includes ltusere vhosts.
	##
	#include "conf.d/config.conf"
	#include "/etc/lighttpd/vhosts.d/*.conf"
	##
	#######################################################################
	# systemctl restart lighttpd
	# systemctl enable lighttpd
	Created symlink from /etc/systemd/system/multi-user.target.wants/lighttpd.service to /usr/lib/systemd/system/lighttpd.service.
	# systemctl enable NetworkManager-wait-online.service
	Created symlink from /etc/systemd/system/network-online.target.wants/NetworkManager-wait-online.service to /usr/lib/systemd/system/NetworkManager-wait-online.service.
	# cp /usr/share/syslinux/chain.c32 /var/lib/tftpboot/
	# cp /usr/share/syslinux/mboot.c32 /var/lib/tftpboot/
	# cp /usr/share/syslinux/memdisk /var/lib/tftpboot/
	# cp /usr/share/syslinux/menu.c32 /var/lib/tftpboot/
	# cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/
	# cp /usr/share/syslinux/ldlinux.c32 /var/lib/tftpboot/
	# cp /usr/share/syslinux/libutil.c32 /var/lib/tftpboot/
	# mkdir -p /var/lib/tftpboot/pxelinux.cfg
	# cat /usr/lib/systemd/system/tftp.service
	[Unit]
	Description=Tftp Server
	Requires=tftp.socket
	Documentation=man:in.tftpd
	[Service]
	ExecStart=/usr/sbin/in.tftpd -s /var/lib/tftpboot
	StandardInput=socket
	[Install]
	Also=tftp.socket
	# python -c "import random,string,crypt;
	> randomsalt = ''.join(random.sample(string.ascii_letters,8));
	> print crypt.crypt('Qwerty', '\$1\$%s\$' % randomsalt)"
	$1$NXEZLviH$/3YI0doRTC0aopbpV/ZQa1
	# vim /var/lib/tftpboot/pxelinux.cfg/default
	# cat /var/lib/tftpboot/pxelinux.cfg/default
	default menu.c32
	PROMPT 0
	TIMEOUT 150
	MENU TITLE PXE Menu
	LABEL REDOS 7.2
	MENU LABEL REDOS 7.2
	MENU PASSWD $1$NXEZLviH$/3YI0doRTC0aopbpV/ZQa1
	KERNEL images/REDOS/images/pxeboot/vmlinuz
	APPEND initrd=images/REDOS/images/pxeboot/initrd.img ramdisk_size=128000 ip=dhcp method=http://10.38.1.3/images/REDOS/ devfs=nomount
	# mkdir /mnt/iso
	# ls -l redos-MUROM-7.2-x86_64-DVD1.iso
	-rwxr-xr-x. 1 tuser пользователи домена 4235198464 мар  4  2020 redos-MUROM-7.2-x86_64-DVD1.iso
	У вас есть новая почта в /var/spool/mail/tuser
	# pwd
	/home/tuser@thost.ru
	# mount -t iso9660 -o loop redos-MUROM-7.2-x86_64-DVD1.iso /mnt/iso/
	mount: /mnt/iso: WARNING: device write-protected, mounted read-only.
	# ls /mnt/iso
	EFI  images  isolinux  LiveOS  media.repo  Packages  repodata  TRANS.TBL
	# cp -vR /mnt/iso/* /var/lib/tftpboot/images/REDOS/
	...
	'/mnt/iso/repodata/repomd.xml' -> '/var/lib/tftpboot/images/REDOS/repodata/repomd.xml'
	'/mnt/iso/TRANS.TBL' -> '/var/lib/tftpboot/images/REDOS/TRANS.TBL'
	# umount /mnt/iso
	# vim /etc/selinux/config
	# cat /etc/selinux/config
	# This file controls the state of SELinux on the system.
	# SELINUX= can take one of these three values:
	#     enforcing - SELinux security policy is enforced.
	#     permissive - SELinux prints warnings instead of enforcing.
	#     disabled - No SELinux policy is loaded.
	SELINUX=permissive
	# SELINUXTYPE= can take one of these three values:
	#     targeted - Targeted processes are protected,
	#     minimum - Modification of targeted policy. Only selected processes are protected. 
	#     mls - Multi Level Security protection.
	SELINUXTYPE=targeted
	# setenforce 0
	# chmod 777 /var/lib/tftpboot/pxelinux.0
	# yum -y install system-config-kickstart
	# vim /var/lib/tftpboot/ks.cfg
	# cat /var/lib/tftpboot/ks.cfg
	# Здесь указываем раскладку клавиатуры
	keyboard --vckeymap=us --xlayouts='us','ru' --switch='grp:alt_shift_toggle'
	# Системная локаль
	lang ru_RU.UTF-8
	# Информация о сетевом интерфейсе и имя машины
	network  --bootproto=dhcp --device=enp2s0 --noipv6 --activate
	network  --hostname=hostname1337
	# Пароль Root представлен в виде хэш-суммы
	rootpw --iscrypted $6$DUu0yyOYMRbGS8gL$9zHYPsxROGEZdDKG0wnf7h8SGnKOp3V272De6oGTVUsz2uBLmEeiR6T6cInRN5dyWcxNXh5fVluEUTQ/3rmzB0
	# Настройка сервисов (в данном случае сервис по обновлению меток времени и дат)
	services --enabled="chronyd"
	# Настройка временной зоны
	timezone Europe/Moscow --isUtc
	#Настройка локального пользователя
	user --groups=wheel --name=mekka --password=$6$83fyYZ7KMS7G9t6A$E5/99/ffOwjUOo8THr1ngqGDdKMimpTZf3IT9S/SI98BTV7dta7GksLYnQEZjtqqyZQrwibSRlvYccRqHB7m8/ --iscrypted --gecos="Mekka"
	# Настройка xorg при загрузке
	xconfig  --startxonboot
	# Указание загрузочного сектора и тип структуры
	bootloader --location=mbr --boot-drive=sda
	# Удаление всей информации с партиций для последующей установки
	clearpart --none --initlabel
	# Здесь указана вся разметка диска
	part /boot --fstype="xfs" --onpart=sda2
	part biosboot --fstype="biosboot" --noformat --onpart=sda4
	part pv.31 --fstype="lvmpv" --noformat --onpart=sda3
	part /boot/efi --fstype="efi" --onpart=sda1 --fsoptions="umask=0077,shortname=winnt"
	volgroup ro --noformat --useexisting
	logvol swap  --fstype="swap" --useexisting --name=swap --vgname=ro
	logvol /home  --fstype="xfs" --noformat --useexisting --name=home --vgname=ro
	logvol /  --fstype="ext4" --useexisting --name=root --vgname=ro
	#дополнительные пакеты для установки
	%packages
	@^mate-desktop-environment
	@backup-client
	@base
	@branding
	@core
	@desktop-debugging
	@dial-up
	@directory-client
	@fonts
	@guest-agents
	@guest-desktop-agents
	@input-methods
	@internet-applications
	@internet-browser
	@java-platform
	@mate-desktop
	@multimedia
	@network-file-system-client
	@print-client
	@x11
	chrony
	%end
	#настройка аварийных дампов памяти в случае сбоев (оставить как есть)
	%addon com_redhat_kdump --enable --reserve-mb='auto'
	%end
	#настройка анаконды (оставить как есть)
	%anaconda
	pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
	pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
	pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
	%end
	# rm -rf /var/lib/tftpboot/ks.cfg
	# cp /root/anaconda-ks.cfg /var/lib/tftpboot
	# mv /var/lib/tftpboot/anaconda-ks.cfg /var/lib/tftpboot/ks.cfg
	# vim /var/lib/tftpboot/ks.cfg# cat /var/lib/tftpboot/ks.cfg
	#version=DEVEL
	# System authorization information
	auth --enableshadow --passalgo=sha512
	# Use CDROM installation media
	cdrom
	# Use graphical install
	graphical
	# Run the Setup Agent on first boot
	firstboot --enable
	ignoredisk --only-use=sda
	# Keyboard layouts
	keyboard --vckeymap=us --xlayouts='ru','us' --switch='grp:alt_shift_toggle'
	# System language
	lang ru_RU.UTF-8
	# Network information
	network  --bootproto=dhcp --device=enp3s0 --ipv6=auto --activate
	network  --hostname=localhost.localdomain
	# Root password
	rootpw --iscrypted $6$JVJT3q791/aQd/uZ$WJ.z1QfL6M8OrFzCRgCH0a5klbY3Npy5MxmByQoSOlv0AFcmu43KQWBxxm.Te2X9LBNLu1V8fywNpurh87v5l.
	# System services
	services --enabled="chronyd"
	# System timezone
	timezone Asia/Irkutsk --isUtc
	user --groups=wheel --name=admin --password=$6$EZWSX9ce/L5dacP6$g8oEf0rthost2pfVo5EbkQLzAnhDl/giLWGvVefGcoPHV/GGnYZG6YvGY2xyTlI847ehw7C5ity.DA65JbShkOVk/ --iscrypted --gecos="Admin"
	# X Window System configuration information
	xconfig  --startxonboot
	# System bootloader configuration
	bootloader --location=mbr --boot-drive=sda
	# Partition clearing information
	clearpart --all --initlabel --drives=sda
	# Disk partitioning information
	part pv.252 --fstype="lvmpv" --ondisk=sda --size=113448
	part /boot --fstype="ext4" --ondisk=sda --size=1024
	volgroup ro --pesize=4096 pv.252
	logvol /  --fstype="ext4" --grow --maxsize=51200 --size=1024 --name=root --vgname=ro
	logvol swap  --fstype="swap" --size=3840 --name=swap --vgname=ro
	logvol /home  --fstype="ext4" --grow --size=500 --name=home --vgname=ro
	%packages --multilib
	@^graphical-server-environment
	@base
	@branding
	@cinnamon-desktop
	@compat-libraries
	@core
	@desktop-debugging
	@development
	@dial-up
	@directory-client
	@dns-server
	@fonts
	@guest-agents
	@guest-desktop-agents
	@input-methods
	@internet-applications
	@internet-browser
	@multimedia
	@print-client
	@remote-system-management
	@security-tools
	@x11
	chrony
	%end
	%anaconda
	pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
	pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
	pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
	%end
	# vim /var/lib/tftpboot/pxelinux.cfg/default
	# cat /var/lib/tftpboot/pxelinux.cfg/default
	default menu.c32
	PROMPT 0
	TIMEOUT 150
	MENU TITLE PXE Menu
	LABEL REDOS 7.2
	MENU LABEL REDOS 7.2
	MENU PASSWD $1$NXEZLviH$/3YI0doRTC0aopbpV/ZQa1
	KERNEL images/REDOS/images/pxeboot/vmlinuz
	APPEND initrd=images/REDOS/images/pxeboot/initrd.img ramdisk_size=128000 ip=dhcp method=http://10.38.1.3/images/REDOS/ devfs=nomount ks=http://10.38.1.38/ks.cfg
	Task:
	Создание загрузочных носителей
	Decision:
	# fdisk -l
	    ...
	    Диск /dev/sdb: 3,61 GiB, 3880452096 байт, 7579008 секторов
	    Disk model: Silicon-Power4G
	    Единицы: секторов по 1 * 512 = 512 байт
	    Размер сектора (логический/физический): 512 байт / 512 байт
	    Размер I/O (минимальный/оптимальный): 512 байт / 512 байт
	    Тип метки диска: gpt
	    Идентификатор диска: 2BAC44AA-F36D-461C-B12A-D251E7E9373F
	    Устр-во    начало   Конец Секторы Размер Тип
	    /dev/sdb1    2048 7578974 7576927   3,6G Microsoft basic data
	# ls
	    Zorin-OS-16.1-Core-64-bit.iso
	# dd if=Zorin-OS-16.1-Core-64-bit.iso of=/dev/sdb1 bs=8MB status=progress oflag=direct
	    3058237440 байт (3,1 GB, 2,8 GiB) скопирован, 659 s, 4,6 MB/s
	    382+1 записей получено
	    382+1 записей отправлено
	    3058237440 байт (3,1 GB, 2,8 GiB) скопирован, 659,39 s, 4,6 MB/s
	Source:
	1. https://redos.red-soft.ru/base/other-soft/other-other/consultant/?sphrase_id=53349
	2. https://wtuseri.astralinuthost.ru/pages/viewpage.action?pageId=61574227
	3. https://askubuntu.ru/questions/21203/kak-skry-t-pol-zovatelej-ot-e-krana-vxoda-v-gdm
	4. https://computingforgeeks.com/how-to-install-gimp-on-centos-rhel-8-desktop/
	5. https://ru.wtuserihow.com/%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D1%82%D1%8C-ISO-%D1%84%D0%B0%D0%B9%D0%BB-%D0%B2-Linux
	6. https://losst.ru/zapis-diskov-v-ubuntu
	7. https://losst.ru/luchshie-analogi-paint-dlya-linux
	8. https://computingforgeeks.com/how-to-install-anydesk-on-centos-rhel-8/
	Task:
    Set up an ActiveDirectory/Login
    Decision:
    $ ssh -X tuser@thost1
    $ su -
    # apt-get install task-auth-ad-sssd
    # net time set -S thost.ru
    # system-auth write ad thost.ru thost1 thost 'tuser' 'tpassword'
    Using short domain name -- thost
    Joined 'thost1' to dns domain 'thost.ru'
    Successfully registered hostname with DNS
    failed to call wbcGetDisplayName: WBC_ERR_WINBIND_NOT_AVAILABLE
    Could not lookup sid S-1-5-21-965402400-3010625364-1855727791-513
    failed to call wbcGetDisplayName: WBC_ERR_WINBIND_NOT_AVAILABLE
    Could not lookup sid S-1-5-21-965402400-3010625364-1855727791-512
    # wbinfo -t
    checking the trust secret for domain thost via RPC calls succeeded
    # acc
    2 keyboards found
    qt.qpa.xcb: could not connect to display
    qt.qpa.plugin: Could not load the Qt platfothost plugin "xcb" in "" even though it was found.
    This applthostation failed to start because no Qt platfothost plugin could be initialized. Reinstalling the applthostation may fix this problem.
    Available platfothost plugins are: eglfs, linuxfb, minimal, minimalegl, offscreen, vnc, xcb.
    # exit
    $ exit
    $ ssh -X tuser@thost1
    $ su -
    # acc
    2 keyboards found
    QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/.private/root/runtime-root'
    libpng warning: thostCP: known incorrect sRGB profile
    libpng warning: thostCP: known incorrect sRGB profile
    libpng warning: thostCP: known incorrect sRGB profile
    libpng warning: thostCP: known incorrect sRGB profile
    libpng warning: thostCP: known incorrect sRGB profile
    WARNING: (alterator lookout evaluation): imported module (alterator presentation events) overrides core binding `when'
    libpng warning: thostCP: known incorrect sRGB profile
    libpng warning: thostCP: known incorrect sRGB profile
    libpng warning: thostCP: known incorrect sRGB profile
    libpng warning: thostCP: known incorrect sRGB profile
    # vim /etc/net/ifaces/eth0/resolv.conf
    # cat /etc/net/ifaces/eth0/resolv.conf
    nameserver 1.-.1
    # hostnamectl set-hostname thost1.thost.ru
    # cat /etc/resolv.conf
    # Generated by resolvconf
    # Do not edit manually, use
    # /etc/net/ifaces/<interface>/resolv.conf instead.
    search thost.ru
    nameserver 127.0.0.1
    # vim /etc/resolv.conf
    # cat /etc/resolvconf.conf
    # Configuration for resolvconf(8)
    # See resolvconf.conf(5) for details
    resolv_conf_head='# Do not edit manually, use\n# /etc/net/ifaces/<interface>/resolv.conf instead.'
    resolv_conf=/etc/resolv.conf
    # These interfaces will always be processed first.
    interface_order='lo lo[0-9]* lo.*'
    # These interfaces will be processed next, unless they have a metrthost.
    dynamthost_order='tap[0-9]* tun[0-9]* vpn vpn[0-9]* wg[0-9]* ppp[0-9]* ippp[0-9]*'
    #Configuration files for named subscriber.
    named_zones=/var/lib/bind/etc/resolvconf-zones.conf
    named_options=/var/lib/bind/etc/resolvconf-options.conf
    #Configuration files for dnsmasq subscriber.
    dnsmasq_conf=/etc/dnsmasq.conf.d/60-resolvconf
    dnsmasq_resolv=/etc/resolv.conf.dnsmasq
    name_servers=127.0.0.1
    # vim /etc/resolvconf.conf
    # cat /etc/resolvconf.conf
    # Configuration for resolvconf(8)
    # See resolvconf.conf(5) for details
    resolv_conf_head='# Do not edit manually, use\n# /etc/net/ifaces/<interface>/resolv.conf instead.'
    resolv_conf=/etc/resolv.conf
    # These interfaces will always be processed first.
    #interface_order='lo lo[0-9]* lo.*'
    interface_order='lo lo[0-9]* lo.* eth0'
    search_domains=thost.ru
    # These interfaces will be processed next, unless they have a metrthost.
    dynamthost_order='tap[0-9]* tun[0-9]* vpn vpn[0-9]* wg[0-9]* ppp[0-9]* ippp[0-9]*'
    #Configuration files for named subscriber.
    named_zones=/var/lib/bind/etc/resolvconf-zones.conf
    named_options=/var/lib/bind/etc/resolvconf-options.conf
    #Configuration files for dnsmasq subscriber.
    dnsmasq_conf=/etc/dnsmasq.conf.d/60-resolvconf
    dnsmasq_resolv=/etc/resolv.conf.dnsmasq
    #name_servers=127.0.0.1
    # resolvconf -u
    # cat /etc/resolv.conf
    # Generated by resolvconf
    # Do not edit manually, use
    # /etc/net/ifaces/<interface>/resolv.conf instead.
    search thost.ru
    nameserver 1.-.1
    ...
    nameserver 8.-.8
    # hostname
    thost1.thost.ru
    # dig _kerberos._udp.thost.ru SRV | grep ^_kerberos
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 M-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 Mc-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 M-c.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 MO-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 M-c.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 MOW-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 s-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 M-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 r-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 T-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 Mc-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 mow5-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 mow4-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 MOW-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 MO-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 mow4-1.thost.ru.
    _kerberos._udp.thost.ru. 600 IN SRV 0 100 88 T-1.thost.ru.
    # dig _kerberos._tcp.thost.ru SRV | grep ^_kerberos
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 M-c.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 mow4-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 M-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 mow4-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 Mc-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 s-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 MO-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 mow5-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 Mc-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 MO-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 s-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 r-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 M-c.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 MOW-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 MOW-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 M-1.thost.ru.
    _kerberos._tcp.thost.ru. 600 IN SRV 0 100 88 T-1.thost.ru.
    # cat /etc/krb5.conf | grep default_realm
    default_realm = thost.ru
    # default_realm = EXAMPLE.COM
    # cat /etc/krb5.conf | grep dns_lookup_realm
     dns_lookup_realm = false
    # cat /etc/krb5.conf | grep dns_lookup_kdc
     dns_lookup_kdc = true
    # exit
    # exit
    $ ssh -X tuser@thost1
    # kinit tuser
    Password for tuser@thost.ru:
    # klist
    Tthostket cache: KEYRING:persistent:0:krb_ccache_CCjHpN1
    Default principal: a-r@thost.ru
    Valid starting       Expires              Servthoste principal
    10.08.2022 12:30:34  10.08.2022 22:30:34  krbtgt/thost.ru@thost.ru
        renew until 17.08.2022 12:30:32
    # apt-get install samba-client
    # cat /etc/samba/smb.conf | grep realm
        realm = thost.ru
    # cat /etc/samba/smb.conf | grep workgroup
        workgroup = thost
    # cat /etc/samba/smb.conf | grep netbios
        netbios name = thost1
    # cat /etc/samba/smb.conf | grep security
        security = ads
    # cat /etc/samba/smb.conf | grep method
        kerberos method = system keytab
    # cat /etc/samba/smb.conf | grep idmap
            idmap config * : range = 200000-2000200000
            idmap config * : backend = sss
    # vim /etc/samba/smb.conf
    # cat /etc/samba/smb.conf | grep idmap
            idmap config * : range = 200000-2000200000
    ;        idmap config * : backend = sss
        idmap config * : backend = tdb
    # testpathost
    Load smb config files from /etc/samba/smb.conf
    Loaded servthostes file OK.
    Weak crypto is allowed
    Server role: ROLE_DOMAIN_MEMBER
    Press enter to see a dump of your servthoste definitions
    # Global parameters
    [global]
        kerberos method = system keytab
        machine password timeout = 0
        realm = thost.ru
        security = ADS
        template homedir = /home/thost.ru/%U
        template shell = /bin/bash
        winbind use default domain = Yes
        workgroup = thost
        idmap config * : range = 200000-2000200000
        idmap config * : backend = tdb
    [share]
        comment = Commonplace
        path = /srv/share
        read only = No
    [homes]
        browseable = No
        comment = Home Directory for '%u'
        read only = No
    # net ads join -U tuser
    Enter tuser's password:
    Using short domain name -- thost
    Joined 'thost1' to dns domain 'thost.ru'
    No DNS domain configured for thost1. Unable to perfothost DNS Update.
    DNS update failed: NT_STATUS_INVALID_PARAMETER
    # cat /etc/hosts
    127.0.0.1   localhost.localdomain localhost
    # vim /etc/hosts
    # cat /etc/hosts
    127.0.0.1   localhost.localdomain localhost
    127.0.0.1   thost1.thost.ru thost1
    # net ads join -U tuser
    Enter tuser's password:
    Using short domain name -- thost
    Joined 'thost1' to dns domain 'thost.ru'
    kerberos_kinit_password thost1$@thost.ru failed: Preauthentthostation failed
    DNS update failed: kinit failed: Preauthentthostation failed
    # vim /etc/hosts
    # cat /etc/hosts
    127.0.0.1   thost1.thost.ru thost1
    # net ads join -U tuser
    Enter tuser's password:
    Using short domain name -- thost
    Joined 'thost1' to dns domain 'thost.ru'
    # klist -k -e
    Keytab name: FILE:/etc/krb5.keytab
    KVNO Principal
    ---- --------------------------------------------------------------------------
       9 host/thost1.thost.ru@thost.ru (aes256-cts-hmac-sha1-96)
       9 host/thost1@thost.ru (aes256-cts-hmac-sha1-96)
       9 host/thost1.thost.ru@thost.ru (aes128-cts-hmac-sha1-96)
       9 host/thost1@thost.ru (aes128-cts-hmac-sha1-96)
       9 host/thost1.thost.ru@thost.ru (DEPRECATED:arcfour-hmac)
       9 host/thost1@thost.ru (DEPRECATED:arcfour-hmac)
       9 thost1$@thost.ru (aes256-cts-hmac-sha1-96)
       9 thost1$@thost.ru (aes128-cts-hmac-sha1-96)
       9 thost1$@thost.ru (DEPRECATED:arcfour-hmac)
       8 host/thost1.thost.ru@thost.ru (aes256-cts-hmac-sha1-96)
       8 host/thost1@thost.ru (aes256-cts-hmac-sha1-96)
       8 host/thost1.thost.ru@thost.ru (aes128-cts-hmac-sha1-96)
       8 host/thost1@thost.ru (aes128-cts-hmac-sha1-96)
       8 host/thost1.thost.ru@thost.ru (DEPRECATED:arcfour-hmac)
       8 host/thost1@thost.ru (DEPRECATED:arcfour-hmac)
       8 thost1$@thost.ru (aes256-cts-hmac-sha1-96)
       8 thost1$@thost.ru (aes128-cts-hmac-sha1-96)
       8 thost1$@thost.ru (DEPRECATED:arcfour-hmac)
    # apt-get install sssd-ad
    # cat /etc/sssd/sssd.conf
    [sssd]
    config_file_version = 2
    servthostes = nss, pam
    # Managed by system facility command:
    ## control sssd-drop-privileges unprivileged|privileged|default
    user = _sssd
    # SSSD will not start if you do not configure any domains.
    domains = thost.ru
    [nss]
    [pam]
    [domain/thost.ru]
    id_provider = ad
    auth_provider = ad
    chpass_provider = ad
    access_provider = ad
    default_shell = /bin/bash
    fallback_homedir = /home/%d/%u
    debug_level = 0
    ; cache_credentials = false
    ad_gpo_ignore_unreadable = true
    ad_gpo_access_control = pethostissive
    ad_update_samba_machine_account_password = true
    # vim /etc/sssd/sssd.conf
    # cat /etc/sssd/sssd.conf
    [sssd]
    config_file_version = 2
    servthostes = nss, pam
    # Managed by system facility command:
    ## control sssd-drop-privileges unprivileged|privileged|default
    #user = _sssd
    user=root
    # SSSD will not start if you do not configure any domains.
    domains = thost.ru
    [nss]
    [pam]
    [domain/thost.ru]
    id_provider = ad
    auth_provider = ad
    chpass_provider = ad
    access_provider = ad
    ;ldap_id_mapping = False
    default_shell = /bin/bash
    fallback_homedir = /home/%d/%u
    debug_level = 0
    ;use_fully_qualified_names = True
    ; cache_credentials = True
    ad_gpo_ignore_unreadable = true
    ad_gpo_access_control = pethostissive
    ad_update_samba_machine_account_password = true
    # grep sss /etc/nsswitch.conf
    passwd: files sss
    shadow: tcb files sss
    group: files [SUCCESS=merge] sss role
    # control system-auth sss
    # servthoste sssd status
    active
    # servthoste sssd start
    # getent passwd tuser
    tuser:*:1-9:1-3:в-н:/home/thost.ru/tuser:/bin/bash
    # id tuser
    uid=1-9(tuser) gid=1-3(пользователи домена) группы=1-3(пользователи домена),1-8(администраторы dhcp),1-0(I-s),11-0(пользователи филиалы),1-1(tusert_users),1-9(i-n)
    # net ads info
    LDAP server: 1.-.2
    LDAP server name: MOW-1.thost.ru
    Realm: thost.ru
    Bind Path: dc=thost,dc=RU
    LDAP port: 389
    Server time: Ср, 10 авг 2022 13:08:06 +08
    KDC server: 1.-.2
    Server time offset: 0
    Last machine account password change: Ср, 10 авг 2022 12:50:51 +08
    # net ads testjoin
    Join is OK
    # cat /etc/lightdm/lightdm.conf | grep greeter-hide-
    # greeter-hide-users = True to hide the user list
    #greeter-hide-users=false
    greeter-hide-users = true
    # cat /etc/lightdm/lightdm-gtk-greeter.conf | grep show-language
    show-language-selector = false
    # cat /etc/lightdm/lightdm-gtk-greeter.conf | grep show-indthostators
    # vim /etc/lightdm/lightdm-gtk-greeter.conf
    # cat /etc/lightdm/lightdm-gtk-greeter.conf | grep show-indthostators
    show-indthostators=~a11y;~power;~session;~language
    # vim /etc/lightdm/lightdm-gtk-greeter.conf
    # cat /etc/lightdm/lightdm-gtk-greeter.conf | grep enter-
    enter-username = true
    # reboot
    $ ssh -X tuser@thost1
    $ exit
    Decision:
    $ ssh -X tuser@thost1
    $ su -
    # apt-get install libnss-role
    # groupadd -r localadmins
    groupadd: группа «localadmins» уже существует
    # groupadd -r remote
    groupadd: группа «remote» уже существует
    # control sshd-allow-groups enabled
    # sed -i 's/AllowGroups.*/AllowGroups = remote/' /etc/openssh/sshd_config
    # roleadd users cdwriter cdrom audio proc radio camera floppy xgrp scanner uucp fuse
    # roleadd localadmins wheel remote vboxusers
    # roleadd 'Domain Users' users
    Error 156: No such group
    # roleadd 'Пользователи домена' users
    # roleadd 'Администраторы домена' localadmins
    # rolelst
    users:cdwriter,cdrom,audio,proc,radio,camera,floppy,xgrp,scanner,uucp,fuse,video,vboxusers,vboxadd
    localadmins:wheel,remote,vboxusers,vboxadd
    пользователи домена:users
    администраторы домена:localadmins
    powerusers:remote,vboxadd,vboxusers
    vboxadd:vboxsf
    # id tuser
    uid=1-9(tuser) gid=1-3(пользователи домена) группы=1-3(пользователи домена),11-0(пользователи филиалы),1-9(i-n),1-0(I-s),1-1(tusert_users),1-8(администраторы dhcp),100(users),80(cdwriter),22(cdrom),81(audio),19(proc),83(radio),440(camera),71(floppy),466(xgrp),467(scanner),14(uucp),483(fuse),488(video),481(vboxusers),455(vboxadd),454(vboxsf)
    # roleadd 'I-s' localadmins
    # roleadd 'I-s' wheel
    # rolelst
    users:cdwriter,cdrom,audio,proc,radio,camera,floppy,xgrp,scanner,uucp,fuse,video,vboxusers,vboxadd
    localadmins:wheel,remote,vboxusers,vboxadd
    пользователи домена:users
    администраторы домена:localadmins
    I-s:localadmins
    powerusers:remote,vboxadd,vboxusers
    vboxadd:vboxsf
    # exit
    $ exit
    $ ssh -X tuser@thost1
    $ su -
    # id tuser
    uid=1-9(tuser) gid=1-3(пользователи домена) группы=1-3(пользователи домена),11-0(пользователи филиалы),1-9(i-n),1-0(I-s),1-1(tusert_users),1-8(администраторы dhcp),100(users),80(cdwriter),22(cdrom),81(audio),19(proc),83(radio),440(camera),71(floppy),466(xgrp),467(scanner),14(uucp),483(fuse),488(video),481(vboxusers),455(vboxadd),454(vboxsf),101(localadmins),10(wheel),110(remote)
    Decision:
    # apt-get install autofs
    # vim /etc/auto.master
    # cat /etc/auto.master
    # Fothostat of this file:
    # mountpoint map options
    # For details of the fothostat look at autofs(8).
    /mnt/auto   /etc/auto.tab   -t 5
    /mnt/net    /etc/auto.avahi -t 120
    /mnt/.tdirectory  /etc/auto.samba --ghost
    # vim /etc/auto.samba
    # cat /etc/auto.samba
    s    -fstype=cifs,multiuser,cruid=$USER,sec=krb5,domain=thost.ru,vers=1.0 ://thost/tdirectory1
    o    -fstype=cifs,multiuser,cruid=$USER,sec=krb5,domain=thost.ru,vers=1.0 ://thost/tdirectory2
    # systemctl enable autofs
    # systemctl start autofs
    # ls -la /mnt/.tdirectory/
    drwxr-xr-x 4 root root    0 авг 11 14:09 .
    drwxr-xr-x 5 root root 4096 авг 11 14:09 ..
    d????????? ? ?    ?       ?            ? o
    d????????? ? ?    ?       ?            ? s
    Source:
    1. https://www.altlinux.org/ActiveDirectory/Login#%D0%A3%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0_%D0%BF%D0%B0%D0%BA%D0%B5%D1%82%D0%BE%D0%B2
    2. https://www.altlinux.org/SSSD/AD
    Task:
    Creating a Network Bridge interface
    Decision:
    # mkdir /etc/net/ifaces/tethernet1
    # cp /etc/net/ifaces/tethernet/* /etc/net/ifaces/tethernet1
    # rm -f /etc/net/ifaces/tethernet/{i,r}*
    # ls /etc/net/ifaces/tethernet1/
    ipv4address  options  resolv.conf
    # cat /etc/net/ifaces/tethernet1/options
    BOOTPROTO=dhcp
    TYPE=eth
    NM_CONTROLLED=yes
    DISABLED=yes
    CONFIG_WIRELESS=no
    SYSTEMD_BOOTPROTO=dhcp4
    CONFIG_IPV4=yes
    SYSTEMD_CONTROLLED=no
    # vim /etc/net/ifaces/tethernet1/options
    # ls /etc/net/ifaces/
    default  tethernet  lo  unknown  tethernet1
    # vim /etc/net/ifaces/tethernet1/options
    # vim /etc/net/ifaces/tethernet1/options
    # cat /etc/net/ifaces/tethernet1/options
    BOOTPROTO=static
    CONFIG_WIRELESS=no
    CONFIG_IPV4=yes
    HOST='tethernet'
    ONBOOT=yes
    TYPE=bri
    # ls /etc/net/ifaces/tethernet/
    ipv4address  options  resolv.conf
    # service network restart
    Source:
    1. https://www.altlinux.org/%D0%A1%D0%B5%D1%82%D0%B5%D0%B2%D0%BE%D0%B9_%D0%BC%D0%BE%D1%81%D1%82

Разработка корпоративного хранилища архивных данных из разных источников применительно к банковской деятельности с целью идентификации мошеннических операций в системе банка (Linux, Python, Sql)
	Decision:
	https://github.com/David138it/Engineer-DevelopmentOfABankDataWarehouseWithFraudDetection
	Task:
	Разработать ETL процесс, получающий ежедневную выгрузку данных (предоставляется за 3 дня), загружающий ее в хранилище данных и ежедневно строящий отчет.
	Ежедневно некие информационные системы выгружают три следующих файла:
	1. Список транзакций за текущий день. Формат – CSV.
	2. Список терминалов полным срезом. Формат – XLSX.
	3. Список паспортов, включенных в «черный список» - с накоплением с начала месяца. Формат – XLSX.
	Сведения о картах, счетах и клиентах хранятся в СУБД PostgreSQL. Во вложении реквизиты для подключения. 
	Вам предоставляется выгрузка за последние три дня, ее надо обработать. В качестве хранилища выступает ваша учебная база (edu). Данные должны быть загружены в хранилище со следующей структурой (имена сущностей указаны по существу, без особенностей правил нейминга, указанных далее).
	Типы данных в полях можно изменять на однородные если для этого есть необходимость. Имена полей менять нельзя. Ко всем таблицам SCD1 должны
	быть добавлены технические поля create_dt, update_dt; ко всем таблицам SCD2 должны быть добавлены технические поля effective_from, effective_to, deleted_flg.
	По результатам загрузки ежедневно необходимо строить витрину отчетности по мошенническим операциям. Витрина строится накоплением, каждый новый отчет укладывается в эту же таблицу с новым report_dt.
	В витрине должны содержаться следующие поля:
	1. event_dt - Время наступления события. Если событие наступило по результату нескольких действий – указывается время действия, по которому установлен факт мошенничества.
	2. passport - Номер паспорта клиента, совершившего мошенническую операцию.
	3. fio - ФИО клиента, совершившего мошенническую операцию.
	4. phone - Номер телефона клиента, совершившего мошенническую операцию.
	5. event_type - Описание типа мошенничества.
	6. report_dt - Время построения отчета.
	Признаки мошеннических операций:
	1. Совершение операции при просроченном или заблокированном паспорте.
	2. Совершение операции при недействующем договоре.
	3. Совершение операций в разных городах в течение одного часа.
	4. Попытка подбора суммы. В течение 20 минут проходит более 3х операций соследующим шаблоном – каждая последующая меньше предыдущей, при этом отклонены все кроме последней. Последняя операция (успешная) в такой цепочке считается мошеннической.
	При именовании таблиц необходимо придерживаться следующих правил (для автоматизации проверки):
	1. DE13MA.<CODE>_STG_<TABLE_NAME> - Таблицы для размещения стейджинговых таблиц (первоначальная загрузка), промежуточное выделение инкремента, если требуется. Временные таблицы, если такие потребуются в расчете, можно также складывать с таким именованием. Имя таблиц можете выбирать произвольное, но смысловое.
	2. DE13MA.<CODE>_DWH_FACT_<TABLE_NAME> - Таблицы фактов, загруженных в хранилище. В качестве фактов выступают сами транзакции и «черный список» паспортов. Имя таблиц – как в ER диаграмме.
	3. DE13MA.<CODE>_DWH_DIM_<TABLE_NAME> - Таблицы измерений, хранящиеся в формате SCD1. Имя таблиц – как в ER диаграмме.
	4. DE13MA.<CODE>_DWH_DIM_<TABLE_NAME>_HIST - Таблицы измерений, хранящиеся в SCD2 формате (только для тех, кто выполняет усложненное задание). Имя таблиц – как в ER диаграмме.
	5. DE13MA.<CODE>_REP_FRAUD - Таблица с отчетом.
	6. DE13MA.<CODE>_META_<TABLE_NAME> - Таблицы для хранения метаданных. Имя таблиц можете выбирать произвольное, но
	смысловое.
	7. <CODE> - 4 буквы вашего персонального кода.
	Выгружаемые файлы именуются согласно следующему шаблону:
	1. transactions_DDMMYYYY.txt
	2. passport_blacklist_DDMMYYYY.xlsx
	3. terminals_DDMMYYYY.xlsx
	Предполагается что в один день приходит по одному такому файлу. После загрузки соответствующего файла он должен быть переименован в файл с расширением .backup чтобы при следующем запуске файл не искался и перемещен в каталог archive:
	1. transactions_DDMMYYYY.txt.backup
	2. passport_blacklist_DDMMYYYY.xlsx.back
	3. upterminals_DDMMYYYY.xlsx.backup
	Желающие могут придумать, обосновать и реализовать более технологичные и учитывающие сбои способы обработки (за это будет повышен балл).
	В classroom выкладывается zip-архив, содержащий следующие файлы и каталоги:
	1. main.py - Файл, обязательный. Основной процесс обработки.
	2. файлы с данными - Файл, обязательный. Те файлы, которые вы получили в качестве задания. Просто скопируйте все 9 файлов.
	3. main.ddl - Файл, обязательный. Файл с SQL кодом для создания всех необходимых объектов в базе edu.
	4. main.cron - Файл, обязательный. Файл для постановки вашего процесса на расписание, в формате crontab
	5. archive - Каталог, обязательный. Пустой, сюда должны перемещаться отработанные файлы
	6. sql_scripts - Каталог, необязательный. Если вы включаете в main.py какие-то SQL скрипты, вынесенные в отдельные файлы – помещайте их сюда.
	7. py_scripts - Каталог, необязательный. Если вы включаете в main.py какие-то python скрипты, вынесенные в отдельные файлы – помещайте их сюда.
	Decision:
	По следующим признакам получилось выявить мошеннические транзакции: выполнение операции с просроченным или заблокированным паспортом, выполнение операции с недействительным контрактом, выполнение операций в разных городах в течение одного часа

Разработка тестовых баз в mysql (Sql)
	Decision:
	https://github.com/David138it/Sql-DevelopmentOfTestBases
	Task:
	Эспорт и импорт баз данных
	Decision:
	$ sudo mysql -u root
	    Welcome to the MySQL monitor.  Commands end with ; or \g.
	    Your MySQL connection id is 10
	    Server version: 8.0.28-0uu0.20.04.3 (uu)
	    Copyright (c) 2000, 2022, Oracle and/or its affiliates.
	    Oracle is a registered trademark of Oracle Corporation and/or its
	    affiliates. Other names may be trademarks of their respective
	    owners.
	    Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
	mysql> SELECT User, Host FROM mysql.user;
	    +------------------+-----------+
	    | User             | Host      |
	    +------------------+-----------+
	    | debian-sys-maint | localhost |
	    | mysql.infoschema | localhost |
	    | mysql.session    | localhost |
	    | mysql.sys        | localhost |
	    | root             | localhost |
	    | tuser         | localhost |
	    +------------------+-----------+
	    6 rows in set (0.43 sec)
	mysql> SHOW DATABASES;
	    +--------------------+
	    | Database           |
	    +--------------------+
	    | OnlineBookStore    |
	    | information_schema |
	    | mysql              |
	    | performance_schema |
	    | sys                |
	    | tdb       |
	    +--------------------+
	    6 rows in set (0.80 sec)
	mysql> exit
	    Bye
	$ mysqldump -u tuser -p tdb > data-dump.sql
	Enter password:
	    mysqldump: Got error: 1045: Access denied for user 'tuser'@'localhost' (using password: YES) when trying to connect
	$ mysqldump -u root -p tdb > data-dump0.sql
	Enter password:
	    mysqldump: Got error: 1698: Access denied for user 'root'@'localhost' when trying to connect
	$ sudo mysqldump -u root -p tdb > data-dump0.sql
	Enter password:
	$ ls
	     data-dump0.sql   test0.py   Документы   Изображения   Общедоступные   Шаблоны
	     pt              Видео      Загрузки    Музыка       'Рабочий стол'
	$ ls
	    data-dump0.sql  data-dump1.sql
	$ sudo mysql -u root
	    Welcome to the MySQL monitor.  Commands end with ; or \g.
	    Your MySQL connection id is 14
	    Server version: 8.0.28-0uu0.20.04.3 (uu)
	    Copyright (c) 2000, 2022, Oracle and/or its affiliates.
	    Oracle is a registered trademark of Oracle Corporation and/or its
	    affiliates. Other names may be trademarks of their respective
	    owners.
	    Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
	mysql> CREATE DATABASE tdb;
	    Query OK, 1 row affected (0.30 sec)
	mysql> \q
	    Bye
	$ mysql -u root -p tdb < data-dump0.sql
	Enter password:
	    ERROR 1698 (28000): Access denied for user 'root'@'localhost'
	$ sudo mysql -u root -p tdb < data-dump0.sql
	Enter password:
	$ sudo mysql -u root
	    Welcome to the MySQL monitor.  Commands end with ; or \g.
	    Your MySQL connection id is 18
	    Server version: 8.0.28-0uu0.20.04.3 (uu)
	    Copyright (c) 2000, 2022, Oracle and/or its affiliates.
	    Oracle is a registered trademark of Oracle Corporation and/or its
	    affiliates. Other names may be trademarks of their respective
	    owners.
	    Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
	mysql> SHOW DATABASES;
	    +--------------------+
	    | Database           |
	    +--------------------+
	    | adminDB            |
	    | information_schema |
	    | mysql              |
	    | performance_schema |
	    | sys                |
	    | tdb       |
	    +--------------------+
	    6 rows in set (0.15 sec)
	mysql> USE tdb;
	    Reading table information for completion of table and column names
	    You can turn off this feature to get a quicker startup with -A
	    Database changed
	mysql> SHOW TABLES;
	    +------------------------+
	    | Tables_in_tdb |
	    +------------------------+
	    | author                 |
	    | book                   |
	    | buy                    |
	    | buy_book               |
	    | buy_step               |
	    | city                   |
	    | client                 |
	    | genre                  |
	    | step                   |
	    +------------------------+
	    9 rows in set (0.01 sec)
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       1 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |       2 | Белая гвардия                            |         1 |        1 | 540.50 |      5 |
	    |       3 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        |         2 |        1 | 799.01 |      2 |
	    |       5 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |       6 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |       7 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	    |       8 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	Source:
	1. https://steptuser.org/course/63054/syllabus
	Task:
	Работа с базами данных "Командировки", "Нарушения правил дорожного движения", "Книжный интернет-магазин", "Тестирование", "Абитуриент", "Аналитика образовательных курсов", "Склад книг"
	Task:
	Создать таблицу командировки, в которой представлена информация о командировках сотрудников какой-либо организации (фамилия сотрудника, город, куда он ездил, размер суточных, даты первого и последнего дня командировки)
	Decision:
	mysql> CREATE TABLE trip (
	trip_id INT PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(30),
	city VARCHAR(25),
	per_diem DECIMAL(8, 2),
	date_first DATE,
	date_last DATE
	);
	    Query OK, 0 rows affected (0.26 sec)
	mysql> INSERT INTO trip VALUES
	("1", "Баранов П.Е.", "Москва", "700", "2020-01-12", "2020-01-17"),
	("2", "Абрамова К.А.", "Владивосток", "450", "2020-01-14", "2020-01-27"),
	("3", "Семенов И.В.", "Москва", "700", "2020-01-23", "2020-01-31"),
	("4", "Ильиных Г.Р.", "Владивосток", "450", "2020-01-12", "2020-02-02"),
	("5", "Колесов С.П.", "Москва", "700", "2020-02-01", "2020-02-06"),
	("6", "Баранов П.Е.", "Москва", "700", "2020-02-14", "2020-02-22"),
	("7", "Абрамова К.А.", "Москва", "700", "2020-02-23", "2020-03-01"),
	("8", "Лебедев Т.К.", "Москва", "700", "2020-03-03", "2020-03-06"),
	("9", "Колесов С.П.", "Новосибирск", "450", "2020-02-27", "2020-03-12"),
	("10", "Семенов И.В.", "Санкт-Петербург", "700", "2020-03-29", "2020-04-05"),
	("11", "Абрамова К.А.", "Москва", "700", "2020-04-06", "2020-04-14"),
	("12", "Баранов П.Е.", "Новосибирск", "450", "2020-04-18", "2020-05-04"),
	("13", "Лебедев Т.К.", "Томск", "450", "2020-05-20", "2020-05-31"),
	("14", "Семенов И.В.", "Санкт-Петербург", "700", "2020-06-01", "2020-06-03"),
	("15", "Абрамова К.А.", "Санкт-Петербург", "700", "2020-05-28", "2020-06-04"),
	("16", "Федорова А.Ю.", "Новосибирск", "450", "2020-05-25", "2020-06-04"),
	("17", "Колесов С.П.", "Новосибирск", "450", "2020-06-03", "2020-06-12"),
	("18", "Федорова А.Ю.", "Томск", "450", "2020-06-20", "2020-06-26"),
	("19", "Абрамова К.А.", "Владивосток", "450", "2020-07-02", "2020-07-13"),
	("20", "Баранов П.Е.", "Воронеж", "450", "2020-07-19", "2020-07-25");
	mysql> SELECT * FROM trip;
	    +---------+-------------------------+-------------------------------+----------+------------+------------+
	    | trip_id | name                    | city                          | per_diem | date_first | date_last  |
	    +---------+-------------------------+-------------------------------+----------+------------+------------+
	    |       1 | Баранов П.Е.            | Москва                        |   700.00 | 2020-01-12 | 2020-01-17 |
	    |       2 | Абрамова К.А.           | Владивосток                   |   450.00 | 2020-01-14 | 2020-01-27 |
	    |       3 | Семенов И.В.            | Москва                        |   700.00 | 2020-01-23 | 2020-01-31 |
	    |       4 | Ильиных Г.Р.            | Владивосток                   |   450.00 | 2020-01-12 | 2020-02-02 |
	    |       5 | Колесов С.П.            | Москва                        |   700.00 | 2020-02-01 | 2020-02-06 |
	    |       6 | Баранов П.Е.            | Москва                        |   700.00 | 2020-02-14 | 2020-02-22 |
	    |       7 | Абрамова К.А.           | Москва                        |   700.00 | 2020-02-23 | 2020-03-01 |
	    |       8 | Лебедев Т.К.            | Москва                        |   700.00 | 2020-03-03 | 2020-03-06 |
	    |       9 | Колесов С.П.            | Новосибирск                   |   450.00 | 2020-02-27 | 2020-03-12 |
	    |      10 | Семенов И.В.            | Санкт-Петербург               |   700.00 | 2020-03-29 | 2020-04-05 |
	    |      11 | Абрамова К.А.           | Москва                        |   700.00 | 2020-04-06 | 2020-04-14 |
	    |      12 | Баранов П.Е.            | Новосибирск                   |   450.00 | 2020-04-18 | 2020-05-04 |
	    |      13 | Лебедев Т.К.            | Томск                         |   450.00 | 2020-05-20 | 2020-05-31 |
	    |      14 | Семенов И.В.            | Санкт-Петербург               |   700.00 | 2020-06-01 | 2020-06-03 |
	    |      15 | Абрамова К.А.           | Санкт-Петербург               |   700.00 | 2020-05-28 | 2020-06-04 |
	    |      16 | Федорова А.Ю.           | Новосибирск                   |   450.00 | 2020-05-25 | 2020-06-04 |
	    |      17 | Колесов С.П.            | Новосибирск                   |   450.00 | 2020-06-03 | 2020-06-12 |
	    |      18 | Федорова А.Ю.           | Томск                         |   450.00 | 2020-06-20 | 2020-06-26 |
	    |      19 | Абрамова К.А.           | Владивосток                   |   450.00 | 2020-07-02 | 2020-07-13 |
	    |      20 | Баранов П.Е.            | Воронеж                       |   450.00 | 2020-07-19 | 2020-07-25 |
	    +---------+-------------------------+-------------------------------+----------+------------+------------+
	    20 rows in set (0.00 sec)
	Task:
	Вывести из таблицы trip информацию о командировках тех сотрудников, фамилия которых заканчивается на букву «а», в отсортированном по убыванию даты последнего дня командировки виде. В результат включить столбцы name, city, per_diem, date_first, date_last.
	Decision:
	mysql> SELECT name, city, per_diem, date_first, date_last
	FROM trip
	WHERE name LtuserE '%а %'
	ORDER BY date_last DESC;
	    +-------------------------+-------------------------------+----------+------------+------------+
	    | name                    | city                          | per_diem | date_first | date_last  |
	    +-------------------------+-------------------------------+----------+------------+------------+
	    | Абрамова К.А.           | Владивосток                   |   450.00 | 2020-07-02 | 2020-07-13 |
	    | Федорова А.Ю.           | Томск                         |   450.00 | 2020-06-20 | 2020-06-26 |
	    | Абрамова К.А.           | Санкт-Петербург               |   700.00 | 2020-05-28 | 2020-06-04 |
	    | Федорова А.Ю.           | Новосибирск                   |   450.00 | 2020-05-25 | 2020-06-04 |
	    | Абрамова К.А.           | Москва                        |   700.00 | 2020-04-06 | 2020-04-14 |
	    | Абрамова К.А.           | Москва                        |   700.00 | 2020-02-23 | 2020-03-01 |
	    | Абрамова К.А.           | Владивосток                   |   450.00 | 2020-01-14 | 2020-01-27 |
	    +-------------------------+-------------------------------+----------+------------+------------+
	    7 rows in set (0.01 sec)
	Task:
	Вывести в алфавитном порядке фамилии и инициалы тех сотрудников, которые были в командировке в Москве.
	Decision:
	mysql> SELECT DISTINCT name
	FROM trip
	WHERE city = 'Москва'
	ORDER BY name ASC;
	    +-------------------------+
	    | name                    |
	    +-------------------------+
	    | Абрамова К.А.           |
	    | Баранов П.Е.            |
	    | Колесов С.П.            |
	    | Лебедев Т.К.            |
	    | Семенов И.В.            |
	    +-------------------------+
	    5 rows in set (0.00 sec)
	Task:
	Для каждого города посчитать, сколько раз сотрудники в нем были.  Информацию вывести в отсортированном в алфавитном порядке по названию городов. Вычисляемый столбец назвать Количество.
	Decision:
	mysql> SELECT city, COUNT(name) AS Количество
	FROM trip
	GROUP BY city
	ORDER BY city ASC;
	    +-------------------------------+----------------------+
	    | city                          | Количество           |
	    +-------------------------------+----------------------+
	    | Владивосток                   |                    3 |
	    | Воронеж                       |                    1 |
	    | Москва                        |                    7 |
	    | Новосибирск                   |                    4 |
	    | Санкт-Петербург               |                    3 |
	    | Томск                         |                    2 |
	    +-------------------------------+----------------------+
	    6 rows in set (0.01 sec)
	Task:
	Вывести два города, в которых чаще всего были в командировках сотрудники. Вычисляемый столбец назвать Количество.
	Decision:
	mysql> SELECT city, COUNT(name) AS Количество
	FROM trip
	GROUP BY city
	ORDER BY Количество DESC
	LIMIT 2;
	    +------------------------+----------------------+
	    | city                   | Количество           |
	    +------------------------+----------------------+
	    | Москва                 |                    7 |
	    | Новосибирск            |                    4 |
	    +------------------------+----------------------+
	    2 rows in set (0.01 sec)
	Task:
	Вывести информацию о командировках во все города кроме Москвы и Санкт-Петербурга (фамилии и инициалы сотрудников, город ,  длительность командировки в днях, при этом первый и последний день относится к периоду командировки). Последний столбец назвать Длительность. Информацию вывести в упорядоченном по убыванию длительности поездки, а потом по убыванию названий городов (в обратном алфавитном порядке).
	Decision:
	mysql> SELECT name, city, (DATEDIFF(date_last, date_first)+1) AS Длительность
	FROM trip
	WHERE city <> 'Москва' AND city <> 'Санкт-Петербург'
	ORDER BY Длительность DESC;
	    +-------------------------+------------------------+--------------------------+
	    | name                    | city                   | Длительность             |
	    +-------------------------+------------------------+--------------------------+
	    | Ильиных Г.Р.            | Владивосток            |                       22 |
	    | Баранов П.Е.            | Новосибирск            |                       17 |
	    | Колесов С.П.            | Новосибирск            |                       15 |
	    | Абрамова К.А.           | Владивосток            |                       14 |
	    | Абрамова К.А.           | Владивосток            |                       12 |
	    | Лебедев Т.К.            | Томск                  |                       12 |
	    | Федорова А.Ю.           | Новосибирск            |                       11 |
	    | Колесов С.П.            | Новосибирск            |                       10 |
	    | Баранов П.Е.            | Воронеж                |                        7 |
	    | Федорова А.Ю.           | Томск                  |                        7 |
	    +-------------------------+------------------------+--------------------------+
	    10 rows in set (0.00 sec)
	Task:
	Вывести информацию о командировках сотрудника(ов), которые были самыми короткими по времени. В результат включить столбцы name, city, date_first, date_last.
	Decision:
	mysql> SELECT name, city, date_first, date_last
	FROM trip
	WHERE DATEDIFF(date_last,date_first)=(
	SELECT MIN(DATEDIFF(date_last,date_first))
	FROM trip);
	    +-----------------------+-------------------------------+------------+------------+
	    | name                  | city                          | date_first | date_last  |
	    +-----------------------+-------------------------------+------------+------------+
	    | Семенов И.В.          | Санкт-Петербург               | 2020-06-01 | 2020-06-03 |
	    +-----------------------+-------------------------------+------------+------------+
	    1 row in set (0.03 sec)
	Task:
	Вывести информацию о командировках, начало и конец которых относятся к одному месяцу (год может быть любой). В результат включить столбцы name, city, date_first, date_last. Строки отсортировать сначала  в алфавитном порядке по названию города, а затем по фамилии сотрудника .
	Decision:
	mysql> SELECT name, city, date_first, date_last
	FROM trip  
	WHERE MONTH(date_first)=MONTH(date_last)
	ORDER BY city, name ASC;
	    +-------------------------+-------------------------------+------------+------------+
	    | name                    | city                          | date_first | date_last  |
	    +-------------------------+-------------------------------+------------+------------+
	    | Абрамова К.А.           | Владивосток                   | 2020-01-14 | 2020-01-27 |
	    | Абрамова К.А.           | Владивосток                   | 2020-07-02 | 2020-07-13 |
	    | Баранов П.Е.            | Воронеж                       | 2020-07-19 | 2020-07-25 |
	    | Абрамова К.А.           | Москва                        | 2020-04-06 | 2020-04-14 |
	    | Баранов П.Е.            | Москва                        | 2020-01-12 | 2020-01-17 |
	    | Баранов П.Е.            | Москва                        | 2020-02-14 | 2020-02-22 |
	    | Колесов С.П.            | Москва                        | 2020-02-01 | 2020-02-06 |
	    | Лебедев Т.К.            | Москва                        | 2020-03-03 | 2020-03-06 |
	    | Семенов И.В.            | Москва                        | 2020-01-23 | 2020-01-31 |
	    | Колесов С.П.            | Новосибирск                   | 2020-06-03 | 2020-06-12 |
	    | Семенов И.В.            | Санкт-Петербург               | 2020-06-01 | 2020-06-03 |
	    | Лебедев Т.К.            | Томск                         | 2020-05-20 | 2020-05-31 |
	    | Федорова А.Ю.           | Томск                         | 2020-06-20 | 2020-06-26 |
	    +-------------------------+-------------------------------+------------+------------+
	    13 rows in set (0.00 sec)
	Task:
	Вывести название месяца и количество командировок для каждого месяца. Считаем, что командировка относится к некоторому месяцу, если она началась в этом месяце. Информацию вывести сначала в отсортированном по убыванию количества, а потом в алфавитном порядке по названию месяца виде. Название столбцов – Месяц и Количество.
	Decision:
	mysql> SELECT MONTHNAME(date_first) AS Месяц, COUNT(name) AS Количество
	FROM trip
	GROUP BY Месяц
	ORDER BY Количество DESC, Месяц ASC;
	    +------------+----------------------+
	    | Месяц      | Количество           |
	    +------------+----------------------+
	    | February   |                    4 |
	    | January    |                    4 |
	    | June       |                    3 |
	    | May        |                    3 |
	    | April      |                    2 |
	    | July       |                    2 |
	    | March      |                    2 |
	    +------------+----------------------+
	    7 rows in set (0.01 sec)
	Task:
	Вывести сумму суточных (произведение количества дней командировки и размера суточных) для командировок, первый день которых пришелся на февраль или март 2020 года. Значение суточных для каждой командировки занесено в столбец per_diem. Вывести фамилию и инициалы сотрудника, город, первый день командировки и сумму суточных. Последний столбец назвать Сумма. Информацию отсортировать сначала  в алфавитном порядке по фамилиям сотрудников, а затем по убыванию суммы суточных.
	Decision:
	mysql> SELECT name, city, date_first, (DATEDIFF(date_last, date_first)+1)*per_diem AS Сумма
	FROM trip
	WHERE YEAR(date_first)=2020 AND MONTH(date_first)=3 OR MONTH(date_first)=2
	ORDER BY name,Сумма DESC;
	    +-------------------------+-------------------------------+------------+------------+
	    | name                    | city                          | date_first | Сумма      |
	    +-------------------------+-------------------------------+------------+------------+
	    | Абрамова К.А.           | Москва                        | 2020-02-23 |    5600.00 |
	    | Баранов П.Е.            | Москва                        | 2020-02-14 |    6300.00 |
	    | Колесов С.П.            | Новосибирск                   | 2020-02-27 |    6750.00 |
	    | Колесов С.П.            | Москва                        | 2020-02-01 |    4200.00 |
	    | Лебедев Т.К.            | Москва                        | 2020-03-03 |    2800.00 |
	    | Семенов И.В.            | Санкт-Петербург               | 2020-03-29 |    5600.00 |
	    +-------------------------+-------------------------------+------------+------------+
	    6 rows in set (0.01 sec)
	Task:
	Вывести фамилию с инициалами и общую сумму суточных, полученных за все командировки для тех сотрудников, которые были в командировках больше чем 3 раза, в отсортированном по убыванию сумм суточных виде. Последний столбец назвать Сумма.
	Decision:
	mysql> SELECT name, SUM((DATEDIFF(date_last, date_first)+1)*per_diem) AS Сумма
	FROM trip
	GROUP BY name
	HAVING COUNT(name)>3
	ORDER BY Сумма DESC;
	    +-------------------------+------------+
	    | name                    | Сумма      |
	    +-------------------------+------------+
	    | Абрамова К.А.           |   29200.00 |
	    | Баранов П.Е.            |   21300.00 |
	    +-------------------------+------------+
	    2 rows in set (0.00 sec)
	Task:
	Создать таблицу штрафов содержит информацию о штрафах, начисленных водителям за нарушения правил дорожного движения (имя водителя, номер автомобиля, описание нарушения, сумма штрафа, дата нарушения и дата оплаты штрафа).
	Создать таблицу fine следующей структуры:
	fine_id - ключевой столбец целого типа с автоматическим увеличением значения ключа на 1
	name - строка длиной 30
	number_plate - строка длиной 6
	violation - строка длиной 50
	sum_fine - вещественное число, максимальная длина 8, количество знаков после запятой 2
	date_violation - дата
	date_payment - дата
	Decision:
	mysql> CREATE TABLE fine(fine_id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(30), number_plate VARCHAR(6), violation VARCHAR(50), sum_fine DECIMAL(8,2), date_violation DATE, date_payment DATE);
	    Query OK, 0 rows affected (0.33 sec)
	Task:
	В таблицу fine первые 5 строк уже занесены. Добавить в таблицу записи с ключевыми значениями 6, 7, 8.
	fine_id     name    number_plate    violation   sum_fine    date_violation  date_payment
	1   Баранов П.Е.    Р523ВТ  Превышение скорости (от 40 до 60)   500.00  2020-01-12  2020-01-17
	2   Абрамова К.А.   О111АВ  Проезд на запрещающий сигнал  1000.00     2020-01-14  2020-02-27
	3   Яковлев Г.Р.    Т330ТТ  Превышение скорости (от 20 до 40)   500.00  2020-01-23  2020-02-23
	4   Яковлев Г.Р.    М701АА  Превышение скорости (от 20 до 40)       2020-01-12   
	5   Колесов С.П.    К892АХ  Превышение скорости (от 20 до 40)       2020-02-01   
	6   Баранов П.Е.    Р523ВТ  Превышение скорости (от 40 до 60)       2020-02-14   
	7   Абрамова К.А.   О111АВ  Проезд на запрещающий сигнал      2020-02-23   
	8   Яковлев Г.Р.    Т330ТТ  Проезд на запрещающий сигнал      2020-03-03   
	Decision:
	mysql> INSERT INTO fine (name, number_plate, violation, sum_fine, date_violation, date_payment) VALUES
	('Баранов П.Е.', 'Р523ВТ', 'Превышение скорости(от 40 до 60)', 500.00, '2020-01-12', '2020-01-17'),
	('Абрамова К.А.', 'О111АВ', 'Проезд на запрещающий сигнал', 1000.00, '2020-01-14', '2020-02-27'),
	('Яковлев Г.Р.', 'Т330ТТ', 'Превышение скорости(от 20 до 40)', 500.00, '2020-01-23', '2020-02-23'),
	('Яковлев Г.Р.', 'М701АА', 'Превышение скорости(от 20 до 40)', Null, '2020-01-12', Null),
	('Колесов С.П.', 'К892АХ', 'Превышение скорости(от 20 до 40)', Null, '2020-02-01', Null);
	    Query OK, 5 rows affected (0.19 sec)
	    Records: 5  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM fine;
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    | fine_id | name                    | number_plate | violation                                              | sum_fine | date_violation | date_payment |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    |       1 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |   500.00 | 2020-01-12     | 2020-01-17   |
	    |       2 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-01-14     | 2020-02-27   |
	    |       3 | Яковлев Г.Р.            | Т330ТТ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-23     | 2020-02-23   |
	    |       4 | Яковлев Г.Р.            | М701АА       | Превышение скорости(от 20 до 40)                       |     NULL | 2020-01-12     | NULL         |
	    |       5 | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |     NULL | 2020-02-01     | NULL         |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    5 rows in set (0.00 sec)
	mysql> INSERT INTO fine (name, number_plate, violation, sum_fine, date_violation, date_payment) VALUES
	('Баранов П.Е.', 'Р523ВТ', 'Превышение скорости(от 40 до 60)', Null, '2020-02-14', Null),
	('Абрамова К.А.', 'О111АВ', 'Проезд на запрещающий сигнал', Null, '2020-02-23', Null),
	('Яковлев Г.Р.', 'Т330ТТ', 'Проезд на запрещающий сигнал', Null, '2020-03-03', Null);
	    Query OK, 3 rows affected (0.03 sec)
	    Records: 3  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM fine;
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    | fine_id | name                    | number_plate | violation                                              | sum_fine | date_violation | date_payment |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    |       1 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |   500.00 | 2020-01-12     | 2020-01-17   |
	    |       2 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-01-14     | 2020-02-27   |
	    |       3 | Яковлев Г.Р.            | Т330ТТ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-23     | 2020-02-23   |
	    |       4 | Яковлев Г.Р.            | М701АА       | Превышение скорости(от 20 до 40)                       |     NULL | 2020-01-12     | NULL         |
	    |       5 | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |     NULL | 2020-02-01     | NULL         |
	    |       6 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |     NULL | 2020-02-14     | NULL         |
	    |       7 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |     NULL | 2020-02-23     | NULL         |
	    |       8 | Яковлев Г.Р.            | Т330ТТ       | Проезд на запрещающий сигнал                           |     NULL | 2020-03-03     | NULL         |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    8 rows in set (0.00 sec)
	Task:
	Занести в таблицу fine суммы штрафов, которые должен оплатить водитель, в соответствии с данными из таблицы traffic_violation. При этом суммы заносить только в пустые поля столбца  sum_fine.
	    Таблица traffic_violationсоздана и заполнена.
	Важно! Сравнение значения столбца с пустым значением осуществляется с помощью оператора IS NULL.
	Decision:
	mysql> CREATE TABLE traffic_violation(violation_id INT PRIMARY KEY AUTO_INCREMENT, violation VARCHAR(50), sum_fine DECIMAL(8,2));
	    Query OK, 0 rows affected (0.20 sec)
	mysql> INSERT INTO traffic_violation (violation, sum_fine) VALUES ('Превышение скорости(от 20 до 40)', 500.00 ), ('Превышение скорости(от 40 до 60)', 1000.00), ('Проезд на запрещающий сигнал', 1000.00);
	    Query OK, 3 rows affected (0.12 sec)
	    Records: 3  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM traffic_violation;
	    +--------------+--------------------------------------------------------+----------+
	    | violation_id | violation                                              | sum_fine |
	    +--------------+--------------------------------------------------------+----------+
	    |            1 | Превышение скорости(от 20 до 40)                       |   500.00 |
	    |            2 | Превышение скорости(от 40 до 60)                       |  1000.00 |
	    |            3 | Проезд на запрещающий сигнал                           |  1000.00 |
	    +--------------+--------------------------------------------------------+----------+
	    3 rows in set (0.00 sec)
	mysql> SELECT * FROM fine;
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    | fine_id | name                    | number_plate | violation                                              | sum_fine | date_violation | date_payment |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    |       1 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |   500.00 | 2020-01-12     | 2020-01-17   |
	    |       2 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-01-14     | 2020-02-27   |
	    |       3 | Яковлев Г.Р.            | Т330ТТ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-23     | 2020-02-23   |
	    |       4 | Яковлев Г.Р.            | М701АА       | Превышение скорости(от 20 до 40)                       |     NULL | 2020-01-12     | NULL         |
	    |       5 | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |     NULL | 2020-02-01     | NULL         |
	    |       6 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |     NULL | 2020-02-14     | NULL         |
	    |       7 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |     NULL | 2020-02-23     | NULL         |
	    |       8 | Яковлев Г.Р.            | Т330ТТ       | Проезд на запрещающий сигнал                           |     NULL | 2020-03-03     | NULL         |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    8 rows in set (0.00 sec)
	mysql> UPDATE fine, traffic_violation
	SET fine.sum_fine=traffic_violation.sum_fine
	WHERE (fine.sum_fine IS NULL) AND (fine.violation=traffic_violation.violation);
	    Query OK, 5 rows affected (0.02 sec)
	    Rows matched: 5  Changed: 5  Warnings: 0
	mysql> SELECT * FROM fine;
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    | fine_id | name                    | number_plate | violation                                              | sum_fine | date_violation | date_payment |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    |       1 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |   500.00 | 2020-01-12     | 2020-01-17   |
	    |       2 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-01-14     | 2020-02-27   |
	    |       3 | Яковлев Г.Р.            | Т330ТТ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-23     | 2020-02-23   |
	    |       4 | Яковлев Г.Р.            | М701АА       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-12     | NULL         |
	    |       5 | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-02-01     | NULL         |
	    |       6 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |  1000.00 | 2020-02-14     | NULL         |
	    |       7 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-02-23     | NULL         |
	    |       8 | Яковлев Г.Р.            | Т330ТТ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-03-03     | NULL         |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    8 rows in set (0.01 sec)
	Task:
	Вывести фамилию, номер машины и нарушение только для тех водителей, которые на одной машине нарушили одно и то же правило   два и более раз. При этом учитывать все нарушения, независимо от того оплачены они или нет. Информацию отсортировать в алфавитном порядке, сначала по фамилии водителя, потом по номеру машины и, наконец, по нарушению.
	Decision:
	mysql> SELECT * FROM fine;
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    | fine_id | name                    | number_plate | violation                                              | sum_fine | date_violation | date_payment |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    |       1 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |   500.00 | 2020-01-12     | 2020-01-17   |
	    |       2 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-01-14     | 2020-02-27   |
	    |       3 | Яковлев Г.Р.            | Т330ТТ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-23     | 2020-02-23   |
	    |       4 | Яковлев Г.Р.            | М701АА       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-12     | NULL         |
	    |       5 | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-02-01     | NULL         |
	    |       6 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |  1000.00 | 2020-02-14     | NULL         |
	    |       7 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-02-23     | NULL         |
	    |       8 | Яковлев Г.Р.            | Т330ТТ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-03-03     | NULL         |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    8 rows in set (0.01 sec)
	mysql> SELECT name, number_plate, violation, count(*)
	FROM fine
	GROUP BY name, number_plate, violation;
	    +-------------------------+--------------+--------------------------------------------------------+----------+
	    | name                    | number_plate | violation                                              | count(*) |
	    +-------------------------+--------------+--------------------------------------------------------+----------+
	    | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |        2 |
	    | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |        2 |
	    | Яковлев Г.Р.            | Т330ТТ       | Превышение скорости(от 20 до 40)                       |        1 |
	    | Яковлев Г.Р.            | М701АА       | Превышение скорости(от 20 до 40)                       |        1 |
	    | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |        1 |
	    | Яковлев Г.Р.            | Т330ТТ       | Проезд на запрещающий сигнал                           |        1 |
	    +-------------------------+--------------+--------------------------------------------------------+----------+
	    6 rows in set (0.00 sec)
	mysql> SELECT name, number_plate, violation, count(*)
	FROM fine
	GROUP BY name, number_plate, violation
	HAVING count(*) >= 2;
	    +-------------------------+--------------+--------------------------------------------------------+----------+
	    | name                    | number_plate | violation                                              | count(*) |
	    +-------------------------+--------------+--------------------------------------------------------+----------+
	    | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |        2 |
	    | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |        2 |
	    +-------------------------+--------------+--------------------------------------------------------+----------+
	    2 rows in set (0.00 sec)
	mysql> SELECT name, number_plate, violation
	FROM fine
	GROUP BY name, number_plate, violation
	HAVING count(violation)>1
	ORDER BY name,violation,number_plate desc;
	    +-------------------------+--------------+--------------------------------------------------------+----------+
	    | name                    | number_plate | violation                                              | count(*) |
	    +-------------------------+--------------+--------------------------------------------------------+----------+
	    | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |        2 |
	    | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |        2 |
	    +-------------------------+--------------+--------------------------------------------------------+----------+
	    2 rows in set (0.00 sec)
	Task:
	В таблице fine увеличить в два раза сумму неоплаченных штрафов для отобранных на предыдущем шаге записей.
	Для всех нарушений, по которым штраф еще не оплачен, (тех, у которых date_payment имеет пустое значение Null), необходимо проверить, является ли данное нарушение для водителя и машины повторным, если да –  увеличить штраф в два раза.
	Если водитель совершил нарушение на другой машине, ему увеличивать штраф не нужно.
	Если несколько повторных нарушений не оплачены, то штраф увеличить для всех.
	Decision:
	mysql> SELECT * FROM fine;
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    | fine_id | name                    | number_plate | violation                                              | sum_fine | date_violation | date_payment |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    |       1 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |   500.00 | 2020-01-12     | 2020-01-17   |
	    |       2 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-01-14     | 2020-02-27   |
	    |       3 | Яковлев Г.Р.            | Т330ТТ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-23     | 2020-02-23   |
	    |       4 | Яковлев Г.Р.            | М701АА       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-12     | NULL         |
	    |       5 | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-02-01     | NULL         |
	    |       6 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |  1000.00 | 2020-02-14     | NULL         |
	    |       7 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-02-23     | NULL         |
	    |       8 | Яковлев Г.Р.            | Т330ТТ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-03-03     | NULL         |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    8 rows in set (0.01 sec)
	mysql> UPDATE fine, (
	    SELECT name, number_plate, violation
	    FROM fine
	    GROUP BY name, number_plate, violation
	    HAVING count(violation)>1
	    ORDER BY name,violation,number_plate desc) AS query_in
	SET sum_fine = IF(date_payment IS NULL,sum_fine*2,sum_fine)
	WHERE fine.name = query_in.name;
	    Query OK, 2 rows affected (0.02 sec)
	    Rows matched: 4  Changed: 2  Warnings: 0
	mysql> SElECT * FROM fine;
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    | fine_id | name                    | number_plate | violation                                              | sum_fine | date_violation | date_payment |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    |       1 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |   500.00 | 2020-01-12     | 2020-01-17   |
	    |       2 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-01-14     | 2020-02-27   |
	    |       3 | Яковлев Г.Р.            | Т330ТТ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-23     | 2020-02-23   |
	    |       4 | Яковлев Г.Р.            | М701АА       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-12     | NULL         |
	    |       5 | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-02-01     | NULL         |
	    |       6 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |  2000.00 | 2020-02-14     | NULL         |
	    |       7 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  2000.00 | 2020-02-23     | NULL         |
	    |       8 | Яковлев Г.Р.            | Т330ТТ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-03-03     | NULL         |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    8 rows in set (0.01 sec)
	Task:
	Водители оплачивают свои штрафы. В таблице payment занесены даты их оплаты:
	payment_id  name    number_plate    violation   date_violation  date_payment
	1   Яковлев Г.Р.    М701АА  Превышение скорости(от 20 до 40)   2020-01-12  2020-01-22
	2   Баранов П.Е.    Р523ВТ  Превышение скорости(от 40 до 60)   2020-02-14  2020-03-06
	3   Яковлев Г.Р.    Т330ТТ  Проезд на запрещающий сигнал  2020-03-03  2020-03-23
	Необходимо:
	    в таблицу fine занести дату оплаты соответствующего штрафа из таблицы payment;
	    уменьшить начисленный штраф в таблице fine в два раза  (только для тех штрафов, информация о которых занесена в таблицу payment) , если оплата произведена не позднее 20 дней со дня нарушения.
	Decision:
	mysql> CREATE TABLE payment(payment_id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(30), number_plate VARCHAR(6), violation VARCHAR(50), date_violation DATE, date_payment DATE);
	    Query OK, 0 rows affected (0.24 sec)
	mysql> INSERT INTO fine (name, number_plate, violation, date_violation, date_payment) VALUES
	('Яковлев Г.Р.', 'М701АА', 'Превышение скорости(от 20 до 40)', '2020-01-12', '2020-01-22'),
	('Баранов П.Е.', 'Р523ВТ', 'Превышение скорости(от 40 до 60)', '2020-02-14', '2020-03-06'),
	('Яковлев Г.Р.', 'Т330ТТ', 'Проезд на запрещающий сигнал', '2020-03-03', '2020-03-23');
	    Query OK, 3 rows affected (0.03 sec)
	    Records: 3  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM payment;
	    Empty set (0.00 sec)
	mysql> INSERT INTO payment (name, number_plate, violation, date_violation, date_payment) VALUES ('Яковлев Г.Р.', 'М701АА', 'Превышение скорости(от 20 до 40)', '2020-01-
	12', '2020-01-22'), ('Баранов П.Е.', 'Р523ВТ', 'Превышение скорости(от 40 до 60)', '2020-02-14', '2020-03-06'), ('Яковлев Г.Р.', 'Т330ТТ', 'Проезд на запрещающий сигнал
	', '2020-03-03', '2020-03-23');
	    Query OK, 3 rows affected (0.11 sec)
	    Records: 3  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM payment;
	    +------------+-----------------------+--------------+--------------------------------------------------------+----------------+--------------+
	    | payment_id | name                  | number_plate | violation                                              | date_violation | date_payment |
	    +------------+-----------------------+--------------+--------------------------------------------------------+----------------+--------------+
	    |          1 | Яковлев Г.Р.          | М701АА       | Превышение скорости(от 20 до 40)                       | 2020-01-12     | 2020-01-22   |
	    |          2 | Баранов П.Е.          | Р523ВТ       | Превышение скорости(от 40 до 60)                       | 2020-02-14     | 2020-03-06   |
	    |          3 | Яковлев Г.Р.          | Т330ТТ       | Проезд на запрещающий сигнал                           | 2020-03-03     | 2020-03-23   |
	    +------------+-----------------------+--------------+--------------------------------------------------------+----------------+--------------+
	    3 rows in set (0.00 sec)
	mysql> SELECT * FROM fine;
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    | fine_id | name                    | number_plate | violation                                              | sum_fine | date_violation | date_payment |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    |       1 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |   500.00 | 2020-01-12     | 2020-01-17   |
	    |       2 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-01-14     | 2020-02-27   |
	    |       3 | Яковлев Г.Р.            | Т330ТТ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-23     | 2020-02-23   |
	    |       4 | Яковлев Г.Р.            | М701АА       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-12     | NULL         |
	    |       5 | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-02-01     | NULL         |
	    |       6 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |  2000.00 | 2020-02-14     | NULL         |
	    |       7 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  2000.00 | 2020-02-23     | NULL         |
	    |       8 | Яковлев Г.Р.            | Т330ТТ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-03-03     | NULL         |
	    |       9 | Яковлев Г.Р.            | М701АА       | Превышение скорости(от 20 до 40)                       |     NULL | 2020-01-12     | 2020-01-22   |
	    |      10 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |     NULL | 2020-02-14     | 2020-03-06   |
	    |      11 | Яковлев Г.Р.            | Т330ТТ       | Проезд на запрещающий сигнал                           |     NULL | 2020-03-03     | 2020-03-23   |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    11 rows in set (0.00 sec)
	mysql> DELETE FROM fine WHERE sum_fine IS Null;
	    Query OK, 3 rows affected (0.03 sec)
	mysql> SELECT * FROM fine;
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    | fine_id | name                    | number_plate | violation                                              | sum_fine | date_violation | date_payment |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    |       1 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |   500.00 | 2020-01-12     | 2020-01-17   |
	    |       2 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-01-14     | 2020-02-27   |
	    |       3 | Яковлев Г.Р.            | Т330ТТ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-23     | 2020-02-23   |
	    |       4 | Яковлев Г.Р.            | М701АА       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-12     | NULL         |
	    |       5 | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-02-01     | NULL         |
	    |       6 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |  2000.00 | 2020-02-14     | NULL         |
	    |       7 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  2000.00 | 2020-02-23     | NULL         |
	    |       8 | Яковлев Г.Р.            | Т330ТТ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-03-03     | NULL         |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    8 rows in set (0.01 sec)
	    Query OK, 3 rows affected (0.07 sec)
	    Rows matched: 3  Changed: 3  Warnings: 0
	mysql> SELECT * FROM fine;
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    | fine_id | name                    | number_plate | violation                                              | sum_fine | date_violation | date_payment |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    |       1 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |   500.00 | 2020-01-12     | 2020-01-17   |
	    |       2 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-01-14     | 2020-02-27   |
	    |       3 | Яковлев Г.Р.            | Т330ТТ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-23     | 2020-02-23   |
	    |       4 | Яковлев Г.Р.            | М701АА       | Превышение скорости(от 20 до 40)                       |   250.00 | 2020-01-12     | 2020-01-22   |
	    |       5 | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-02-01     | NULL         |
	    |       6 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |  2000.00 | 2020-02-14     | 2020-03-06   |
	    |       7 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  2000.00 | 2020-02-23     | NULL         |
	    |       8 | Яковлев Г.Р.            | Т330ТТ       | Проезд на запрещающий сигнал                           |   500.00 | 2020-03-03     | 2020-03-23   |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    8 rows in set (0.00 sec)
	Task:
	Создать новую таблицу back_payment, куда внести информацию о неоплаченных штрафах (Фамилию и инициалы водителя, номер машины, нарушение, сумму штрафа  и  дату нарушения) из таблицы fine.
	Decision:
	mysql> CREATE TABLE back_payment AS
	SELECT name, number_plate, violation, sum_fine, date_violation
	FROM fine
	WHERE date_payment IS NULL;
	    Query OK, 2 rows affected (0.43 sec)
	    Records: 2  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM back_payment;
	    +-------------------------+--------------+--------------------------------------------------------+----------+----------------+
	    | name                    | number_plate | violation                                              | sum_fine | date_violation |
	    +-------------------------+--------------+--------------------------------------------------------+----------+----------------+
	    | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-02-01     |
	    | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  2000.00 | 2020-02-23     |
	    +-------------------------+--------------+--------------------------------------------------------+----------+----------------+
	    2 rows in set (0.00 sec)
	Task:
	Удалить из таблицы fine информацию о нарушениях, совершенных раньше 1 февраля 2020 года.
	Decision:
	mysql> SELECT * FROM fine;
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    | fine_id | name                    | number_plate | violation                                              | sum_fine | date_violation | date_payment |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    |       1 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |   500.00 | 2020-01-12     | 2020-01-17   |
	    |       2 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  1000.00 | 2020-01-14     | 2020-02-27   |
	    |       3 | Яковлев Г.Р.            | Т330ТТ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-01-23     | 2020-02-23   |
	    |       4 | Яковлев Г.Р.            | М701АА       | Превышение скорости(от 20 до 40)                       |   250.00 | 2020-01-12     | 2020-01-22   |
	    |       5 | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-02-01     | NULL         |
	    |       6 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |  2000.00 | 2020-02-14     | 2020-03-06   |
	    |       7 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  2000.00 | 2020-02-23     | NULL         |
	    |       8 | Яковлев Г.Р.            | Т330ТТ       | Проезд на запрещающий сигнал                           |   500.00 | 2020-03-03     | 2020-03-23   |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    8 rows in set (0.00 sec)
	mysql> DELETE FROM fine
	WHERE date_violation < '2020-02-01';
	    Query OK, 4 rows affected (0.13 sec)
	mysql> SELECT * FROM fine;
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    | fine_id | name                    | number_plate | violation                                              | sum_fine | date_violation | date_payment |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    |       5 | Колесов С.П.            | К892АХ       | Превышение скорости(от 20 до 40)                       |   500.00 | 2020-02-01     | NULL         |
	    |       6 | Баранов П.Е.            | Р523ВТ       | Превышение скорости(от 40 до 60)                       |  2000.00 | 2020-02-14     | 2020-03-06   |
	    |       7 | Абрамова К.А.           | О111АВ       | Проезд на запрещающий сигнал                           |  2000.00 | 2020-02-23     | NULL         |
	    |       8 | Яковлев Г.Р.            | Т330ТТ       | Проезд на запрещающий сигнал                           |   500.00 | 2020-03-03     | 2020-03-23   |
	    +---------+-------------------------+--------------+--------------------------------------------------------+----------+----------------+--------------+
	    4 rows in set (0.00 sec)
	Task:
	В интернет-магазине продаются книги. Каждая книга имеет название, написана одним автором, относится к одному жанру, имеет определенную цену. В магазине доступно по нескольку экземпляров каждой книги.
	Покупатель регистрируется на сайте интернет-магазина, указывает свои имя и фамилию, адрес электронной почты и город проживания. Он может сформировать один или несколько заказов, написать несколько пожеланий к каждому заказу. Каждый заказ включает в себя одну или несколько книг, каждую книгу можно заказать в нескольких экземплярах. Затем заказ проходит ряд последовательных этапов (операций): он оплачивается, упаковывается, передается курьеру или транспортной компании для транспортировки и, наконец, доставляется покупателю. Дата каждой операции фиксирована. Среднее время доставки книг известно для каждого города.
	В то же время магазин ведет учет книг, их количество уменьшается при покупке, увеличивается при поступлении товара, когда количество исчерпано, размещен заказ и т.д. Разработать базу данных Книжный интернет-магазин
	Decision:
	mysql> CREATE DATABASE OnlineBookStore;
	    Query OK, 1 row affected (0.32 sec)
	mysql> show databases;
	    +--------------------+
	    | Database           |
	    +--------------------+
	    | OnlineBookStore    |
	    | information_schema |
	    | mysql              |
	    | performance_schema |
	    | sys                |
	    | testbdserver       |
	    +--------------------+
	    6 rows in set (0.01 sec)
	mysql> USE OnlineBookStore;
	    Database changed
	Task:
	Установите связи между информационными объектами Жанр и Книга, Город и Клиент, Заказ и Этапы. Выберите верную концептуальную схему.
	Наполнить таблицы информацией.
	Структура и наполнение таблиц базы данных Интернет-магазин книг»
	Таблица author (создание, заполнение):
	    author_id     name_author
	    1     Булгаков М.А.
	    2     Достоевский Ф.М.
	    3     Есенин С.А.
	    4     Пастернак Б.Л.
	    5     Лермонтов М.Ю.
	Таблица genre (создание, заполнение, рассмотрено в качестве примеров):
	    genre_id     name_genre
	    1     Роман
	    2     Поэзия
	    3     Приключения
	Таблица book (создание, заполнение):
	    book_id     title     author_id     genre_id     price     amount
	    1     Мастер и Маргарита     1     1     670.99     3
	    2     Белая гвардия     1     1     540.50     5
	    3     Идиот     2     1     460.00     10
	    4     Братья Карамазовы     2     1     799.01     2
	    5     Игрок     2     1     480.50     10
	    6     Стихотворения и поэмы     3     2     650.00     15
	    7     Черный человек     3     2     570.20     6
	    8     Лирика     4     2     518.99     2
	Таблица city (в последнем столбце указано примерное количество дней, необходимое для доставки товара в каждый город):
	    city_id     name_city     days_delivery
	    INT PRIMARY KEY
	    AUTO_INCREMENT     VARCHAR(30)     INT
	    1     Москва     5
	    2     Санкт-Петербург     3
	    3     Владивосток     12
	Таблица client:
	    client_id     name_client     city_id     email
	    INT PRIMARY KEY
	    AUTO_INCREMENT     VARCHAR(50)     INT     VARCHAR(30)
	    1     Баранов Павел     3     baranov@test
	    2     Абрамова Катя     1     abramova@test
	    3     Семенонов Иван     2     semenov@test
	    4     Яковлева Галина     1     yakovleva@test
	Таблица buy (столбец buy_description предназначен для пожеланий покупателя, которые он хочет добавить в свой заказ, если пожеланий нет - поле остается пустым):
	    buy_id     buy_description     client_id
	    INT PRIMARY KEY
	    AUTO_INCREMENT     VARCHAR(100)     INT
	    1     Доставка только вечером     1
	    2           3
	    3     Упаковать каждую книгу по отдельности     2
	    4           1
	Таблица buy_book:
	    buy_book_id     buy_id     book_id     amount
	    INT PRIMARY KEY
	    AUTO_INCREMENT     INT     INT     INT
	    1     1     1     1
	    2     1     7     2
	    3     1     3     1
	    4     2     8     2
	    5     3     3     2
	    6     3     2     1
	    7     3     1     1
	    8     4     5     1
	Таблица step:
	    step_id     name_step
	    INT PRIMARY KEY
	    AUTO_INCREMENT     VARCHAR(30)
	    1     Оплата
	    2     Упаковка
	    3     Транспортировка
	    4     Доставка
	Таблица buy_step ( если столбец date_step_end не заполнен (имеет значение Null), это означает что операция еще не выполнена, например для заказа с id 2, книги переданы для доставки 2020-03-02, но еще не доставлены):
	    buy_step_id     buy_id     step_id     date_step_beg     date_step_end
	    INT PRIMARY KEY
	    AUTO_INCREMENT     INT     INT     DATE     DATE
	    1      1     1     2020-02-20     2020-02-20
	    2     1     2     2020-02-20     2020-02-21
	    3     1     3     2020-02-22     2020-03-07
	    4     1     4     2020-03-08     2020-03-08
	    5     2     1     2020-02-28     2020-02-28
	    6     2     2     2020-02-29     2020-03-01
	    7     2     3     2020-03-02     
	    8     2     4           
	    9     3     1     2020-03-05     2020-03-05
	    10     3     2     2020-03-05     2020-03-06
	    11     3     3     2020-03-06     2020-03-10
	    12     3     4     2020-03-11     
	    13     4     1     2020-03-20     
	    14     4     2           
	    15     4     3           
	    16     4     4     
	Decision:
	mysql> CREATE TABLE author( author_id INT PRIMARY KEY AUTO_INCREMENT, name_author VARCHAR(30));
	    Query OK, 0 rows affected (0.14 sec)
	mysql> INSERT INTO author (name_author) VALUES  ('Булгаков М.А.'), ('Достоевский Ф.М.'), ('Есенин С.А.'), ('Пастернак Б.Л.'), ('Лермонтов М.Ю.');
	    Query OK, 5 rows affected (0.04 sec)
	    Records: 5  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    |         5 | Лермонтов М.Ю.                |
	    +-----------+-------------------------------+
	    5 rows in set (0.00 sec)
	mysql> CREATE TABLE genre(genre_id INT PRIMARY KEY AUTO_INCREMENT, name_genre VARCHAR(30));
	mysql> INSERT INTO genre(name_genre) VALUES  ('Роман'), ('Поэзия'), ('Приключения');
	    Query OK, 3 rows affected (0.14 sec)
	    Records: 3  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM genre;
	    +----------+------------------------+
	    | genre_id | name_genre             |
	    +----------+------------------------+
	    |        1 | Роман                  |
	    |        2 | Поэзия                 |
	    |        3 | Приключения            |
	    +----------+------------------------+
	    3 rows in set (0.00 sec)
	mysql> CREATE TABLE book
	(
	book_id INT PRIMARY KEY AUTO_INCREMENT,
	    title VARCHAR(50),
	    author_id INT NOT NULL,
	    genre_id INT,
	    price DECIMAL(8, 2),
	    amount INT,
	    FOREIGN KEY (author_id)
	        REFERENCES author (author_id)
	        ON DELETE CASCADE,
	    FOREIGN KEY (genre_id)
	        REFERENCES genre (genre_id)
	        ON DELETE SET NULL
	);
	    Query OK, 0 rows affected (0.24 sec)
	mysql> INSERT INTO book (title, author_id, genre_id, price, amount)
	VALUES
	('Мастер и Маргарита', 1, 1, 670.99, 3),
	('Белая гвардия ', 1, 1, 540.50, 5),
	('Идиот', 2, 1, 460.00, 10),
	('Братья Карамазовы', 2, 1, 799.01, 2),
	('Игрок', 2, 1, 480.50, 10),
	('Стихотворения и поэмы', 3, 2, 650.00, 15),
	('Черный человек', 3, 2, 570.20, 6),
	('Лирика', 4, 2, 518.99, 2);
	    Query OK, 8 rows affected (0.06 sec)
	    Records: 8  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       1 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |       2 | Белая гвардия                            |         1 |        1 | 540.50 |      5 |
	    |       3 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        |         2 |        1 | 799.01 |      2 |
	    |       5 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |       6 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |       7 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	    |       8 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> CREATE TABLE city(
	    city_id INT PRIMARY KEY AUTO_INCREMENT,
	    name_city VARCHAR(30),
	    days_delivery INT
	);
	    Query OK, 0 rows affected (0.25 sec)
	mysql> INSERT INTO city(name_city, days_delivery)
	VALUES
	('Москва', 5),
	('Санкт-Петербург', 3),
	('Владивосток', 12);
	    Query OK, 3 rows affected (0.06 sec)
	    Records: 3  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM city;
	    +---------+-------------------------------+---------------+
	    | city_id | name_city                     | days_delivery |
	    +---------+-------------------------------+---------------+
	    |       1 | Москва                        |             5 |
	    |       2 | Санкт-Петербург               |             3 |
	    |       3 | Владивосток                   |            12 |
	    +---------+-------------------------------+---------------+
	    3 rows in set (0.00 sec)
	mysql> CREATE TABLE client (
	    client_id INT PRIMARY KEY AUTO_INCREMENT,
	    name_client VARCHAR(50),
	    city_id INT,
	    email VARCHAR(30),
	    FOREIGN KEY (city_id) REFERENCES city (city_id)
	);
	    Query OK, 0 rows affected (0.24 sec)
	mysql> INSERT INTO client(name_client, city_id, email)
	VALUES
	('Баранов Павел', 3, 'baranov@test'),
	('Абрамова Катя', 1, 'abramova@test'),
	('Семенонов Иван', 2, 'semenov@test'),
	('Яковлева Галина', 1, 'yakovleva@test');
	    Query OK, 4 rows affected (0.12 sec)
	    Records: 4  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM client;
	    +-----------+-------------------------------+---------+----------------+
	    | client_id | name_client                   | city_id | email          |
	    +-----------+-------------------------------+---------+----------------+
	    |         1 | Баранов Павел                 |       3 | baranov@test   |
	    |         2 | Абрамова Катя                 |       1 | abramova@test  |
	    |         3 | Семенонов Иван                |       2 | semenov@test   |
	    |         4 | Яковлева Галина               |       1 | yakovleva@test |
	    +-----------+-------------------------------+---------+----------------+
	    4 rows in set (0.01 sec)
	mysql> CREATE TABLE buy(
	    buy_id INT PRIMARY KEY AUTO_INCREMENT,
	    buy_description VARCHAR(100),
	    client_id INT,
	    FOREIGN KEY (client_id) REFERENCES client (client_id)
	);
	    Query OK, 0 rows affected (0.24 sec)
	mysql> INSERT INTO buy (buy_description, client_id)
	VALUES
	('Доставка только вечером', 1),
	(NULL, 3),
	('Упаковать каждую книгу по отдельности', 2),
	(NULL, 1);
	    Query OK, 4 rows affected (0.04 sec)
	    Records: 4  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM buy;
	    +--------+------------------------------------------------------------------------+-----------+
	    | buy_id | buy_description                                                        | client_id |
	    +--------+------------------------------------------------------------------------+-----------+
	    |      1 | Доставка только вечером                                                |         1 |
	    |      2 | NULL                                                                   |         3 |
	    |      3 | Упаковать каждую книгу по отдельности                                  |         2 |
	    |      4 | NULL                                                                   |         1 |
	    +--------+------------------------------------------------------------------------+-----------+
	    4 rows in set (0.00 sec)
	mysql> CREATE TABLE buy_book (
	    buy_book_id INT PRIMARY KEY AUTO_INCREMENT,
	    buy_id INT,
	    book_id INT,
	    amount INT,
	    FOREIGN KEY (buy_id) REFERENCES buy (buy_id),
	    FOREIGN KEY (book_id) REFERENCES book (book_id)
	);
	    Query OK, 0 rows affected (0.24 sec)
	mysql> INSERT INTO buy_book(buy_id, book_id, amount)
	VALUES
	(1, 1, 1),
	(1, 7, 2),
	(1, 3, 1),
	(2, 8, 2),
	(3, 3, 2),
	(3, 2, 1),
	(3, 1, 1),
	(4, 5, 1);
	    Query OK, 8 rows affected (0.03 sec)
	    Records: 8  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM buy_book;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    |           1 |      1 |       1 |      1 |
	    |           2 |      1 |       7 |      2 |
	    |           3 |      1 |       3 |      1 |
	    |           4 |      2 |       8 |      2 |
	    |           5 |      3 |       3 |      2 |
	    |           6 |      3 |       2 |      1 |
	    |           7 |      3 |       1 |      1 |
	    |           8 |      4 |       5 |      1 |
	    +-------------+--------+---------+--------+
	    8 rows in set (0.00 sec)
	mysql> CREATE TABLE step (
	    step_id INT PRIMARY KEY AUTO_INCREMENT,
	    name_step VARCHAR(30)
	);
	    Query OK, 0 rows affected (0.18 sec)
	mysql> INSERT INTO step(name_step)
	VALUES
	('Оплата'),
	('Упаковка'),
	('Транспортировка'),
	('Доставка');
	    Query OK, 4 rows affected (0.03 sec)
	    Records: 4  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM step;
	    +---------+--------------------------------+
	    | step_id | name_step                      |
	    +---------+--------------------------------+
	    |       1 | Оплата                         |
	    |       2 | Упаковка                       |
	    |       3 | Транспортировка                |
	    |       4 | Доставка                       |
	    +---------+--------------------------------+
	    4 rows in set (0.00 sec)
	mysql> CREATE TABLE buy_step (
	    buy_step_id INT PRIMARY KEY AUTO_INCREMENT,
	    buy_id INT,
	    step_id INT,
	    date_step_beg DATE,
	    date_step_end DATE,
	    FOREIGN KEY (buy_id) REFERENCES buy (buy_id),
	    FOREIGN KEY (step_id) REFERENCES step (step_id)
	);
	    Query OK, 0 rows affected (0.26 sec)
	mysql> INSERT INTO buy_step(buy_id, step_id, date_step_beg, date_step_end)
	VALUES (1, 1, '2020-02-20', '2020-02-20'),
	(1, 2, '2020-02-20', '2020-02-21'),
	(1, 3, '2020-02-22', '2020-03-07'),
	(1, 4, '2020-03-08', '2020-03-08'),
	(2, 1, '2020-02-28', '2020-02-28'),
	(2, 2, '2020-02-29', '2020-03-01'),
	(2, 3, '2020-03-02', NULL),
	(2, 4, NULL, NULL),
	(3, 1, '2020-03-05', '2020-03-05'),
	(3, 2, '2020-03-05', '2020-03-06'),
	(3, 3, '2020-03-06', '2020-03-10'),
	(3, 4, '2020-03-11', NULL),
	(4, 1, '2020-03-20', NULL),
	(4, 2, NULL, NULL),
	(4, 3, NULL, NULL),
	(4, 4, NULL, NULL);
	    Query OK, 16 rows affected (0.14 sec)
	    Records: 16  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM buy_step;
	    +-------------+--------+---------+---------------+---------------+
	    | buy_step_id | buy_id | step_id | date_step_beg | date_step_end |
	    +-------------+--------+---------+---------------+---------------+
	    |           1 |      1 |       1 | 2020-02-20    | 2020-02-20    |
	    |           2 |      1 |       2 | 2020-02-20    | 2020-02-21    |
	    |           3 |      1 |       3 | 2020-02-22    | 2020-03-07    |
	    |           4 |      1 |       4 | 2020-03-08    | 2020-03-08    |
	    |           5 |      2 |       1 | 2020-02-28    | 2020-02-28    |
	    |           6 |      2 |       2 | 2020-02-29    | 2020-03-01    |
	    |           7 |      2 |       3 | 2020-03-02    | NULL          |
	    |           8 |      2 |       4 | NULL          | NULL          |
	    |           9 |      3 |       1 | 2020-03-05    | 2020-03-05    |
	    |          10 |      3 |       2 | 2020-03-05    | 2020-03-06    |
	    |          11 |      3 |       3 | 2020-03-06    | 2020-03-10    |
	    |          12 |      3 |       4 | 2020-03-11    | NULL          |
	    |          13 |      4 |       1 | 2020-03-20    | NULL          |
	    |          14 |      4 |       2 | NULL          | NULL          |
	    |          15 |      4 |       3 | NULL          | NULL          |
	    |          16 |      4 |       4 | NULL          | NULL          |
	    +-------------+--------+---------+---------------+---------------+
	    16 rows in set (0.00 sec)
	Task:
	Вывести все заказы Баранова Павла (id заказа, какие книги, по какой цене и в каком количестве он заказал) в отсортированном по номеру заказа и названиям книг виде.
	Decision:
	mysql> SELECT client_id, name_client FROM client;
	    +-----------+-------------------------------+
	    | client_id | name_client                   |
	    +-----------+-------------------------------+
	    |         1 | Баранов Павел                 |
	    |         2 | Абрамова Катя                 |
	    |         3 | Семенонов Иван                |
	    |         4 | Яковлева Галина               |
	    +-----------+-------------------------------+
	    4 rows in set (0.01 sec)
	mysql> SELECT buy_id, client_id FROM buy;
	    +--------+-----------+
	    | buy_id | client_id |
	    +--------+-----------+
	    |      1 |         1 |
	    |      4 |         1 |
	    |      3 |         2 |
	    |      2 |         3 |
	    +--------+-----------+
	    4 rows in set (0.00 sec)
	mysql> SELECT buy_book_id, buy_id, book_id, amount FROM buy_book;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    |           1 |      1 |       1 |      1 |
	    |           2 |      1 |       7 |      2 |
	    |           3 |      1 |       3 |      1 |
	    |           4 |      2 |       8 |      2 |
	    |           5 |      3 |       3 |      2 |
	    |           6 |      3 |       2 |      1 |
	    |           7 |      3 |       1 |      1 |
	    |           8 |      4 |       5 |      1 |
	    +-------------+--------+---------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT book_id, title, price, amount FROM book;
	    +---------+------------------------------------------+--------+--------+
	    | book_id | title                                    | price  | amount |
	    +---------+------------------------------------------+--------+--------+
	    |       1 | Мастер и Маргарита                       | 670.99 |      3 |
	    |       2 | Белая гвардия                            | 540.50 |      5 |
	    |       3 | Идиот                                    | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        | 799.01 |      2 |
	    |       5 | Игрок                                    | 480.50 |     10 |
	    |       6 | Стихотворения и поэмы                    | 650.00 |     15 |
	    |       7 | Черный человек                           | 570.20 |      6 |
	    |       8 | Лирика                                   | 518.99 |      2 |
	    +---------+------------------------------------------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT buy_book.buy_id, book.title, book.price, buy_book.amount
	FROM
	    client
	    INNER JOIN buy ON client.client_id=buy.client_id
	    INNER JOIN buy_book ON buy_book.buy_id = buy.buy_id
	    INNER JOIN book ON buy_book.book_id=book.book_id
	WHERE name_client = 'Баранов Павел'
	ORDER BY buy.buy_id, title;
	    +--------+------------------------------------+--------+--------+
	    | buy_id | title                              | price  | amount |
	    +--------+------------------------------------+--------+--------+
	    |      1 | Идиот                              | 460.00 |      1 |
	    |      1 | Мастер и Маргарита                 | 670.99 |      1 |
	    |      1 | Черный человек                     | 570.20 |      2 |
	    |      4 | Игрок                              | 480.50 |      1 |
	    +--------+------------------------------------+--------+--------+
	    4 rows in set (0.01 sec)
	Task:
	Посчитать, сколько раз была заказана каждая книга, для книги вывести ее автора (нужно посчитать, в каком количестве заказов фигурирует каждая книга).  Вывести фамилию и инициалы автора, название книги, последний столбец назвать Количество. Результат отсортировать сначала  по фамилиям авторов, а потом по названиям книг
	Decision:
	mysql> SELECT book_id, title, author_id FROM book;
	    +---------+------------------------------------------+-----------+
	    | book_id | title                                    | author_id |
	    +---------+------------------------------------------+-----------+
	    |       1 | Мастер и Маргарита                       |         1 |
	    |       2 | Белая гвардия                            |         1 |
	    |       3 | Идиот                                    |         2 |
	    |       4 | Братья Карамазовы                        |         2 |
	    |       5 | Игрок                                    |         2 |
	    |       6 | Стихотворения и поэмы                    |         3 |
	    |       7 | Черный человек                           |         3 |
	    |       8 | Лирика                                   |         4 |
	    +---------+------------------------------------------+-----------+
	    8 rows in set (0.00 sec)
	mysql> SELECT author_id, name_author FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    |         5 | Лермонтов М.Ю.                |
	    +-----------+-------------------------------+
	    5 rows in set (0.00 sec)
	mysql> SELECT book_id, amount FROM buy_book;
	    +---------+--------+
	    | book_id | amount |
	    +---------+--------+
	    |       1 |      1 |
	    |       7 |      2 |
	    |       3 |      1 |
	    |       8 |      2 |
	    |       3 |      2 |
	    |       2 |      1 |
	    |       1 |      1 |
	    |       5 |      1 |
	    +---------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT author.name_author,book.title,SUM(buy_book.amount) AS Количество
	FROM
	    book
	    INNER JOIN buy_book ON book.book_id=buy_book.book_id
	    INNER JOIN author ON book.author_id=author.author_id
	GROUP BY author.name_author, book.title
	ORDER BY author.name_author, book.title;
	    +-------------------------------+------------------------------------+----------------------+
	    | name_author                   | title                              | Количество           |
	    +-------------------------------+------------------------------------+----------------------+
	    | Булгаков М.А.                 | Белая гвардия                      |                    1 |
	    | Булгаков М.А.                 | Мастер и Маргарита                 |                    2 |
	    | Достоевский Ф.М.              | Игрок                              |                    1 |
	    | Достоевский Ф.М.              | Идиот                              |                    3 |
	    | Есенин С.А.                   | Черный человек                     |                    2 |
	    | Пастернак Б.Л.                | Лирика                             |                    2 |
	    +-------------------------------+------------------------------------+----------------------+
	    6 rows in set (0.01 sec)
	mysql> SELECT author.name_author,book.title,SUM(buy_book.amount) AS Количество
	FROM
	    book
	    LEFT JOIN buy_book ON book.book_id=buy_book.book_id
	    LEFT JOIN author ON book.author_id=author.author_id
	GROUP BY author.name_author,book.title
	ORDER BY author.name_author,book.title;
	    +-------------------------------+------------------------------------------+----------------------+
	    | name_author                   | title                                    | Количество           |
	    +-------------------------------+------------------------------------------+----------------------+
	    | Булгаков М.А.                 | Белая гвардия                            |                    1 |
	    | Булгаков М.А.                 | Мастер и Маргарита                       |                    2 |
	    | Достоевский Ф.М.              | Братья Карамазовы                        |                 NULL |
	    | Достоевский Ф.М.              | Игрок                                    |                    1 |
	    | Достоевский Ф.М.              | Идиот                                    |                    3 |
	    | Есенин С.А.                   | Стихотворения и поэмы                    |                 NULL |
	    | Есенин С.А.                   | Черный человек                           |                    2 |
	    | Пастернак Б.Л.                | Лирика                                   |                    2 |
	    +-------------------------------+------------------------------------------+----------------------+
	    8 rows in set (0.00 sec)
	mysql> SELECT author.name_author,book.title,COUNT(buy_book.amount) AS Количество
	FROM
	    book
	    LEFT JOIN buy_book USING(book_id)
	    LEFT JOIN author USING(author_id)
	GROUP BY author.name_author,book.title
	ORDER BY author.name_author,book.title;
	    +-------------------------------+------------------------------------------+----------------------+
	    | name_author                   | title                                    | Количество           |
	    +-------------------------------+------------------------------------------+----------------------+
	    | Булгаков М.А.                 | Белая гвардия                            |                    1 |
	    | Булгаков М.А.                 | Мастер и Маргарита                       |                    2 |
	    | Достоевский Ф.М.              | Братья Карамазовы                        |                    0 |
	    | Достоевский Ф.М.              | Игрок                                    |                    1 |
	    | Достоевский Ф.М.              | Идиот                                    |                    2 |
	    | Есенин С.А.                   | Стихотворения и поэмы                    |                    0 |
	    | Есенин С.А.                   | Черный человек                           |                    1 |
	    | Пастернак Б.Л.                | Лирика                                   |                    1 |
	    +-------------------------------+------------------------------------------+----------------------+
	    8 rows in set (0.00 sec)
	Task:
	Вывести города, в которых живут клиенты, оформлявшие заказы в интернет-магазине. Указать количество заказов в каждый город, этот столбец назвать Количество. Информацию вывести по убыванию количества заказов, а затем в алфавитном порядке по названию городов.
	Decision:
	mysql> SELECT client_id, city_id FROM client;
	    +-----------+---------+
	    | client_id | city_id |
	    +-----------+---------+
	    |         2 |       1 |
	    |         4 |       1 |
	    |         3 |       2 |
	    |         1 |       3 |
	    +-----------+---------+
	    4 rows in set (0.04 sec)
	mysql> SELECT name_city, city_id FROM city;
	    +-------------------------------+---------+
	    | name_city                     | city_id |
	    +-------------------------------+---------+
	    | Москва                        |       1 |
	    | Санкт-Петербург               |       2 |
	    | Владивосток                   |       3 |
	    +-------------------------------+---------+
	    3 rows in set (0.01 sec)
	mysql> SELECT client_id, buy_id FROM buy;
	    +-----------+--------+
	    | client_id | buy_id |
	    +-----------+--------+
	    |         1 |      1 |
	    |         1 |      4 |
	    |         2 |      3 |
	    |         3 |      2 |
	    +-----------+--------+
	    4 rows in set (0.10 sec)
	mysql> SELECT name_city, COUNT(buy_id) AS 'Количество'
	FROM client
	    INNER JOIN city
	    ON client.city_id = city.city_id
	    INNER JOIN buy
	    ON client.client_id = buy.client_id
	    GROUP BY name_city
	    ORDER BY name_city;
	    +-------------------------------+----------------------+
	    | name_city                     | Количество           |
	    +-------------------------------+----------------------+
	    | Владивосток                   |                    2 |
	    | Москва                        |                    1 |
	    | Санкт-Петербург               |                    1 |
	    +-------------------------------+----------------------+
	    3 rows in set (0.11 sec)
	Task:
	Вывести номера всех оплаченных заказов и даты, когда они были оплачены.
	Decision:
	mysql> SELECT buy_id, step_id, date_step_beg, date_step_end FROM buy_step;
	    +--------+---------+---------------+---------------+
	    | buy_id | step_id | date_step_beg | date_step_end |
	    +--------+---------+---------------+---------------+
	    |      1 |       1 | 2020-02-20    | 2020-02-20    |
	    |      1 |       2 | 2020-02-20    | 2020-02-21    |
	    |      1 |       3 | 2020-02-22    | 2020-03-07    |
	    |      1 |       4 | 2020-03-08    | 2020-03-08    |
	    |      2 |       1 | 2020-02-28    | 2020-02-28    |
	    |      2 |       2 | 2020-02-29    | 2020-03-01    |
	    |      2 |       3 | 2020-03-02    | NULL          |
	    |      2 |       4 | NULL          | NULL          |
	    |      3 |       1 | 2020-03-05    | 2020-03-05    |
	    |      3 |       2 | 2020-03-05    | 2020-03-06    |
	    |      3 |       3 | 2020-03-06    | 2020-03-10    |
	    |      3 |       4 | 2020-03-11    | NULL          |
	    |      4 |       1 | 2020-03-20    | NULL          |
	    |      4 |       2 | NULL          | NULL          |
	    |      4 |       3 | NULL          | NULL          |
	    |      4 |       4 | NULL          | NULL          |
	    +--------+---------+---------------+---------------+
	    16 rows in set (0.03 sec)
	mysql> SELECT step_id, name_step FROM step;
	    +---------+--------------------------------+
	    | step_id | name_step                      |
	    +---------+--------------------------------+
	    |       1 | Оплата                         |
	    |       2 | Упаковка                       |
	    |       3 | Транспортировка                |
	    |       4 | Доставка                       |
	    +---------+--------------------------------+
	    4 rows in set (0.01 sec)
	mysql> SELECT buy_id, date_step_end
	FROM buy_step
	    INNER JOIN step
	    ON step.step_id = buy_step.step_id
	    WHERE name_step LtuserE 'Оплата' AND date_step_end IS NOT NULL;
	    +--------+---------------+
	    | buy_id | date_step_end |
	    +--------+---------------+
	    |      1 | 2020-02-20    |
	    |      2 | 2020-02-28    |
	    |      3 | 2020-03-05    |
	    +--------+---------------+
	    3 rows in set (0.00 sec)
	Task:
	Вывести информацию о каждом заказе: его номер, кто его сформировал (фамилия пользователя) и его стоимость (сумма произведений количества заказанных книг и их цены), в отсортированном по номеру заказа виде. Последний столбец назвать Стоимость.
	Decision:
	mysql> SELECT buy_id, client_id FROM buy;
	    +--------+-----------+
	    | buy_id | client_id |
	    +--------+-----------+
	    |      1 |         1 |
	    |      4 |         1 |
	    |      3 |         2 |
	    |      2 |         3 |
	    +--------+-----------+
	    4 rows in set (0.00 sec)
	mysql> SELECT client_id, name_client FROM client;
	    +-----------+-------------------------------+
	    | client_id | name_client                   |
	    +-----------+-------------------------------+
	    |         1 | Баранов Павел                 |
	    |         2 | Абрамова Катя                 |
	    |         3 | Семенонов Иван                |
	    |         4 | Яковлева Галина               |
	    +-----------+-------------------------------+
	    4 rows in set (0.00 sec)
	mysql> SELECT buy_book_id, amount, buy_id, book_id FROM buy_book;
	    +-------------+--------+--------+---------+
	    | buy_book_id | amount | buy_id | book_id |
	    +-------------+--------+--------+---------+
	    |           1 |      1 |      1 |       1 |
	    |           2 |      2 |      1 |       7 |
	    |           3 |      1 |      1 |       3 |
	    |           4 |      2 |      2 |       8 |
	    |           5 |      2 |      3 |       3 |
	    |           6 |      1 |      3 |       2 |
	    |           7 |      1 |      3 |       1 |
	    |           8 |      1 |      4 |       5 |
	    +-------------+--------+--------+---------+
	    8 rows in set (0.11 sec)
	mysql> SELECT book_id, price FROM book;
	    +---------+--------+
	    | book_id | price  |
	    +---------+--------+
	    |       1 | 670.99 |
	    |       2 | 540.50 |
	    |       3 | 460.00 |
	    |       4 | 799.01 |
	    |       5 | 480.50 |
	    |       6 | 650.00 |
	    |       7 | 570.20 |
	    |       8 | 518.99 |
	    +---------+--------+
	    8 rows in set (0.01 sec)
	mysql> SELECT buy_id, name_client, /*buy_book.amount, price,*/ SUM(buy_book.amount*price) AS 'Стоимость'
	FROM buy
	INNER JOIN client USING(client_id)
	INNER JOIN buy_book USING(buy_id)
	INNER JOIN book USING(book_id)
	GROUP BY buy_id, name_client
	ORDER BY buy_id;
	    +--------+-----------------------------+--------------------+
	    | buy_id | name_client                 | Стоимость          |
	    +--------+-----------------------------+--------------------+
	    |      1 | Баранов Павел               |            2271.39 |
	    |      2 | Семенонов Иван              |            1037.98 |
	    |      3 | Абрамова Катя               |            2131.49 |
	    |      4 | Баранов Павел               |             480.50 |
	    +--------+-----------------------------+--------------------+
	    4 rows in set (0.00 sec)
	Task:
	Вывести номера заказов (buy_id) и названия этапов, на которых они в данный момент находятся. Если заказ доставлен –  информацию о нем не выводить. Информацию отсортировать по возрастанию buy_id.
	Decision:
	mysql> SELECT step_id, name_step FROM step;
	    +---------+--------------------------------+
	    | step_id | name_step                      |
	    +---------+--------------------------------+
	    |       1 | Оплата                         |
	    |       2 | Упаковка                       |
	    |       3 | Транспортировка                |
	    |       4 | Доставка                       |
	    +---------+--------------------------------+
	    4 rows in set (0.00 sec)
	mysql> SELECT step_id, buy_id, date_step_beg, date_step_end FROM buy_step;
	    +---------+--------+---------------+---------------+
	    | step_id | buy_id | date_step_beg | date_step_end |
	    +---------+--------+---------------+---------------+
	    |       1 |      1 | 2020-02-20    | 2020-02-20    |
	    |       2 |      1 | 2020-02-20    | 2020-02-21    |
	    |       3 |      1 | 2020-02-22    | 2020-03-07    |
	    |       4 |      1 | 2020-03-08    | 2020-03-08    |
	    |       1 |      2 | 2020-02-28    | 2020-02-28    |
	    |       2 |      2 | 2020-02-29    | 2020-03-01    |
	    |       3 |      2 | 2020-03-02    | NULL          |
	    |       4 |      2 | NULL          | NULL          |
	    |       1 |      3 | 2020-03-05    | 2020-03-05    |
	    |       2 |      3 | 2020-03-05    | 2020-03-06    |
	    |       3 |      3 | 2020-03-06    | 2020-03-10    |
	    |       4 |      3 | 2020-03-11    | NULL          |
	    |       1 |      4 | 2020-03-20    | NULL          |
	    |       2 |      4 | NULL          | NULL          |
	    |       3 |      4 | NULL          | NULL          |
	    |       4 |      4 | NULL          | NULL          |
	    +---------+--------+---------------+---------------+
	    16 rows in set (0.00 sec)
	mysql> SELECT buy_step.buy_id, name_step
	FROM step
	INNER JOIN buy_step USING(step_id)
	WHERE date_step_beg IS NOT NULL
	AND date_step_end IS NULL;
	    +--------+--------------------------------+
	    | buy_id | name_step                      |
	    +--------+--------------------------------+
	    |      2 | Транспортировка                |
	    |      3 | Доставка                       |
	    |      4 | Оплата                         |
	    +--------+--------------------------------+
	    3 rows in set (0.00 sec)
	Task:
	В таблице city для каждого города указано количество дней, за которые заказ может быть доставлен в этот город (рассматривается только этап Транспортировка). Для тех заказов, которые прошли этап транспортировки, вывести количество дней за которое заказ реально доставлен в город. А также, если заказ доставлен с опозданием, указать количество дней задержки, в противном случае вывести 0. В результат включить номер заказа (buy_id), а также вычисляемые столбцы Количество_дней и Опоздание. Информацию вывести в отсортированном по номеру заказа виде.
	Decision:
	mysql> SELECT * FROM city;
	    +---------+-------------------------------+---------------+
	    | city_id | name_city                     | days_delivery |
	    +---------+-------------------------------+---------------+
	    |       1 | Москва                        |             5 |
	    |       2 | Санкт-Петербург               |             3 |
	    |       3 | Владивосток                   |            12 |
	    +---------+-------------------------------+---------------+
	    3 rows in set (0.01 sec)
	mysql> SELECT * FROM client;
	    +-----------+-------------------------------+---------+----------------+
	    | client_id | name_client                   | city_id | email          |
	    +-----------+-------------------------------+---------+----------------+
	    |         1 | Баранов Павел                 |       3 | baranov@test   |
	    |         2 | Абрамова Катя                 |       1 | abramova@test  |
	    |         3 | Семенонов Иван                |       2 | semenov@test   |
	    |         4 | Яковлева Галина               |       1 | yakovleva@test |
	    +-----------+-------------------------------+---------+----------------+
	    4 rows in set (0.00 sec)
	mysql> SELECT * FROM buy;
	    +--------+------------------------------------------------------------------------+-----------+
	    | buy_id | buy_description                                                        | client_id |
	    +--------+------------------------------------------------------------------------+-----------+
	    |      1 | Доставка только вечером                                                |         1 |
	    |      2 | NULL                                                                   |         3 |
	    |      3 | Упаковать каждую книгу по отдельности                                  |         2 |
	    |      4 | NULL                                                                   |         1 |
	    +--------+------------------------------------------------------------------------+-----------+
	    4 rows in set (0.00 sec)
	mysql> SELECT * FROM buy_step;
	    +-------------+--------+---------+---------------+---------------+
	    | buy_step_id | buy_id | step_id | date_step_beg | date_step_end |
	    +-------------+--------+---------+---------------+---------------+
	    |           1 |      1 |       1 | 2020-02-20    | 2020-02-20    |
	    |           2 |      1 |       2 | 2020-02-20    | 2020-02-21    |
	    |           3 |      1 |       3 | 2020-02-22    | 2020-03-07    |
	    |           4 |      1 |       4 | 2020-03-08    | 2020-03-08    |
	    |           5 |      2 |       1 | 2020-02-28    | 2020-02-28    |
	    |           6 |      2 |       2 | 2020-02-29    | 2020-03-01    |
	    |           7 |      2 |       3 | 2020-03-02    | NULL          |
	    |           8 |      2 |       4 | NULL          | NULL          |
	    |           9 |      3 |       1 | 2020-03-05    | 2020-03-05    |
	    |          10 |      3 |       2 | 2020-03-05    | 2020-03-06    |
	    |          11 |      3 |       3 | 2020-03-06    | 2020-03-10    |
	    |          12 |      3 |       4 | 2020-03-11    | NULL          |
	    |          13 |      4 |       1 | 2020-03-20    | NULL          |
	    |          14 |      4 |       2 | NULL          | NULL          |
	    |          15 |      4 |       3 | NULL          | NULL          |
	    |          16 |      4 |       4 | NULL          | NULL          |
	    +-------------+--------+---------+---------------+---------------+
	16 rows in set (0.00 sec)
	mysql> SELECT * FROM step;
	    +---------+--------------------------------+
	    | step_id | name_step                      |
	    +---------+--------------------------------+
	    |       1 | Оплата                         |
	    |       2 | Упаковка                       |
	    |       3 | Транспортировка                |
	    |       4 | Доставка                       |
	    +---------+--------------------------------+
	    4 rows in set (0.00 sec)
	mysql> SELECT buy_id,
	DATEDIFF(date_step_end, date_step_beg) AS Количество_дней,
	IF(days_delivery<DATEDIFF(date_step_end, date_step_beg), DATEDIFF(date_step_end, date_step_beg)-days_delivery, 0) AS Опоздание
	FROM city
	INNER JOIN client ON city.city_id=client.city_id
	INNER JOIN buy USING(client_id)
	INNER JOIN buy_step USING(buy_id)
	INNER JOIN step USING(step_id)
	WHERE step.name_step='Транспортировка' AND (date_step_beg IS NOT NULL AND date_step_end IS NOT NULL);
	    +--------+-------------------------------+--------------------+
	    | buy_id | Количество_дней               | Опоздание          |
	    +--------+-------------------------------+--------------------+
	    |      1 |                            14 |                  2 |
	    |      3 |                             4 |                  0 |
	    +--------+-------------------------------+--------------------+
	    2 rows in set (0.00 sec)
	Task:
	Выбрать всех клиентов, которые заказывали книги Достоевского, информацию вывести в отсортированном по алфавиту виде. В решении используйте фамилию автора, а не его id.
	Decision:
	mysql> SELECT * FROM client;
	    +-----------+-------------------------------+---------+----------------+
	    | client_id | name_client                   | city_id | email          |
	    +-----------+-------------------------------+---------+----------------+
	    |         1 | Баранов Павел                 |       3 | baranov@test   |
	    |         2 | Абрамова Катя                 |       1 | abramova@test  |
	    |         3 | Семенонов Иван                |       2 | semenov@test   |
	    |         4 | Яковлева Галина               |       1 | yakovleva@test |
	    +-----------+-------------------------------+---------+----------------+
	    4 rows in set (0.00 sec)
	mysql> SELECT * FROM buy;
	    +--------+------------------------------------------------------------------------+-----------+
	    | buy_id | buy_description                                                        | client_id |
	    +--------+------------------------------------------------------------------------+-----------+
	    |      1 | Доставка только вечером                                                |         1 |
	    |      2 | NULL                                                                   |         3 |
	    |      3 | Упаковать каждую книгу по отдельности                                  |         2 |
	    |      4 | NULL                                                                   |         1 |
	    +--------+------------------------------------------------------------------------+-----------+
	    4 rows in set (0.00 sec)
	mysql> SELECT * FROM buy_book;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    |           1 |      1 |       1 |      1 |
	    |           2 |      1 |       7 |      2 |
	    |           3 |      1 |       3 |      1 |
	    |           4 |      2 |       8 |      2 |
	    |           5 |      3 |       3 |      2 |
	    |           6 |      3 |       2 |      1 |
	    |           7 |      3 |       1 |      1 |
	    |           8 |      4 |       5 |      1 |
	    +-------------+--------+---------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       1 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |       2 | Белая гвардия                            |         1 |        1 | 540.50 |      5 |
	    |       3 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        |         2 |        1 | 799.01 |      2 |
	    |       5 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |       6 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |       7 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	    |       8 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    |         5 | Лермонтов М.Ю.                |
	    +-----------+-------------------------------+
	    5 rows in set (0.00 sec)
	mysql> SELECT name_client
	FROM client
	INNER JOIN buy ON client.client_id=buy.client_id
	INNER JOIN buy_book USING(buy_id)
	INNER JOIN book USING(book_id)
	INNER JOIN author USING(author_id)
	WHERE name_author='Достоевский Ф.М.'
	GROUP BY name_client
	ORDER BY name_client;
	    +---------------------------+
	    | name_client               |
	    +---------------------------+
	    | Абрамова Катя             |
	    | Баранов Павел             |
	    +---------------------------+
	    2 rows in set (0.00 sec)
	Task:
	Вывести жанр (или жанры), в котором было заказано больше всего экземпляров книг, указать это количество. Последний столбец назвать Количество.
	Decision:
	mysql> SELECT * FROM genre;
	    +----------+------------------------+
	    | genre_id | name_genre             |
	    +----------+------------------------+
	    |        1 | Роман                  |
	    |        2 | Поэзия                 |
	    |        3 | Приключения            |
	    +----------+------------------------+
	    3 rows in set (0.00 sec)
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       1 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |       2 | Белая гвардия                            |         1 |        1 | 540.50 |      5 |
	    |       3 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        |         2 |        1 | 799.01 |      2 |
	    |       5 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |       6 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |       7 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	    |       8 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT * FROM buy_book;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    |           1 |      1 |       1 |      1 |
	    |           2 |      1 |       7 |      2 |
	    |           3 |      1 |       3 |      1 |
	    |           4 |      2 |       8 |      2 |
	    |           5 |      3 |       3 |      2 |
	    |           6 |      3 |       2 |      1 |
	    |           7 |      3 |       1 |      1 |
	    |           8 |      4 |       5 |      1 |
	    +-------------+--------+---------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT name_genre, SUM(buy_book.amount) AS Количество
	FROM genre
	INNER JOIN book ON genre.genre_id=book.genre_id
	INNER JOIN buy_book USING(book_id)
	WHERE name_genre='Роман';
	    +------------+----------------------+
	    | name_genre | Количество           |
	    +------------+----------------------+
	    | Роман      |                    7 |
	    +------------+----------------------+
	    1 row in set (0.02 sec)
	Task:
	Сравнить ежемесячную выручку от продажи книг за текущий и предыдущий годы. Для этого вывести год, месяц, сумму выручки в отсортированном сначала по возрастанию месяцев, затем по возрастанию лет виде. Название столбцов: Год, Месяц, Сумма.
	Информация о продажах предыдущего года хранится в архивной таблице buy_archive, которая создается в конце года на основе информации из таблиц базы данных и имеет следующую структуру:
		Название столбца    Описание
	    buy_archive_id - ключевой столбец
	    buy_id - id заказов, выбирается из таблицы buy
	    client_id - id клиентов, выбирается из из таблицы client
	    book_id - id книги, выбирается из таблицы book
	    date_payment - дата оплаты заказа, выбирается из столбца date_step_end таблицы buy_step этапа Оплата» соответствующего заказа
	    price - цена книги в текущем заказе из таблицы book
	    (хранится, так как цена может измениться )
	    amount - количество купленных книг в текущем заказе, из таблицы buy_book
	Decision:
	mysql> CREATE TABLE buy_archive
	(
	    buy_    buy_archive_id INT PRIMARY KEY AUTO_INCREMENT,
	    buy_    buy_id         INT,
	    client_id      INT,
	    book_id        INT,
	    date_payment   DATE,
	    price          DECIMAL(8, 2),
	    amount         INT
	);
	    Query OK, 0 rows affected (1.34 sec)
	mysql> INSERT INTO buy_archive (buy_id, client_id, book_id, date_payment, amount, price)
	VALUES (2, 1, 1, '2019-02-21', 2, 670.60),
	(2, 1, 3, '2019-02-21', 1, 450.90),
	(1, 2, 2, '2019-02-10', 2, 520.30),
	(1, 2, 4, '2019-02-10', 3, 780.90),
	(1, 2, 3, '2019-02-10', 1, 450.90),
	(3, 4, 4, '2019-03-05', 4, 780.90),
	(3, 4, 5, '2019-03-05', 2, 480.90),
	(4, 1, 6, '2019-03-12', 1, 650.00),
	(5, 2, 1, '2019-03-18', 2, 670.60),
	(5, 2, 4, '2019-03-18', 1, 780.90);
	    Query OK, 10 rows affected (0.15 sec)
	    Records: 10  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM buy_archive;
	    +----------------+--------+-----------+---------+--------------+--------+--------+
	    | buy_archive_id | buy_id | client_id | book_id | date_payment | price  | amount |
	    +----------------+--------+-----------+---------+--------------+--------+--------+
	    |              1 |      2 |         1 |       1 | 2019-02-21   | 670.60 |      2 |
	    |              2 |      2 |         1 |       3 | 2019-02-21   | 450.90 |      1 |
	    |              3 |      1 |         2 |       2 | 2019-02-10   | 520.30 |      2 |
	    |              4 |      1 |         2 |       4 | 2019-02-10   | 780.90 |      3 |
	    |              5 |      1 |         2 |       3 | 2019-02-10   | 450.90 |      1 |
	    |              6 |      3 |         4 |       4 | 2019-03-05   | 780.90 |      4 |
	    |              7 |      3 |         4 |       5 | 2019-03-05   | 480.90 |      2 |
	    |              8 |      4 |         1 |       6 | 2019-03-12   | 650.00 |      1 |
	    |              9 |      5 |         2 |       1 | 2019-03-18   | 670.60 |      2 |
	    |             10 |      5 |         2 |       4 | 2019-03-18   | 780.90 |      1 |
	    +----------------+--------+-----------+---------+--------------+--------+--------+
	    10 rows in set (0.00 sec)
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       1 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |       2 | Белая гвардия                            |         1 |        1 | 540.50 |      5 |
	    |       3 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        |         2 |        1 | 799.01 |      2 |
	    |       5 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |       6 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |       7 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	    |       8 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT * FROM buy_book;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    |           1 |      1 |       1 |      1 |
	    |           2 |      1 |       7 |      2 |
	    |           3 |      1 |       3 |      1 |
	    |           4 |      2 |       8 |      2 |
	    |           5 |      3 |       3 |      2 |
	    |           6 |      3 |       2 |      1 |
	    |           7 |      3 |       1 |      1 |
	    |           8 |      4 |       5 |      1 |
	    +-------------+--------+---------+--------+
	    8 rows in set (0.01 sec)
	mysql> SELECT * FROM buy;
	    +--------+------------------------------------------------------------------------+-----------+
	    | buy_id | buy_description                                                        | client_id |
	    +--------+------------------------------------------------------------------------+-----------+
	    |      1 | Доставка только вечером                                                |         1 |
	    |      2 | NULL                                                                   |         3 |
	    |      3 | Упаковать каждую книгу по отдельности                                  |         2 |
	    |      4 | NULL                                                                   |         1 |
	    +--------+------------------------------------------------------------------------+-----------+
	    4 rows in set (0.00 sec)
	mysql> SELECT * FROM buy_step;
	    +-------------+--------+---------+---------------+---------------+
	    | buy_step_id | buy_id | step_id | date_step_beg | date_step_end |
	    +-------------+--------+---------+---------------+---------------+
	    |           1 |      1 |       1 | 2020-02-20    | 2020-02-20    |
	    |           2 |      1 |       2 | 2020-02-20    | 2020-02-21    |
	    |           3 |      1 |       3 | 2020-02-22    | 2020-03-07    |
	    |           4 |      1 |       4 | 2020-03-08    | 2020-03-08    |
	    |           5 |      2 |       1 | 2020-02-28    | 2020-02-28    |
	    |           6 |      2 |       2 | 2020-02-29    | 2020-03-01    |
	    |           7 |      2 |       3 | 2020-03-02    | NULL          |
	    |           8 |      2 |       4 | NULL          | NULL          |
	    |           9 |      3 |       1 | 2020-03-05    | 2020-03-05    |
	    |          10 |      3 |       2 | 2020-03-05    | 2020-03-06    |
	    |          11 |      3 |       3 | 2020-03-06    | 2020-03-10    |
	    |          12 |      3 |       4 | 2020-03-11    | NULL          |
	    |          13 |      4 |       1 | 2020-03-20    | NULL          |
	    |          14 |      4 |       2 | NULL          | NULL          |
	    |          15 |      4 |       3 | NULL          | NULL          |
	    |          16 |      4 |       4 | NULL          | NULL          |
	    +-------------+--------+---------+---------------+---------------+
	    16 rows in set (0.00 sec)
	mysql> SELECT * FROM step;
	    +---------+--------------------------------+
	    | step_id | name_step                      |
	    +---------+--------------------------------+
	    |       1 | Оплата                         |
	    |       2 | Упаковка                       |
	    |       3 | Транспортировка                |
	    |       4 | Доставка                       |
	    +---------+--------------------------------+
	    4 rows in set (0.00 sec)
	mysql> SELECT YEAR(date_payment) AS Год,
	MONTHNAME(date_payment) AS Месяц,
	SUM(ROUND(buy_archive.amount * buy_archive.price,2)) AS Сумма
	FROM buy_archive
	GROUP BY 1, 2
	UNION ALL
	SELECT YEAR(buy_step.date_step_end) AS Год,
	MONTHNAME(buy_step.date_step_end) AS Месяц,
	SUM(round(buy_book.amount*book.price,2)) AS Сумма
	FROM book
	INNER JOIN buy_book USING(book_id)
	INNER JOIN buy USING(buy_id)
	INNER JOIN buy_step USING(buy_id)
	INNER JOIN step USING(step_id)
	WHERE date_step_end IS NOT NULL AND name_step = "Оплата"
	GROUP BY 1, 2
	ORDER BY 2, 1;
	    +--------+------------+------------+
	    | Год    | Месяц      | Сумма      |
	    +--------+------------+------------+
	    |   2019 | February   |    5626.30 |
	    |   2020 | February   |    3309.37 |
	    |   2019 | March      |    6857.50 |
	    |   2020 | March      |    2131.49 |
	    +--------+------------+------------+
	    4 rows in set (0.01 sec)
	Task:
	Для каждой отдельной книги необходимо вывести информацию о количестве проданных экземпляров и их стоимости за текущий и предыдущий год . Вычисляемые столбцы назвать Количество и Сумма. Информацию отсортировать по убыванию стоимости.
	Информация о продажах прошлого года хранится в таблице buy_archive
	Decision:
	mysql> SELECT title, SUM(Количество) AS Количество, SUM(Сумма) AS Сумма
	FROM (
	    SELECT book.title, SUM(buy_book.amount) AS Количество, SUM(book.price*buy_book.amount) AS Сумма
	    FROM buy_book
	    INNER JOIN book USING (book_id)
	    INNER JOIN buy USING(buy_id)
	    INNER JOIN buy_step USING(buy_id)
	    INNER JOIN step USING(step_id)
	    WHERE name_step ='Оплата' AND date_step_end IS NOT NULL
	    GROUP BY book.title
	    UNION ALL
	    SELECT book.title, SUM(buy_archive.amount) AS Количество, SUM(buy_archive.price*buy_archive.amount) AS Сумма
	    FROM buy_archive
	    INNER JOIN book USING (book_id)
	    GROUP BY book.title
	) AS qwert
	GROUP BY title
	ORDER BY Сумма DESC;
	    +------------------------------------------+----------------------+------------+
	    | title                                    | Количество           | Сумма      |
	    +------------------------------------------+----------------------+------------+
	    | Братья Карамазовы                        |                    8 |    6247.20 |
	    | Мастер и Маргарита                       |                    6 |    4024.38 |
	    | Идиот                                    |                    5 |    2281.80 |
	    | Белая гвардия                            |                    3 |    1581.10 |
	    | Черный человек                           |                    2 |    1140.40 |
	    | Лирика                                   |                    2 |    1037.98 |
	    | Игрок                                    |                    2 |     961.80 |
	    | Стихотворения и поэмы                    |                    1 |     650.00 |
	    +------------------------------------------+----------------------+------------+
	    8 rows in set (0.01 sec)
	Task:
	Включить нового человека в таблицу с клиентами. Его имя Попов Илья, его email popov@test, проживает он в Москве.
	Decision:
	mysql> SELECT * FROM client;
	    +-----------+-------------------------------+---------+----------------+
	    | client_id | name_client                   | city_id | email          |
	    +-----------+-------------------------------+---------+----------------+
	    |         1 | Баранов Павел                 |       3 | baranov@test   |
	    |         2 | Абрамова Катя                 |       1 | abramova@test  |
	    |         3 | Семенонов Иван                |       2 | semenov@test   |
	    |         4 | Яковлева Галина               |       1 | yakovleva@test |
	    +-----------+-------------------------------+---------+----------------+
	    4 rows in set (0.00 sec)
	mysql> SELECT * FROM city;
	    +---------+-------------------------------+---------------+
	    | city_id | name_city                     | days_delivery |
	    +---------+-------------------------------+---------------+
	    |       1 | Москва                        |             5 |
	    |       2 | Санкт-Петербург               |             3 |
	    |       3 | Владивосток                   |            12 |
	    +---------+-------------------------------+---------------+
	    3 rows in set (0.00 sec)
	mysql> INSERT INTO client (name_client, city_id, email)
	SELECT 'Попов Илья', city_id, 'popov@test'
	FROM city
	WHERE name_city='Москва';
	    Query OK, 1 row affected (0.30 sec)
	    Records: 1  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM client;
	    +-----------+-------------------------------+---------+----------------+
	    | client_id | name_client                   | city_id | email          |
	    +-----------+-------------------------------+---------+----------------+
	    |         1 | Баранов Павел                 |       3 | baranov@test   |
	    |         2 | Абрамова Катя                 |       1 | abramova@test  |
	    |         3 | Семенонов Иван                |       2 | semenov@test   |
	    |         4 | Яковлева Галина               |       1 | yakovleva@test |
	    |         5 | Попов Илья                    |       1 | popov@test     |
	    +-----------+-------------------------------+---------+----------------+
	    5 rows in set (0.00 sec)
	Task:
	Создать новый заказ для Попова Ильи. Его комментарий для заказа: Связаться со мной по вопросу доставки».
	Decision:
	mysql> SELECT * FROM buy;
	    +--------+------------------------------------------------------------------------+-----------+
	    | buy_id | buy_description                                                        | client_id |
	    +--------+------------------------------------------------------------------------+-----------+
	    |      1 | Доставка только вечером                                                |         1 |
	    |      2 | NULL                                                                   |         3 |
	    |      3 | Упаковать каждую книгу по отдельности                                  |         2 |
	    |      4 | NULL                                                                   |         1 |
	    +--------+------------------------------------------------------------------------+-----------+
	    4 rows in set (0.01 sec)
	mysql> SELECT * FROM client;
	    +-----------+-------------------------------+---------+----------------+
	    | client_id | name_client                   | city_id | email          |
	    +-----------+-------------------------------+---------+----------------+
	    |         1 | Баранов Павел                 |       3 | baranov@test   |
	    |         2 | Абрамова Катя                 |       1 | abramova@test  |
	    |         3 | Семенонов Иван                |       2 | semenov@test   |
	    |         4 | Яковлева Галина               |       1 | yakovleva@test |
	    |         5 | Попов Илья                    |       1 | popov@test     |
	    +-----------+-------------------------------+---------+----------------+
	    5 rows in set (0.00 sec)
	mysql> INSERT INTO buy (buy_description, client_id)
	SELECT 'Связаться со мной по вопросу доставки', client_id
	FROM client
	WHERE name_client='Попов Илья';
	    Query OK, 1 row affected (0.14 sec)
	    Records: 1  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM buy;
	+--------+------------------------------------------------------------------------+-----------+
	    | buy_id | buy_description                                                        | client_id |
	    +--------+------------------------------------------------------------------------+-----------+
	    |      1 | Доставка только вечером                                                |         1 |
	    |      2 | NULL                                                                   |         3 |
	    |      3 | Упаковать каждую книгу по отдельности                                  |         2 |
	    |      4 | NULL                                                                   |         1 |
	    |      5 | Связаться со мной по вопросу доставки                                  |         5 |
	    +--------+------------------------------------------------------------------------+-----------+
	    5 rows in set (0.00 sec)
	Task:
	В таблицу buy_book добавить заказ с номером 5. Этот заказ должен содержать книгу Пастернака Лирика» в количестве двух экземпляров и книгу Булгакова Белая гвардия» в одном экземпляре.
	Decision:
	mysql> SELECT * FROM buy_book;
	LECT * FROM book;
	SELECT * FROM author;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    |           1 |      1 |       1 |      1 |
	    |           2 |      1 |       7 |      2 |
	    |           3 |      1 |       3 |      1 |
	    |           4 |      2 |       8 |      2 |
	    |           5 |      3 |       3 |      2 |
	    |           6 |      3 |       2 |      1 |
	    |           7 |      3 |       1 |      1 |
	    |           8 |      4 |       5 |      1 |
	    +-------------+--------+---------+--------+
	    8 rows in set (0.01 sec)
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       1 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |       2 | Белая гвардия                            |         1 |        1 | 540.50 |      5 |
	    |       3 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        |         2 |        1 | 799.01 |      2 |
	    |       5 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |       6 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |       7 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	    |       8 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.01 sec)
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    |         5 | Лермонтов М.Ю.                |
	    +-----------+-------------------------------+
	    5 rows in set (0.01 sec)
	mysql> SELECT * FROM buy;
	    +--------+------------------------------------------------------------------------+-----------+
	    | buy_id | buy_description                                                        | client_id |
	    +--------+------------------------------------------------------------------------+-----------+
	    |      1 | Доставка только вечером                                                |         1 |
	    |      2 | NULL                                                                   |         3 |
	    |      3 | Упаковать каждую книгу по отдельности                                  |         2 |
	    |      4 | NULL                                                                   |         1 |
	    |      5 | Связаться со мной по вопросу доставки                                  |         5 |
	    +--------+------------------------------------------------------------------------+-----------+
	    5 rows in set (0.00 sec)
	mysql> INSERT INTO buy_book(buy_id, book_id, amount)
	SELECT 5, book_id, 2
	FROM book
	WHERE title='Лирика' AND author_id=(
	    SELECT author_id
	    FROM author
	    WHERE name_author='Пастернак Б.Л.')
	UNION
	SELECT 5, book_id, 1
	FROM book
	WHERE title='Белая гвардия' AND author_id=(
	    SELECT author_id
	    FROM author
	    WHERE name_author='Булгаков М.А.');
	    Query OK, 1 row affected (0.18 sec)
	    Records: 1  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM buy_book;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    |           1 |      1 |       1 |      1 |
	    |           2 |      1 |       7 |      2 |
	    |           3 |      1 |       3 |      1 |
	    |           4 |      2 |       8 |      2 |
	    |           5 |      3 |       3 |      2 |
	    |           6 |      3 |       2 |      1 |
	    |           7 |      3 |       1 |      1 |
	    |           8 |      4 |       5 |      1 |
	    |           9 |      5 |       8 |      2 |
	    +-------------+--------+---------+--------+
	    9 rows in set (0.01 sec)
	mysql> INSERT INTO buy_book(buy_id, book_id, amount)
	VALUES (5, 2, 1);
	    Query OK, 1 row affected (0.15 sec)
	mysql> SELECT * FROM buy_book;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    |           1 |      1 |       1 |      1 |
	    |           2 |      1 |       7 |      2 |
	    |           3 |      1 |       3 |      1 |
	    |           4 |      2 |       8 |      2 |
	    |           5 |      3 |       3 |      2 |
	    |           6 |      3 |       2 |      1 |
	    |           7 |      3 |       1 |      1 |
	    |           8 |      4 |       5 |      1 |
	    |           9 |      5 |       8 |      2 |
	    |          10 |      5 |       2 |      1 |
	    +-------------+--------+---------+--------+
	    10 rows in set (0.00 sec)
	Task:
	Количество тех книг на складе, которые были включены в заказ с номером 5, уменьшить на то количество, которое в заказе с номером 5  указано.
	Decision:
	mysql> SELECT * FROM buy_book;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    |           1 |      1 |       1 |      1 |
	    |           2 |      1 |       7 |      2 |
	    |           3 |      1 |       3 |      1 |
	    |           4 |      2 |       8 |      2 |
	    |           5 |      3 |       3 |      2 |
	    |           6 |      3 |       2 |      1 |
	    |           7 |      3 |       1 |      1 |
	    |           8 |      4 |       5 |      1 |
	    |           9 |      5 |       8 |      2 |
	    |          10 |      5 |       2 |      1 |
	    +-------------+--------+---------+--------+
	    10 rows in set (0.00 sec)
	mysql> SELECT book_id, amount FROM book;
	    +---------+--------+
	    | book_id | amount |
	    +---------+--------+
	    |       1 |      3 |
	    |       2 |      5 |
	    |       3 |     10 |
	    |       4 |      2 |
	    |       5 |     10 |
	    |       6 |     15 |
	    |       7 |      6 |
	    |       8 |      2 |
	    +---------+--------+
	    8 rows in set (0.00 sec)
	mysql> UPDATE book,buy_book
	SET book.amount = book.amount - buy_book.amount
	WHERE buy_book.buy_id=5 AND book.book_id = buy_book.book_id;
	    Query OK, 2 rows affected (0.19 sec)
	    Rows matched: 2  Changed: 2  Warnings: 0
	mysql> SELECT book_id, amount FROM book;
	    +---------+--------+
	    | book_id | amount |
	    +---------+--------+
	    |       1 |      3 |
	    |       2 |      4 |
	    |       3 |     10 |
	    |       4 |      2 |
	    |       5 |     10 |
	    |       6 |     15 |
	    |       7 |      6 |
	    |       8 |      0 |
	    +---------+--------+
	    8 rows in set (0.00 sec)
	Task:
	Создать счет (таблицу buy_pay) на оплату заказа с номером 5, в который включить название книг, их автора, цену, количество заказанных книг и  стоимость. Последний столбец назвать Стоимость. Информацию в таблицу занести в отсортированном по названиям книг виде.
	Decision:
	mysql> SELECT book_id, title, author_id, price FROM book;
	    +---------+------------------------------------------+-----------+--------+
	    | book_id | title                                    | author_id | price  |
	    +---------+------------------------------------------+-----------+--------+
	    |       1 | Мастер и Маргарита                       |         1 | 670.99 |
	    |       2 | Белая гвардия                            |         1 | 540.50 |
	    |       3 | Идиот                                    |         2 | 460.00 |
	    |       4 | Братья Карамазовы                        |         2 | 799.01 |
	    |       5 | Игрок                                    |         2 | 480.50 |
	    |       6 | Стихотворения и поэмы                    |         3 | 650.00 |
	    |       7 | Черный человек                           |         3 | 570.20 |
	    |       8 | Лирика                                   |         4 | 518.99 |
	    +---------+------------------------------------------+-----------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    |         5 | Лермонтов М.Ю.                |
	    +-----------+-------------------------------+
	    5 rows in set (0.00 sec)
	mysql> SELECT * FROM buy_book;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    |           1 |      1 |       1 |      1 |
	    |           2 |      1 |       7 |      2 |
	    |           3 |      1 |       3 |      1 |
	    |           4 |      2 |       8 |      2 |
	    |           5 |      3 |       3 |      2 |
	    |           6 |      3 |       2 |      1 |
	    |           7 |      3 |       1 |      1 |
	    |           8 |      4 |       5 |      1 |
	    |           9 |      5 |       8 |      2 |
	    |          10 |      5 |       2 |      1 |
	    +-------------+--------+---------+--------+
	    10 rows in set (0.00 sec)
	mysql> CREATE TABLE buy_pay AS
	SELECT book.title, author.name_author, price, buy_book.amount, ROUND(buy_book.amount*price,2) AS 'Стоимость'
	FROM book
	INNER JOIN author
	ON book.author_id=author.author_id
	INNER JOIN buy_book
	ON book.book_id =buy_book.book_id
	WHERE buy_book.buy_id=5
	ORDER BY book.title;
	    Query OK, 2 rows affected (2.35 sec)
	    Records: 2  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM buy_pay;
	    +----------------------------+---------------------------+--------+--------+--------------------+
	    | title                      | name_author               | price  | amount | Стоимость          |
	    +----------------------------+---------------------------+--------+--------+--------------------+
	    | Белая гвардия              | Булгаков М.А.             | 540.50 |      1 |             540.50 |
	    | Лирика                     | Пастернак Б.Л.            | 518.99 |      2 |            1037.98 |
	    +----------------------------+---------------------------+--------+--------+--------------------+
	    2 rows in set (0.00 sec)
	Task:
	Создать общий счет (таблицу buy_pay) на оплату заказа с номером 5. Куда включить номер заказа, количество книг в заказе (название столбца Количество) и его общую стоимость (название столбца Итого). Для решения используйте ОДИН запрос.
	Decision:
	mysql> SELECT * FROM buy_book;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    |           1 |      1 |       1 |      1 |
	    |           2 |      1 |       7 |      2 |
	    |           3 |      1 |       3 |      1 |
	    |           4 |      2 |       8 |      2 |
	    |           5 |      3 |       3 |      2 |
	    |           6 |      3 |       2 |      1 |
	    |           7 |      3 |       1 |      1 |
	    |           8 |      4 |       5 |      1 |
	    |           9 |      5 |       8 |      2 |
	    |          10 |      5 |       2 |      1 |
	    +-------------+--------+---------+--------+
	    10 rows in set (0.00 sec)
	mysql> SELECT book_id, price FROM book;
	    +---------+--------+
	    | book_id | price  |
	    +---------+--------+
	    |       1 | 670.99 |
	    |       2 | 540.50 |
	    |       3 | 460.00 |
	    |       4 | 799.01 |
	    |       5 | 480.50 |
	    |       6 | 650.00 |
	    |       7 | 570.20 |
	    |       8 | 518.99 |
	    +---------+--------+
	    8 rows in set (0.00 sec)
	mysql> CREATE TABLE buy_pay1 AS SELECT buy_book.buy_id, SUM(buy_book.amount) AS Количество, SUM(book.price*buy_book.amou
	nt) AS Итого FROM buy_book INNER JOIN book  USING(book_id) WHERE buy_id=5;
	    Query OK, 1 row affected (1.63 sec)
	    Records: 1  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM buy_pay1;
	    +--------+----------------------+------------+
	    | buy_id | Количество           | Итого      |
	    +--------+----------------------+------------+
	    |      5 |                    3 |    1578.48 |
	    +--------+----------------------+------------+
	    1 row in set (0.00 sec)
	Task:
	В таблицу buy_step для заказа с номером 5 включить все этапы из таблицы step, которые должен пройти этот заказ. В столбцы date_step_beg и date_step_end всех записей занести Null.
	Decision:
	mysql> SELECT * FROM buy_step;
	    +-------------+--------+---------+---------------+---------------+
	    | buy_step_id | buy_id | step_id | date_step_beg | date_step_end |
	    +-------------+--------+---------+---------------+---------------+
	    |           1 |      1 |       1 | 2020-02-20    | 2020-02-20    |
	    |           2 |      1 |       2 | 2020-02-20    | 2020-02-21    |
	    |           3 |      1 |       3 | 2020-02-22    | 2020-03-07    |
	    |           4 |      1 |       4 | 2020-03-08    | 2020-03-08    |
	    |           5 |      2 |       1 | 2020-02-28    | 2020-02-28    |
	    |           6 |      2 |       2 | 2020-02-29    | 2020-03-01    |
	    |           7 |      2 |       3 | 2020-03-02    | NULL          |
	    |           8 |      2 |       4 | NULL          | NULL          |
	    |           9 |      3 |       1 | 2020-03-05    | 2020-03-05    |
	    |          10 |      3 |       2 | 2020-03-05    | 2020-03-06    |
	    |          11 |      3 |       3 | 2020-03-06    | 2020-03-10    |
	    |          12 |      3 |       4 | 2020-03-11    | NULL          |
	    |          13 |      4 |       1 | 2020-03-20    | NULL          |
	    |          14 |      4 |       2 | NULL          | NULL          |
	    |          15 |      4 |       3 | NULL          | NULL          |
	    |          16 |      4 |       4 | NULL          | NULL          |
	    +-------------+--------+---------+---------------+---------------+
	    16 rows in set (0.02 sec)
	mysql> SELECT * FROM step;
	    +---------+--------------------------------+
	    | step_id | name_step                      |
	    +---------+--------------------------------+
	    |       1 | Оплата                         |
	    |       2 | Упаковка                       |
	    |       3 | Транспортировка                |
	    |       4 | Доставка                       |
	    +---------+--------------------------------+
	    4 rows in set (0.01 sec)
	mysql> SELECT * FROM buy;
	    +--------+------------------------------------------------------------------------+-----------+
	    | buy_id | buy_description                                                        | client_id |
	    +--------+------------------------------------------------------------------------+-----------+
	    |      1 | Доставка только вечером                                                |         1 |
	    |      2 | NULL                                                                   |         3 |
	    |      3 | Упаковать каждую книгу по отдельности                                  |         2 |
	    |      4 | NULL                                                                   |         1 |
	    |      5 | Связаться со мной по вопросу доставки                                  |         5 |
	    +--------+------------------------------------------------------------------------+-----------+
	    5 rows in set (0.00 sec)
	mysql> INSERT INTO buy_step(buy_id, step_id)
	SELECT buy_id, step_id
	FROM buy
	CROSS JOIN step
	WHERE buy_id=5;
	    Query OK, 4 rows affected (0.21 sec)
	    Records: 4  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM buy_step;
	    +-------------+--------+---------+---------------+---------------+
	    | buy_step_id | buy_id | step_id | date_step_beg | date_step_end |
	    +-------------+--------+---------+---------------+---------------+
	    |           1 |      1 |       1 | 2020-02-20    | 2020-02-20    |
	    |           2 |      1 |       2 | 2020-02-20    | 2020-02-21    |
	    |           3 |      1 |       3 | 2020-02-22    | 2020-03-07    |
	    |           4 |      1 |       4 | 2020-03-08    | 2020-03-08    |
	    |           5 |      2 |       1 | 2020-02-28    | 2020-02-28    |
	    |           6 |      2 |       2 | 2020-02-29    | 2020-03-01    |
	    |           7 |      2 |       3 | 2020-03-02    | NULL          |
	    |           8 |      2 |       4 | NULL          | NULL          |
	    |           9 |      3 |       1 | 2020-03-05    | 2020-03-05    |
	    |          10 |      3 |       2 | 2020-03-05    | 2020-03-06    |
	    |          11 |      3 |       3 | 2020-03-06    | 2020-03-10    |
	    |          12 |      3 |       4 | 2020-03-11    | NULL          |
	    |          13 |      4 |       1 | 2020-03-20    | NULL          |
	    |          14 |      4 |       2 | NULL          | NULL          |
	    |          15 |      4 |       3 | NULL          | NULL          |
	    |          16 |      4 |       4 | NULL          | NULL          |
	    |          17 |      5 |       1 | NULL          | NULL          |
	    |          18 |      5 |       2 | NULL          | NULL          |
	    |          19 |      5 |       3 | NULL          | NULL          |
	    |          20 |      5 |       4 | NULL          | NULL          |
	    +-------------+--------+---------+---------------+---------------+
	    20 rows in set (0.00 sec)
	Task:
	В таблицу buy_step занести дату 12.04.2020 выставления счета на оплату заказа с номером 5.
	Правильнее было бы занести не конкретную, а текущую дату. Это можно сделать с помощью функции Now(). Но при этом в разные дни будут вставляться разная дата, и задание нельзя будет проверить, поэтому  вставим дату 12.04.2020.
	Decision:
	mysql> SELECT * FROM buy_step;
	    +-------------+--------+---------+---------------+---------------+
	    | buy_step_id | buy_id | step_id | date_step_beg | date_step_end |
	    +-------------+--------+---------+---------------+---------------+
	    |           1 |      1 |       1 | 2020-02-20    | 2020-02-20    |
	    |           2 |      1 |       2 | 2020-02-20    | 2020-02-21    |
	    |           3 |      1 |       3 | 2020-02-22    | 2020-03-07    |
	    |           4 |      1 |       4 | 2020-03-08    | 2020-03-08    |
	    |           5 |      2 |       1 | 2020-02-28    | 2020-02-28    |
	    |           6 |      2 |       2 | 2020-02-29    | 2020-03-01    |
	    |           7 |      2 |       3 | 2020-03-02    | NULL          |
	    |           8 |      2 |       4 | NULL          | NULL          |
	    |           9 |      3 |       1 | 2020-03-05    | 2020-03-05    |
	    |          10 |      3 |       2 | 2020-03-05    | 2020-03-06    |
	    |          11 |      3 |       3 | 2020-03-06    | 2020-03-10    |
	    |          12 |      3 |       4 | 2020-03-11    | NULL          |
	    |          13 |      4 |       1 | 2020-03-20    | NULL          |
	    |          14 |      4 |       2 | NULL          | NULL          |
	    |          15 |      4 |       3 | NULL          | NULL          |
	    |          16 |      4 |       4 | NULL          | NULL          |
	    |          17 |      5 |       1 | NULL          | NULL          |
	    |          18 |      5 |       2 | NULL          | NULL          |
	    |          19 |      5 |       3 | NULL          | NULL          |
	    |          20 |      5 |       4 | NULL          | NULL          |
	    +-------------+--------+---------+---------------+---------------+
	    20 rows in set (0.01 sec)
	mysql> SELECT * FROM step;
	    +---------+--------------------------------+
	    | step_id | name_step                      |
	    +---------+--------------------------------+
	    |       1 | Оплата                         |
	    |       2 | Упаковка                       |
	    |       3 | Транспортировка                |
	    |       4 | Доставка                       |
	    +---------+--------------------------------+
	    4 rows in set (0.00 sec)
	mysql> UPDATE buy_step
	INNER JOIN step
	USING(step_id)
	SET date_step_beg = '2020-04-12'
	WHERE buy_step.buy_id=5 AND step.name_step='Оплата';
	    Query OK, 1 row affected (0.30 sec)
	    Rows matched: 1  Changed: 1  Warnings: 0
	mysql> SELECT * FROM buy_step;
	    +-------------+--------+---------+---------------+---------------+
	    | buy_step_id | buy_id | step_id | date_step_beg | date_step_end |
	    +-------------+--------+---------+---------------+---------------+
	    |           1 |      1 |       1 | 2020-02-20    | 2020-02-20    |
	    |           2 |      1 |       2 | 2020-02-20    | 2020-02-21    |
	    |           3 |      1 |       3 | 2020-02-22    | 2020-03-07    |
	    |           4 |      1 |       4 | 2020-03-08    | 2020-03-08    |
	    |           5 |      2 |       1 | 2020-02-28    | 2020-02-28    |
	    |           6 |      2 |       2 | 2020-02-29    | 2020-03-01    |
	    |           7 |      2 |       3 | 2020-03-02    | NULL          |
	    |           8 |      2 |       4 | NULL          | NULL          |
	    |           9 |      3 |       1 | 2020-03-05    | 2020-03-05    |
	    |          10 |      3 |       2 | 2020-03-05    | 2020-03-06    |
	    |          11 |      3 |       3 | 2020-03-06    | 2020-03-10    |
	    |          12 |      3 |       4 | 2020-03-11    | NULL          |
	    |          13 |      4 |       1 | 2020-03-20    | NULL          |
	    |          14 |      4 |       2 | NULL          | NULL          |
	    |          15 |      4 |       3 | NULL          | NULL          |
	    |          16 |      4 |       4 | NULL          | NULL          |
	    |          17 |      5 |       1 | 2020-04-12    | NULL          |
	    |          18 |      5 |       2 | NULL          | NULL          |
	    |          19 |      5 |       3 | NULL          | NULL          |
	    |          20 |      5 |       4 | NULL          | NULL          |
	    +-------------+--------+---------+---------------+---------------+
	    20 rows in set (0.01 sec)
	Task:
	Завершить этап Оплата» для заказа с номером 5, вставив в столбец date_step_end дату 13.04.2020, и начать следующий этап (Упаковка»), задав в столбце date_step_beg для этого этапа ту же дату.
	Реализовать два запроса для завершения этапа и начала следующего. Они должны быть записаны в общем виде, чтобы его можно было применять для любых этапов, изменив только текущий этап. Для примера пусть это будет этап Оплата».
	Decision:
	mysql> SELECT * FROM buy_step;
	    +-------------+--------+---------+---------------+---------------+
	    | buy_step_id | buy_id | step_id | date_step_beg | date_step_end |
	    +-------------+--------+---------+---------------+---------------+
	    |           1 |      1 |       1 | 2020-02-20    | 2020-02-20    |
	    |           2 |      1 |       2 | 2020-02-20    | 2020-02-21    |
	    |           3 |      1 |       3 | 2020-02-22    | 2020-03-07    |
	    |           4 |      1 |       4 | 2020-03-08    | 2020-03-08    |
	    |           5 |      2 |       1 | 2020-02-28    | 2020-02-28    |
	    |           6 |      2 |       2 | 2020-02-29    | 2020-03-01    |
	    |           7 |      2 |       3 | 2020-03-02    | NULL          |
	    |           8 |      2 |       4 | NULL          | NULL          |
	    |           9 |      3 |       1 | 2020-03-05    | 2020-03-05    |
	    |          10 |      3 |       2 | 2020-03-05    | 2020-03-06    |
	    |          11 |      3 |       3 | 2020-03-06    | 2020-03-10    |
	    |          12 |      3 |       4 | 2020-03-11    | NULL          |
	    |          13 |      4 |       1 | 2020-03-20    | NULL          |
	    |          14 |      4 |       2 | NULL          | NULL          |
	    |          15 |      4 |       3 | NULL          | NULL          |
	    |          16 |      4 |       4 | NULL          | NULL          |
	    |          17 |      5 |       1 | 2020-04-12    | NULL          |
	    |          18 |      5 |       2 | NULL          | NULL          |
	    |          19 |      5 |       3 | NULL          | NULL          |
	    |          20 |      5 |       4 | NULL          | NULL          |
	    +-------------+--------+---------+---------------+---------------+
	    20 rows in set (0.00 sec)
	mysql> SELECT * FROM step;
	    +---------+--------------------------------+
	    | step_id | name_step                      |
	    +---------+--------------------------------+
	    |       1 | Оплата                         |
	    |       2 | Упаковка                       |
	    |       3 | Транспортировка                |
	    |       4 | Доставка                       |
	    +---------+--------------------------------+
	    4 rows in set (0.00 sec)
	mysql> UPDATE buy_step
	NNERINNER JOIN step
	G(stepUSING(step_id)
	SET date_step_end='2020-04-13'
	WHERE step.name_step='Оплата' AND buy_step.buy_id=5;
	    Query OK, 1 row affected (0.26 sec)
	    Rows matched: 1  Changed: 1  Warnings: 0
	mysql> UPDATE buy_step
	INNER JOIN step
	USING(step_id)
	SET date_step_beg='2020-04-13'
	WHERE step.name_step='Упаковка' AND buy_step.buy_id=5;
	    Query OK, 1 row affected (0.22 sec)
	    Rows matched: 1  Changed: 1  Warnings: 0
	mysql> SELECT * FROM buy_step;
	    +-------------+--------+---------+---------------+---------------+
	    | buy_step_id | buy_id | step_id | date_step_beg | date_step_end |
	    +-------------+--------+---------+---------------+---------------+
	    |           1 |      1 |       1 | 2020-02-20    | 2020-02-20    |
	    |           2 |      1 |       2 | 2020-02-20    | 2020-02-21    |
	    |           3 |      1 |       3 | 2020-02-22    | 2020-03-07    |
	    |           4 |      1 |       4 | 2020-03-08    | 2020-03-08    |
	    |           5 |      2 |       1 | 2020-02-28    | 2020-02-28    |
	    |           6 |      2 |       2 | 2020-02-29    | 2020-03-01    |
	    |           7 |      2 |       3 | 2020-03-02    | NULL          |
	    |           8 |      2 |       4 | NULL          | NULL          |
	    |           9 |      3 |       1 | 2020-03-05    | 2020-03-05    |
	    |          10 |      3 |       2 | 2020-03-05    | 2020-03-06    |
	    |          11 |      3 |       3 | 2020-03-06    | 2020-03-10    |
	    |          12 |      3 |       4 | 2020-03-11    | NULL          |
	    |          13 |      4 |       1 | 2020-03-20    | NULL          |
	    |          14 |      4 |       2 | NULL          | NULL          |
	    |          15 |      4 |       3 | NULL          | NULL          |
	    |          16 |      4 |       4 | NULL          | NULL          |
	    |          17 |      5 |       1 | 2020-04-12    | 2020-04-13    |
	    |          18 |      5 |       2 | 2020-04-13    | NULL          |
	    |          19 |      5 |       3 | NULL          | NULL          |
	    |          20 |      5 |       4 | NULL          | NULL          |
	    +-------------+--------+---------+---------------+---------------+
	    20 rows in set (0.00 sec)
	Task:
	Провести аналитику по трем ценовым категориям (до 600 руб, от 600 руб до 700 руб, свыше 700 руб) и вывести среднюю цену  книги, общую стоимость остатков книг  в этой ценовой позиции и количество позиций. Среднюю цену и стоимость округлить до двух знаков после запятой. Информацию отсортировать по возрастанию нижней границы ценовой категории.
	Для реализации этого запроса создадим вспомогательную таблицу stat, в которой будут храниться ценовые категории (первая ценовая категория - цены  больше или равны 0 и меньше 600, вторая - больше или равны 600 и меньше 700 и т.д.):
	beg_range    end_range
	int            int
	0            600
	600            700
	700            10000
	Decision:
	MariaDB [OnlineBookStore]> CREATE TABLE stat (beg_range INT, end_range INT);
	    Query OK, 0 rows affected (0.010 sec)
	MariaDB [OnlineBookStore]> INSERT INTO stat (beg_range, end_range)
	    -> VALUES (0, 600),(600,700),(700,10000);
	Query OK, 3 rows affected (0.003 sec)
	Records: 3  Duplicates: 0  Warnings: 0
	MariaDB [OnlineBookStore]> SELECT * FROM stat;
	    +-----------+-----------+
	    | beg_range | end_range |
	    +-----------+-----------+
	    |         0 |       600 |
	    |       600 |       700 |
	    |       700 |     10000 |
	    +-----------+-----------+
	    3 rows in set (0.001 sec)
	MariaDB [OnlineBookStore]> SELECT beg_range,
	    ->     end_range,
	    ->     ROUND(AVG(price), 2) AS Средняя_цена,
	    ->     SUM(price * amount) AS Стоимость,
	    ->     COUNT(amount) AS Количество
	    -> FROM( SELECT beg_range,
	    ->     end_range,
	    ->     price,
	    ->     amount
	    ->     FROM stat
	    ->     JOIN book ON beg_range<price AND end_range>price
	    ->     ) table1    
	    -> GROUP BY beg_range, end_range
	    -> ORDER BY beg_range;
	+-----------+-----------+-------------------------+--------------------+----------------------+
	| beg_range | end_range | Средняя_цена            | Стоимость          | Количество           |
	+-----------+-----------+-------------------------+--------------------+----------------------+
	|         0 |       600 |                  514.04 |           14988.20 |                    5 |
	|       600 |       700 |                  660.50 |           11762.97 |                    2 |
	|       700 |     10000 |                  799.01 |            1598.02 |                    1 |
	+-----------+-----------+-------------------------+--------------------+----------------------+
	3 rows in set (0.003 sec)
	Task:
	Вывести всю информацию из таблицы book, упорядоченную по возрастанию длины названия книги.
	Decision:
	MariaDB [OnlineBookStore]> SELECT * FROM book
	    -> ORDER BY LENGTH(title);
	+---------+------------------------------------------+-----------+----------+--------+--------+
	| book_id | title                                    | author_id | genre_id | price  | amount |
	+---------+------------------------------------------+-----------+----------+--------+--------+
	|       3 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	|       5 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	|       8 | Лирика                                   |         4 |        2 | 518.99 |      0 |
	|       2 | Белая гвардия                            |         1 |        1 | 540.50 |      4 |
	|       7 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	|       4 | Братья Карамазовы                        |         2 |        1 | 799.01 |      2 |
	|       1 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	|       6 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	+---------+------------------------------------------+-----------+----------+--------+--------+
	8 rows in set (0.001 sec)
	Task:
	Удалить из таблиц book и supplyкниги, цены которых заканчиваются на 99 копеек. Например, книга с ценой 670.99 должна быть удалена.
	Decision:
	MariaDB [OnlineBookStore]> CREATE TABLE supply (
	    -> supply_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> title VARCHAR(50),
	    -> author VARCHAR(30),
	    -> price DECIMAL(8,2),
	    -> amount INT)
	    -> ENGINE=MyISAM CHARACTER SET=utf8mb4;
	Query OK, 0 rows affected (0.023 sec)
	MariaDB [OnlineBookStore]> INSERT INTO supply (title, author, price, amount)  
	    -> VALUES ('Лирика', 'Пастернак Б.Л.', 518.99, 2),
	    -> ('Черный человек', 'Есенин С.А.', 570.20, 6),
	    -> ('Белая гвардия', 'Булгаков М.А.', 540.50, 7),
	    -> ('Идиот', 'Достоевский Ф.М.', 360.80, 3);
	Query OK, 4 rows affected (0.002 sec)
	Records: 4  Duplicates: 0  Warnings: 0
	MariaDB [OnlineBookStore]> SELECT * FROM supply;
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    | supply_id | title                       | author                        | price  | amount |
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    |         1 | Лирика                      | Пастернак Б.Л.                | 518.99 |      2 |
	    |         2 | Черный человек              | Есенин С.А.                   | 570.20 |      6 |
	    |         3 | Белая гвардия               | Булгаков М.А.                 | 540.50 |      7 |
	    |         4 | Идиот                       | Достоевский Ф.М.              | 360.80 |      3 |
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    4 rows in set (0.001 sec)
	MariaDB [OnlineBookStore]> SELECT * FROM book;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       1 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |       2 | Белая гвардия                            |         1 |        1 | 540.50 |      4 |
	    |       3 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        |         2 |        1 | 799.01 |      2 |
	    |       5 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |       6 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |       7 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	    |       8 | Лирика                                   |         4 |        2 | 518.99 |      0 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.001 sec)
	MariaDB [OnlineBookStore]> DELETE FROM supply
	    -> WHERE price % 1 = 0.99;
	Query OK, 0 rows affected (0.001 sec)
	MariaDB [OnlineBookStore]> DELETE FROM book
	    -> WHERE price % 1 = 0.99;
	Query OK, 0 rows affected (0.001 sec)
	Task:
	Снизить цены книг, цена которых больше 600 рублей, на 20%. Вывести информацию о книгах, скидку (столбец sale_20) и цену книги со скидкой (price_sale).  Результаты округлить до двух знаков после запятой. Для тех книг, на которые скидка не действует, в последних двух столбцах вывести символ  "-".  Отсортировать информацию сначала по фамилии автора, а потом по названию книги.
	Decision:
	MariaDB [OnlineBookStore]> SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    +---------+-----------------------+------------------+--------+--------+
	MariaDB [OnlineBookStore]> SELECT author, title, price, amount,
	    -> IF(price > 600, ROUND(price * 0.2, 2), '-') AS sale_20,
	    -> IF(price > 600, ROUND(price * 0.8, 2),  '-') AS price_sale
	    -> FROM book
	    -> ORDER BY author, title;
	+------------------+-----------------------+--------+--------+---------+------------+
	| author           | title                 | price  | amount | sale_20 | price_sale |
	+------------------+-----------------------+--------+--------+---------+------------+
	| Булгаков М.А.    | Белая гвардия         | 540.50 | 5      | -       | -          |
	| Булгаков М.А.    | Мастер и Маргарита    | 670.99 | 3      | 134.20  | 536.79     |
	| Достоевский Ф.М. | Братья Карамазовы     | 799.01 | 3      | 159.80  | 639.21     |
	| Достоевский Ф.М. | Игрок                 | 480.50 | 10     | -       | -          |
	| Достоевский Ф.М. | Идиот                 | 460.00 | 10     | -       | -          |
	| Есенин С.А.      | Стихотворения и поэмы | 650.00 | 15     | 130.00  | 520.00     |
	+------------------+-----------------------+--------+--------+---------+------------+
	Task:
	Вывести авторов и суммарную стоимость их книг, если хотя бы одна их книга имеет цену выше средней по складу. Средняя цена рассчитывается как простое среднее, с помощью avg(). Информацию отсортировать по убыванию суммарной стоимости.
	Decision:
	MariaDB [OnlineBookStore]> SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    +---------+-----------------------+------------------+--------+--------+
	MariaDB [OnlineBookStore]> SET @avg_price := (SELECT AVG(price)
	    ->     FROM book);
	    -> SELECT author,  
	    ->     SUM(price * amount) AS Стоимость
	    -> FROM book
	    -> WHERE author
	    -> IN (SELECT author
	    ->     FROM book
	    ->     WHERE price > @avg_price)
	    -> GROUP BY author
	    -> ORDER BY Стоимость DESC;
	+------------------+-----------+
	| author           | Стоимость |
	+------------------+-----------+
	| Достоевский Ф.М. | 11802.03  |
	| Есенин С.А.      | 9750.00   |
	| Булгаков М.А.    | 4715.47   |
	+------------------+-----------+
	Task:
	Вывести автора, название, количество, цену (Розничная_цена). Для тех книг количество которых больше или равно 10, отобразить оптовую скидку 15% (Скидка), округлить до двух знаков после запятой и вывести оптовую цену с учетом скидки -15% (Оптовая_цена). Все атрибуты перевести на русский язык. Отсортировать по автору и названию книги.
	Decision:
	MariaDB [OnlineBookStore]> SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    +---------+-----------------------+------------------+--------+--------+
	MariaDB [OnlineBookStore]> SELECT author AS "Автор",
	    ->     title AS "Название_книги",
	    ->     amount AS "Количество",
	    ->     price AS "Розничная_цена",
	    ->     IF (amount >= 10, 15, 0) AS "Скидка",  round (IF (amount >= 10, price * 0.85, price), 2) AS "Оптовая_цена"    
	    -> FROM book
	    -> ORDER BY author, title;
	+------------------+-----------------------+------------+----------------+--------+--------------+
	| Автор            | Название_книги        | Количество | Розничная_цена | Скидка | Оптовая_цена |
	+------------------+-----------------------+------------+----------------+--------+--------------+
	| Булгаков М.А.    | Белая гвардия         | 5          | 540.50         | 0      | 540.50       |
	| Булгаков М.А.    | Мастер и Маргарита    | 3          | 670.99         | 0      | 670.99       |
	| Достоевский Ф.М. | Братья Карамазовы     | 3          | 799.01         | 0      | 799.01       |
	| Достоевский Ф.М. | Игрок                 | 10         | 480.50         | 15     | 408.43       |
	| Достоевский Ф.М. | Идиот                 | 10         | 460.00         | 15     | 391.00       |
	| Есенин С.А.      | Стихотворения и поэмы | 15         | 650.00         | 15     | 552.50       |
	+------------------+-----------------------+------------+----------------+--------+--------------+
	Task:
	Вывести авторов, у которых есть книги со стоимостью более 500 и количеством более 1 шт на складе. Учитывать книги только тех авторов, у которых не менее 2-х произведений на складе. Вывести автора, количество различных произведений автора, минимальную цену и количество книг на складе. Информацию отсортировать по фамилии автора в алфавитном порядке.
	Decision:
	MariaDB [OnlineBookStore]> SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    +---------+-----------------------+------------------+--------+--------+
	MariaDB [OnlineBookStore]> SELECT author,
	    ->     COUNT(author) AS Количество_произведений,
	    ->     MIN(price) AS Минимальная_цена,
	    ->     SUM(amount) AS Число_книг
	    -> FROM book
	    -> WHERE amount > 1
	    -> GROUP BY author
	    -> HAVING COUNT(author) > 1
	    -> ORDER BY author;
	Task:
	Вывести жанр(ы), в котором было заказано меньше всего экземпляров книг, указать это количество. Учитывать только жанры, в которых была заказана хотя бы одна книга.
	При реализации в основном запросе не используйте LIMIT, поскольку жанров с минимальным количеством заказанных книг может быть несколько.
	Decision:
	MariaDB [OnlineBookStore]> SELECT * FROM genre;
	    +----------+------------------------+
	    | genre_id | name_genre             |
	    +----------+------------------------+
	    |        1 | Роман                  |
	    |        2 | Поэзия                 |
	    |        3 | Приключения            |
	    +----------+------------------------+
	    3 rows in set (0.001 sec)
	MariaDB [OnlineBookStore]> SELECT * FROM book;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       1 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |       2 | Белая гвардия                            |         1 |        1 | 540.50 |      4 |
	    |       3 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        |         2 |        1 | 799.01 |      2 |
	    |       5 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |       6 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |       7 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	    |       8 | Лирика                                   |         4 |        2 | 518.99 |      0 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.001 sec)
	MariaDB [OnlineBookStore]> SELECT * FROM buy_book;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    |           1 |      1 |       1 |      1 |
	    |           2 |      1 |       7 |      2 |
	    |           3 |      1 |       3 |      1 |
	    |           4 |      2 |       8 |      2 |
	    |           5 |      3 |       3 |      2 |
	    |           6 |      3 |       2 |      1 |
	    |           7 |      3 |       1 |      1 |
	    |           8 |      4 |       5 |      1 |
	    |           9 |      5 |       8 |      2 |
	    |          10 |      5 |       2 |      1 |
	    +-------------+--------+---------+--------+
	    10 rows in set (0.001 sec)
	MariaDB [OnlineBookStore]> WITH genre_total
	    ->     AS (SELECT name_genre, SUM(bb.amount) AS Количество
	    ->         FROM genre JOIN book b USING (genre_id)
	    ->                    JOIN buy_book bb USING (book_id)
	    ->         WHERE bb.amount > 0
	    ->         GROUP BY name_genre),
	    ->     min_quantity (min_qty)
	    ->     AS (SELECT MIN(Количество) FROM genre_total)
	    -> SELECT name_genre, Количество
	    -> FROM genre_total, min_quantity
	    -> WHERE Количество = min_qty;
	+--------------+----------------------+
	| name_genre   | Количество           |
	+--------------+----------------------+
	| Поэзия       |                    6 |
	+--------------+----------------------+
	1 row in set (0.003 sec)
	Task:
	Создать новую таблицу store, в которую занести данные из таблиц book и supply, при условии, что количество книг будет больше среднего количества книг по двум таблицам; если книга есть в обеих таблицах, то стоимость выбрать большую из двух. Отсортировать данные из таблицы их по имени автора в алфавитном порядке и по убыванию цены. Вывести данные из полученной таблицы.
	Decision:
	MariaDB [OnlineBookStore]> SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    +---------+-----------------------+------------------+--------+--------+
	MariaDB [OnlineBookStore]> SELECT * FROM supply;
	    +-----------+----------------+------------------+--------+--------+
	    | supply_id | title          | author           | price  | amount |
	    +-----------+----------------+------------------+--------+--------+
	    | 1         | Лирика         | Пастернак Б.Л.   | 518.99 | 2      |
	    | 2         | Черный человек | Есенин С.А.      | 570.20 | 6      |
	    | 3         | Белая гвардия  | Булгаков М.А.    | 540.50 | 7      |
	    | 4         | Идиот          | Достоевский Ф.М. | 360.80 | 3      |
	    +-----------+----------------+------------------+--------+--------+
	MariaDB [OnlineBookStore]> SET @cou := (SELECT ROUND(SUM(amount) / COUNT(amount), 2)
	    FROM (SELECT price, amount
	        FROM book
	        UNION
	        SELECT price, amount
	        FROM supply) test);            
	CREATE TABLE store AS
	WITH test(title, author, price, amount) AS (SELECT title, author, price, amount
	    FROM book
	    UNION ALL
	    SELECT title, author, price, amount
	    FROM supply)
	SELECT title,
	    author,
	    MAX(price) AS price,
	    SUM(amount) AS amount
	FROM test
	GROUP BY author, title
	HAVING SUM(amount) > @cou
	ORDER BY author, price DESC;
	SELECT * FROM store;
	    +-----------------------+------------------+--------+--------+
	    | title                 | author           | price  | amount |
	    +-----------------------+------------------+--------+--------+
	    | Белая гвардия         | Булгаков М.А.    | 540.50 | 12     |
	    | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | Идиот                 | Достоевский Ф.М. | 460.00 | 13     |
	    | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    +-----------------------+------------------+--------+--------+
	Task:
	Объявить столбец "категории цены" (price_category): <500 - "низкая", 500 - 700 - "средняя", более 700 - "высокая"
	Вывести автора, название, категорию, стоимость (цена * количество), исключив из авторов Есенина, из названий "Белую гвардию". Отсортировать по убыванию стоимости и названию (по возрастанию)
	Decision:
	MariaDB [OnlineBookStore]> SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    +---------+-----------------------+------------------+--------+--------+
	MariaDB [OnlineBookStore]> SELECT author,
	    title,
	    CASE WHEN price < 500 THEN 'низкая'
	        WHEN price BETWEEN 500 AND 700 THEN 'средняя'
	    ELSE 'высокая'
	    END AS price_category,
	    price * amount AS cost
	FROM book
	WHERE author <> 'Есенин С.А.' AND title <> 'Белая гвардия'
	ORDER BY cost DESC, title;
	    +------------------+--------------------+----------------+---------+
	    | author           | title              | price_category | cost    |
	    +------------------+--------------------+----------------+---------+
	    | Достоевский Ф.М. | Игрок              | низкая         | 4805.00 |
	    | Достоевский Ф.М. | Идиот              | низкая         | 4600.00 |
	    | Достоевский Ф.М. | Братья Карамазовы  | высокая        | 2397.03 |
	    | Булгаков М.А.    | Мастер и Маргарита | средняя        | 2012.97 |
	    +------------------+--------------------+----------------+---------+
	Task:
	Для нечетного количества книг посчитать разницу максимальной стоимости (цена * количество) и стоимостью всех экземпляров конкретной книги. Отсортировать по этой разнице по убыванию. Вывести название, автора, количество, разницу с максимальной стоимостью.
	Decision:
	MariaDB [OnlineBookStore]> SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    +---------+-----------------------+------------------+--------+--------+
	MariaDB [OnlineBookStore]> SELECT title,
	    author,
	    amount,
	    (SELECT price * amount
	        FROM book
	        WHERE amount % 2 = 1
	        ORDER BY price * amount DESC
	        LIMIT 1) - amount * price AS Разница_с_макс_стоимостью
	FROM book
	WHERE amount % 2 = 1
	ORDER BY Разница_с_макс_стоимостью DESC;
	    +-----------------------+------------------+--------+---------------------------+
	    | title                 | author           | amount | Разница_с_макс_стоимостью |
	    +-----------------------+------------------+--------+---------------------------+
	    | Мастер и Маргарита    | Булгаков М.А.    | 3      | 7737.03                   |
	    | Братья Карамазовы     | Достоевский Ф.М. | 3      | 7352.97                   |
	    | Белая гвардия         | Булгаков М.А.    | 5      | 7047.50                   |
	    | Стихотворения и поэмы | Есенин С.А.      | 15     | 0.00                      |
	    +-----------------------+------------------+--------+---------------------------+
	Task:
	На распродаже размер скидки устанавливается в зависимости от количества экземпляров книги в магазине и от цены книги: для книг в остатке не менее 5 шт скидка 50%, тогда как для книг в остатке менее 5 шт скидка устанавливается в зависимости от цены (на книги не дешевле 700 руб скидка 20%, на остальные 10%). Два последних столбца назвать Скидка и Цена_со_скидкой.  Последний столбец округлить до двух знаков после запятой.
	Decision:
	MariaDB [OnlineBookStore]> SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    +---------+-----------------------+------------------+--------+--------+
	MariaDB [OnlineBookStore]> SELECT author,
	    title,
	    amount,
	    price,
	    CASE WHEN amount >= 5 THEN '50%'
	        WHEN price >= 700 THEN '20%'
	        ELSE '10%'
	        END AS Скидка,
	    CASE WHEN amount >= 5 THEN ROUND(price * 0.5, 2)
	        WHEN price >= 700 THEN ROUND(price * 0.8, 2)
	        ELSE ROUND(price * 0.9, 2)
	        END AS Цена_со_скидкой
	FROM book;
	    +------------------+-----------------------+--------+--------+--------+-----------------+
	    | author           | title                 | amount | price  | Скидка | Цена_со_скидкой |
	    +------------------+-----------------------+--------+--------+--------+-----------------+
	    | Булгаков М.А.    | Мастер и Маргарита    | 3      | 670.99 | 10%    | 603.89          |
	    | Булгаков М.А.    | Белая гвардия         | 5      | 540.50 | 50%    | 270.25          |
	    | Достоевский Ф.М. | Идиот                 | 10     | 460.00 | 50%    | 230.00          |
	    | Достоевский Ф.М. | Братья Карамазовы     | 3      | 799.01 | 20%    | 639.21          |
	    | Достоевский Ф.М. | Игрок                 | 10     | 480.50 | 50%    | 240.25          |
	    | Есенин С.А.      | Стихотворения и поэмы | 15     | 650.00 | 50%    | 325.00          |
	    | Есенин С.А.      | Черный человек        | 5      | 670.99 | 50%    | 335.50          |
	    +------------------+-----------------------+--------+--------+--------+-----------------+
	Task:
	Магазин счёл, что классика уже не пользуется популярностью, поэтому необходимо в выборке:
	        Сменить всех авторов на "Донцова Дарья".
	        К названию каждой книги в начале дописать "Евлампия Романова и " ( пробел в конце).
	        Цену поднять на 42% (округлить её до двух знаков после запятой).
	        Отсортировать по убыванию цены.
	Decision:
	SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    +---------+-----------------------+------------------+--------+--------+
	SELECT 'Донцова Дарья' AS author,
	    CONCAT('Евлампия Романова и ', title) AS title,
	    ROUND(price*1.42,2) AS price
	FROM book
	ORDER BY price DESC;
	    +---------------+-------------------------------------------+---------+
	    | author        | title                                     | price   |
	    +---------------+-------------------------------------------+---------+
	    | Донцова Дарья | Евлампия Романова и Братья Карамазовы     | 1134.59 |
	    | Донцова Дарья | Евлампия Романова и Мастер и Маргарита    | 952.81  |
	    | Донцова Дарья | Евлампия Романова и Стихотворения и поэмы | 923.00  |
	    | Донцова Дарья | Евлампия Романова и Белая гвардия         | 767.51  |
	    | Донцова Дарья | Евлампия Романова и Игрок                 | 682.31  |
	    | Донцова Дарья | Евлампия Романова и Идиот                 | 653.20  |
	    +---------------+-------------------------------------------+---------+
	Task:
	Магазин решил быстрее распродать остатки книг, цена которых выше 600, а также прописать условия доставки. Создать запрос на выборку, в котором:
	        Столбцы назовите Наименование, Цена и  Стоимость доставки.
	        Отберите все книги, цена которых выше 600.
	        Если остаток по отдельной книге меньше или равен 5, то стоимость доставки будет 500 рублей, если больше 5, то доставка будет бесплатной (вместо стоимости доставки вставить Бесплатно).
	        Отсортируйте значения по убыванию цены книг.
	Decision:
	SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    | 7       | Черный человек        | Есенин С.А.      | 670.99 | 5      |
	    +---------+-----------------------+------------------+--------+--------+
	SELECT title AS Наименование,
	    price AS Цена,
	    IF (amount<=5, 500, 'Бесплатно') AS 'Стоимость_доставки'
	FROM book
	WHERE price>600
	ORDER BY price DESC;
	    +-----------------------+--------+--------------------+
	    | Наименование          | Цена   | Стоимость_доставки |
	    +-----------------------+--------+--------------------+
	    | Братья Карамазовы     | 799.01 | 500                |
	    | Мастер и Маргарита    | 670.99 | 500                |
	    | Черный человек        | 670.99 | 500                |
	    | Стихотворения и поэмы | 650.00 | Бесплатно          |
	    +-----------------------+--------+--------------------+
	Task:
	Определить стоимость доставки:
	        для книг стоимостью 500 и менее, установить в размере 99.99
	        при количестве книг на складе менее 5, установить в размере 149.99
	        для остальных случаев доставка должна быть бесплатной
	Определить новую стоимость для книг:
	        для книг, совокупной стоимостью более 5000, добавить 20% к стоимости за экземпляр
	        для остальных случаев снизить стоимость одного экземпляра на 20%
	Настроить фильтр при выборке: только позиции творчества авторов: Булгаков и Есенин, при количестве экземпляров на складе: от 3 до 14 включительно.
	Сортировку выполнить:
	        по имени автора в порядке возрастания
	        затем по названию в порядке убывания
	        по стоимости доставки (от меньшей к большей)
	В таблице должны быть отображены данные:
	        автора
	        название
	        количество
	        цену, как real_price
	        новую цену, как new_price (округлить до двух знаков после запятой)
	        стоимость доставки, как delivery_price
	Decision:
	SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    | 7       | Черный человек        | Есенин С.А.      | 670.99 | 5      |
	    +---------+-----------------------+------------------+--------+--------+
	SELECT author,
	    title,
	    amount,
	    price AS real_price,
	    ROUND(IF(price * amount > 5000, price * 1.2, price * 0.8), 2) AS new_price,
	    ROUND(IF(price <= 500, 99.99, IF(amount < 5, 149.99, 0.00)), 2) AS delivery_price
	FROM book
	WHERE author IN ('Булгаков М.А.', 'Есенин С.А.')
	    AND amount BETWEEN 3
	    AND 14
	ORDER BY author, title DESC, delivery_price;
	    +---------------+--------------------+--------+------------+-----------+----------------+
	    | author        | title              | amount | real_price | new_price | delivery_price |
	    +---------------+--------------------+--------+------------+-----------+----------------+
	    | Булгаков М.А. | Мастер и Маргарита | 3      | 670.99     | 536.79    | 149.99         |
	    | Булгаков М.А. | Белая гвардия      | 5      | 540.50     | 432.40    | 0.00           |
	    | Есенин С.А.   | Черный человек     | 5      | 670.99     | 536.79    | 0.00           |
	    +---------------+--------------------+--------+------------+-----------+----------------+
	Task:
	Вывести авторов и названия книг и их цену в двух столбцах - рубли и копейки.  Информацию отсортировать по убыванию копеек.
	Decision:
	SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    | 7       | Черный человек        | Есенин С.А.      | 670.99 | 5      |
	    +---------+-----------------------+------------------+--------+--------+
	SELECT author,
	    title,
	    TRUNCATE(price, 0) AS Рубли,
	    ROUND((price - TRUNCATE(price, 0))*100) AS Копейки
	FROM book
	ORDER BY  ROUND((price - TRUNCATE(price, 0))*100) DESC;
	    +------------------+-----------------------+-------+---------+
	    | author           | title                 | Рубли | Копейки |
	    +------------------+-----------------------+-------+---------+
	    | Булгаков М.А.    | Мастер и Маргарита    | 670   | 99      |
	    | Есенин С.А.      | Черный человек        | 670   | 99      |
	    | Булгаков М.А.    | Белая гвардия         | 540   | 50      |
	    | Достоевский Ф.М. | Игрок                 | 480   | 50      |
	    | Достоевский Ф.М. | Братья Карамазовы     | 798   | 1       |
	    | Достоевский Ф.М. | Идиот                 | 459   | 0       |
	    | Есенин С.А.      | Стихотворения и поэмы | 649   | 0       |
	    +------------------+-----------------------+-------+---------+
	Task:
	В связи с повышенным спросом на классическую литературу школьниками в формате "А есть то же самое, но покороче, чтобы читать поменьше?" была выпущена серия "Графоман и. Краткое содержание".
	В выборке:
	        к имени автора добавить "Графоман и ";
	        к названию книги дописать ". Краткое содержание.";
	        цену на новый опус установить 40% от цены оригинала, но не более 250. (Если 40% больше 250, то цена должна быть 250);
	        в зависимости от остатка на складе вывести "Спрос": до 3 (включительно) - высокий, до 10 (включительно) - средний, иначе низкий;
	        добавить колонку "Наличие" в зависимости от количества: 1-2 шт - очень мало, 3-14 - в наличии, 15 и больше - много;
	        отсортировать по цене по возрастанию, затем по Спросу от высокого к низкому, а затем по названию книги в алфавитном порядке
	Decision:
	SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    | 7       | Черный человек        | Есенин С.А.      | 670.99 | 5      |
	    +---------+-----------------------+------------------+--------+--------+
	SELECT CONCAT('Графоман и ', author) AS Автор,
	    CONCAT(title, '. Краткое содержание.') AS Название,
	    IF(price*0.4>=250, 250*1, price*0.4) AS Цена,
	    (CASE WHEN amount<=3 THEN 'высокий'
	        WHEN amount<=10 THEN 'средний'
	        ELSE 'низкий'
	    END) AS Спрос,
	    (CASE WHEN amount>=1 AND amount<=2 THEN 'очень мало'
	        WHEN amount>=3 AND amount<=14 THEN 'в наличии'
	        WHEN amount>=15 THEN 'много'
	    END) AS Наличие
	FROM book
	ORDER BY Цена, amount, title ASC;
	    +-----------------------------+--------------------------------------------+---------+---------+------------+
	    | Автор                       | Название                                   | Цена    | Спрос   | Наличие    |
	    +-----------------------------+--------------------------------------------+---------+---------+------------+
	    | Графоман и Достоевский Ф.М. | Идиот. Краткое содержание.                 | 184.000 | средний | в наличии  |
	    | Графоман и Достоевский Ф.М. | Игрок. Краткое содержание.                 | 192.200 | средний | в наличии  |
	    | Графоман и Булгаков М.А.    | Белая гвардия. Краткое содержание.         | 216.200 | средний | в наличии  |
	    | Графоман и Достоевский Ф.М. | Братья Карамазовы. Краткое содержание.     | 250     | высокий | очень мало |
	    | Графоман и Булгаков М.А.    | Мастер и Маргарита. Краткое содержание.    | 250     | высокий | в наличии  |
	    | Графоман и Есенин С.А.      | Черный человек. Краткое содержание.        | 250     | средний | в наличии  |
	    | Графоман и Есенин С.А.      | Стихотворения и поэмы. Краткое содержание. | 250     | низкий  | много      |
	    +-----------------------------+--------------------------------------------+---------+---------+------------+
	Task:
	Акция "Купи книгу от 500 руб. и получи подарок".
	Вывести автора, название книги и цену. Выбрать книги с ценой 500 рублей и выше, отсортировать информацию в алфавитном порядке по автору и названию книги. Добавить столбец Подарок,  в котором вывести, какой подарок получает покупатель: если куплена книга от 500 рублей до 600 рублей (включительно), то подарок - ручка, от 600 до 700 (включительно) - детская раскраска, выше 700 - гороскоп.
	Decision:
	SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    | 7       | Черный человек        | Есенин С.А.      | 670.99 | 5      |
	    +---------+-----------------------+------------------+--------+--------+
	SELECT author AS Автор,
	    title AS Название_книги,
	    price AS Цена,
	    (CASE WHEN price>=500 AND price<=600 THEN 'ручка'
	        WHEN price>600 AND price<=700 THEN 'детская раскраска'
	        WHEN price>700 THEN 'гороскоп'
	    END) AS Подарок
	FROM book
	WHERE price >= 500
	ORDER BY Автор, Название_книги;
	    +------------------+-----------------------+--------+-------------------+
	    | Автор            | Название_книги        | Цена   | Подарок           |
	    +------------------+-----------------------+--------+-------------------+
	    | Булгаков М.А.    | Белая гвардия         | 540.50 | ручка             |
	    | Булгаков М.А.    | Мастер и Маргарита    | 670.99 | детская раскраска |
	    | Достоевский Ф.М. | Братья Карамазовы     | 799.01 | гороскоп          |
	    | Есенин С.А.      | Стихотворения и поэмы | 650.00 | детская раскраска |
	    | Есенин С.А.      | Черный человек        | 670.99 | детская раскраска |
	    +------------------+-----------------------+--------+-------------------+
	Task:
	При анализе остатков книг на складе было решено дополнительно заказать книги авторов, у которых суммарное число экземпляров книг меньше 10. В таблице должны быть отображены авторы, наименьшее и наибольшее количество их книг.
	Decision:
	SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+
	    | book_id | title                 | author           | price  | amount |
	    +---------+-----------------------+------------------+--------+--------+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
	    | 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
	    | 7       | Черный человек        | Есенин С.А.      | 670.99 | 5      |
	    +---------+-----------------------+------------------+--------+--------+
	Task:
	В последний заказ (таблица buy_book) клиента Баранов Павел добавить по одному экземпляру всех книг Достоевского, которые есть в таблице book
	Decision:
	SELECT * FROM buy_book;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    | 1           | 1      | 1       | 1      |
	    | 2           | 1      | 7       | 2      |
	    | 3           | 2      | 8       | 2      |
	    | 4           | 3      | 3       | 2      |
	    | 5           | 3      | 2       | 1      |
	    | 6           | 3      | 1       | 1      |
	    | 7           | 4      | 5       | 1      |
	    | 8           | 5      | 8       | 2      |
	    | 9           | 5      | 2       | 1      |
	    +-------------+--------+---------+--------+
	SELECT * FROM client;
	    +-----------+-----------------+---------+----------------+
	    | client_id | name_client     | city_id | email          |
	    +-----------+-----------------+---------+----------------+
	    | 1         | Баранов Павел   | 3       | baranov@test   |
	    | 2         | Абрамова Катя   | 1       | abramova@test  |
	    | 3         | Семенонов Иван  | 2       | semenov@test   |
	    | 4         | Яковлева Галина | 1       | yakovleva@test |
	    | 5         | Попов Илья      | 1       | popov@test     |
	    +-----------+-----------------+---------+----------------+
	SELECT * FROM buy;
	    +--------+---------------------------------------+-----------+
	    | buy_id | buy_description                       | client_id |
	    +--------+---------------------------------------+-----------+
	    | 1      | Доставка только вечером               | 1         |
	    | 2      | NULL                                  | 3         |
	    | 3      | Упаковать каждую книгу по отдельности | 2         |
	    | 4      | NULL                                  | 1         |
	    | 5      | Связаться со мной по вопросу доставки | 5         |
	    +--------+---------------------------------------+-----------+
	SELECT * FROM author;
	    +-----------+------------------+
	    | author_id | name_author      |
	    +-----------+------------------+
	    | 1         | Булгаков М.А.    |
	    | 2         | Достоевский Ф.М. |
	    | 3         | Есенин С.А.      |
	    | 4         | Пастернак Б.Л.   |
	    | 5         | Лермонтов М.Ю.   |
	    +-----------+------------------+
	SELECT * FROM book;
	    +---------+-----------------------+-----------+----------+--------+--------+
	    | book_id | title                 | author_id | genre_id | price  | amount |
	    +---------+-----------------------+-----------+----------+--------+--------+
	    | 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |
	    | 2       | Белая гвардия         | 1         | 1        | 540.50 | 4      |
	    | 3       | Идиот                 | 2         | 1        | 460.00 | 10     |
	    | 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |
	    | 5       | Игрок                 | 2         | 1        | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |
	    | 7       | Черный человек        | 3         | 2        | 570.20 | 6      |
	    | 8       | Лирика                | 4         | 2        | 518.99 | 0      |
	    +---------+-----------------------+-----------+----------+--------+--------+
	INSERT INTO buy_book (buy_id, book_id, amount)
	SELECT DISTINCT *
	FROM((SELECT MAX(buy_id)
	    FROM client
	    INNER JOIN buy USING(client_id)
	    WHERE name_client LtuserE '%Баранов%') a
	    CROSS JOIN (SELECT book_id
	        FROM author
	        INNER JOIN book USING(author_id)
	        WHERE name_author = 'Достоевский Ф.М.') b
	    CROSS JOIN (SELECT 1
	        FROM book) c)
	ORDER BY book_id;
	SELECT * FROM buy_book;
	    +-------------+--------+---------+--------+
	    | buy_book_id | buy_id | book_id | amount |
	    +-------------+--------+---------+--------+
	    | 1           | 1      | 1       | 1      |
	    | 2           | 1      | 7       | 2      |
	    | 3           | 2      | 8       | 2      |
	    | 4           | 3      | 3       | 2      |
	    | 5           | 3      | 2       | 1      |
	    | 6           | 3      | 1       | 1      |
	    | 7           | 4      | 5       | 1      |
	    | 8           | 5      | 8       | 2      |
	    | 9           | 5      | 2       | 1      |
	    | 10          | 4      | 3       | 1      |
	    | 11          | 4      | 4       | 1      |
	    | 12          | 4      | 5       | 1      |
	    +-------------+--------+---------+--------+
	Task:
	Разработать базу данных "Тестирование". Университет проводит онлайн-тестирование по нескольким дисциплинам. Каждая дисциплина включает в себя определенное количество вопросов. Ответы на вопрос представлены в виде вариантов ответов, один из этих вариантов правильный.
	Студент регистрируется в системе, указав свое имя, фамилию и отчество. После этого он может пройти тестирование по одной или нескольким дисциплинам. У студента есть несколько попыток сдать тест (необходимо сохранить дату попытки). Каждому студенту случайным образом подбирается набор вопросов по дисциплине и формируется индивидуальный тест. Студент отвечает на вопросы, выбирая один из предложенных ответов.
	После окончания тестирования вычисляется и сохраняется результат (в процентах) попытки.
	Запросы по предметной области:
	Привлеките студентов, которые прошли определенную дисциплину.
	Выведите количество попыток и средний результат по каждой дисциплине.
	Выведите студента(ов), набравшего самый высокий балл во время тестирования.
	Если студент предпринял несколько попыток по одной и той же дисциплине, то выведите разницу в днях между первой и последней попыткой.
	Выведите количество студентов, прошедших тестирование по каждой дисциплине.
	Случайным образом выберите 3 вопроса по определенной дисциплине.
	Выведите вопросы, на которые определенный студент ответил в определенной попытке, ответ студента и результат (правильный или нет).
	Рассчитайте результаты теста для всех попыток.
	Для каждого вопроса выведите процент успешных решений и общее количество ответов.
	Decision:
	mysql> CREATE DATABASE OnlineTest;
	    Query OK, 1 row affected (0.21 sec)
	mysql> SHOW DATABASES;
	    +--------------------+
	    | Database           |
	    +--------------------+
	    | OnlineBookStore    |
	    | OnlineTest         |
	    | adminDB            |
	    | information_schema |
	    | mysql              |
	    | performance_schema |
	    | sys                |
	    | testbdserver       |
	    +--------------------+
	    8 rows in set (0.00 sec)
	mysql> USE OnlineTest;
	    Database changed
	mysql> CREATE TABLE subject (
	subject_id INT PRIMARY KEY AUTO_INCREMENT,
	name_subject varchar(30)
	);
	    Query OK, 0 rows affected (2.33 sec)
	mysql> CREATE TABLE student (
	student_id INT PRIMARY KEY AUTO_INCREMENT,
	name_student varchar(50)
	);
	    Query OK, 0 rows affected (2.01 sec)
	mysql> CREATE TABLE attempt (
	attempt_id INT PRIMARY KEY AUTO_INCREMENT,
	student_id INT,
	subject_id INT,
	date_attempt date,
	result INT,
	FOREIGN KEY (student_id) REFERENCES student (student_id) ON DELETE CASCADE,
	FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE
	);
	    Query OK, 0 rows affected (1.59 sec)
	mysql> CREATE TABLE question (
	question_id INT PRIMARY KEY AUTO_INCREMENT,
	name_question varchar(100),
	subject_id INT,
	FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE
	);
	    Query OK, 0 rows affected (1.40 sec)
	mysql> CREATE TABLE answer (
	answer_id INT PRIMARY KEY AUTO_INCREMENT,
	name_answer varchar(100),
	question_id INT,
	is_correct BOOLEAN,
	CONSTRAINT answer_ibfk_1 FOREIGN KEY (question_id) REFERENCES question (question_id) ON DELETE CASCADE
	);
	    Query OK, 0 rows affected (2.32 sec)
	mysql> CREATE TABLE testing (
	testing_id INT PRIMARY KEY AUTO_INCREMENT,
	attempt_id INT,
	question_id INT,
	answer_id INT,
	FOREIGN KEY (attempt_id) REFERENCES attempt (attempt_id) ON DELETE CASCADE
	);
	    Query OK, 0 rows affected (3.46 sec)
	mysql> SHOW tables;
	    +----------------------+
	    | Tables_in_OnlineTest |
	    +----------------------+
	    | answer               |
	    | attempt              |
	    | question             |
	    | student              |
	    | subject              |
	    | testing              |
	    +----------------------+
	    6 rows in set (0.00 sec)
	mysql> INSERT INTO subject (subject_id,name_subject) VALUES
	(1,'Основы SQL'),
	(2,'Основы баз данных'),
	(3,'Физика');
	    Query OK, 3 rows affected (0.20 sec)
	    Records: 3  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM subject;
	    +------------+----------------------------------+
	    | subject_id | name_subject                     |
	    +------------+----------------------------------+
	    |          1 | Основы SQL                       |
	    |          2 | Основы баз данных                |
	    |          3 | Физика                           |
	    +------------+----------------------------------+
	    3 rows in set (0.00 sec)
	mysql> INSERT INTO student (student_id,name_student) VALUES
	(1,'Баранов Павел'),
	(2,'Абрамова Катя'),
	(3,'Семенов Иван'),
	(4,'Яковлева Галина');
	    Query OK, 4 rows affected (0.35 sec)
	    Records: 4  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM student;
	    +------------+-------------------------------+
	    | student_id | name_student                  |
	    +------------+-------------------------------+
	    |          1 | Баранов Павел                 |
	    |          2 | Абрамова Катя                 |
	    |          3 | Семенов Иван                  |
	    |          4 | Яковлева Галина               |
	    +------------+-------------------------------+
	    4 rows in set (0.00 sec)
	mysql> INSERT INTO attempt (attempt_id,student_id,subject_id,date_attempt,result) VALUES
	(1,1,2,'2020-03-23',67),
	(2,3,1,'2020-03-23',100),
	(3,4,2,'2020-03-26',0),
	(4,1,1,'2020-04-15',33),
	(5,3,1,'2020-04-15',67),
	(6,4,2,'2020-04-21',100),
	(7,3,1,'2020-05-17',33);
	    Query OK, 7 rows affected (0.31 sec)
	    Records: 7  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM attempt;
	    +------------+------------+------------+--------------+--------+
	    | attempt_id | student_id | subject_id | date_attempt | result |
	    +------------+------------+------------+--------------+--------+
	    |          1 |          1 |          2 | 2020-03-23   |     67 |
	    |          2 |          3 |          1 | 2020-03-23   |    100 |
	    |          3 |          4 |          2 | 2020-03-26   |      0 |
	    |          4 |          1 |          1 | 2020-04-15   |     33 |
	    |          5 |          3 |          1 | 2020-04-15   |     67 |
	    |          6 |          4 |          2 | 2020-04-21   |    100 |
	    |          7 |          3 |          1 | 2020-05-17   |     33 |
	    +------------+------------+------------+--------------+--------+
	    7 rows in set (0.00 sec)
	mysql> INSERT INTO question (question_id,name_question,subject_id) VALUES
	(1,'Запрос на выборку начинается с ключевого слова:',1),
	(2,'Условие, по которому отбираются записи, задается после ключевого слова:',1),
	(3,'Для сортировки используется:',1),
	(4,'Какой запрос выбирает все записи из таблицы student:',1),
	(5,'Для внутреннего соединения таблиц используется оператор:',1),
	(6,'База данных - это:',2),
	(7,'Отношение - это:',2),
	(8,'Концептуальная модель используется для',2),
	(9,'Какой тип данных не допустим в реляционной таблице?',2);
	    Query OK, 9 rows affected (0.19 sec)
	    Records: 9  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM question;
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    | question_id | name_question                                                                                                                       | subject_id |
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    |           1 | Запрос на выборку начинается с ключевого слова:                                                                                     |          1 |
	    |           2 | Условие, по которому отбираются записи, задается после ключевого слова:                                                             |          1 |
	    |           3 | Для сортировки используется:                                                                                                        |          1 |
	    |           4 | Какой запрос выбирает все записи из таблицы student:                                                                                |          1 |
	    |           5 | Для внутреннего соединения таблиц используется оператор:                                                                            |          1 |
	    |           6 | База данных - это:                                                                                                                  |          2 |
	    |           7 | Отношение - это:                                                                                                                    |          2 |
	    |           8 | Концептуальная модель используется для                                                                                              |          2 |
	    |           9 | Какой тип данных не допустим в реляционной таблице?                                                                                 |          2 |
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    9 rows in set (0.00 sec)
	mysql> INSERT INTO answer (answer_id,name_answer,question_id,is_correct) VALUES
	(1,'UPDATE',1,FALSE),
	(2,'SELECT',1,TRUE),
	(3,'INSERT',1,FALSE),
	(4,'GROUP BY',2,FALSE),
	(5,'FROM',2,FALSE),
	(6,'WHERE',2,TRUE),
	(7,'SELECT',2,FALSE),
	(8,'SORT',3,FALSE),
	(9,'ORDER BY',3,TRUE),
	(10,'RANG BY',3,FALSE),
	(11,'SELECT * FROM student',4,TRUE),
	(12,'SELECT student',4,FALSE),
	(13,'INNER JOIN',5,TRUE),
	(14,'LEFT JOIN',5,FALSE),
	(15,'RIGHT JOIN',5,FALSE),
	(16,'CROSS JOIN',5,FALSE),
	(17,'совокупность данных, организованных по определенным правилам',6,TRUE),
	(18,'совокупность программ для хранения и обработки больших массивов информации',6,FALSE),
	(19,'строка',7,FALSE),
	(20,'столбец',7,FALSE),
	(21,'таблица',7,TRUE),
	(22,'обобщенное представление пользователей о данных',8,TRUE),
	(23,'описание представления данных в памяти компьютера',8,FALSE),
	(24,'база данных',8,FALSE),
	(25,'file',9,TRUE),
	(26,'INT',9,FALSE),
	(27,'VARCHAR',9,FALSE),
	(28,'DATE',9,FALSE);
	    Query OK, 28 rows affected (0.22 sec)
	    Records: 28  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM answer;
	    +-----------+----------------------------------------------------------------------------------------------------------------------------------------------+-------------+------------+
	    | answer_id | name_answer                                                                                                                                  | question_id | is_correct |
	    +-----------+----------------------------------------------------------------------------------------------------------------------------------------------+-------------+------------+
	    |         1 | UPDATE                                                                                                                                       |           1 |          0 |
	    |         2 | SELECT                                                                                                                                       |           1 |          1 |
	    |         3 | INSERT                                                                                                                                       |           1 |          0 |
	    |         4 | GROUP BY                                                                                                                                     |           2 |          0 |
	    |         5 | FROM                                                                                                                                         |           2 |          0 |
	    |         6 | WHERE                                                                                                                                        |           2 |          1 |
	    |         7 | SELECT                                                                                                                                       |           2 |          0 |
	    |         8 | SORT                                                                                                                                         |           3 |          0 |
	    |         9 | ORDER BY                                                                                                                                     |           3 |          1 |
	    |        10 | RANG BY                                                                                                                                      |           3 |          0 |
	    |        11 | SELECT * FROM student                                                                                                                        |           4 |          1 |
	    |        12 | SELECT student                                                                                                                               |           4 |          0 |
	    |        13 | INNER JOIN                                                                                                                                   |           5 |          1 |
	    |        14 | LEFT JOIN                                                                                                                                    |           5 |          0 |
	    |        15 | RIGHT JOIN                                                                                                                                   |           5 |          0 |
	    |        16 | CROSS JOIN                                                                                                                                   |           5 |          0 |
	    |        17 | совокупность данных, организованных по определенным правилам                                                                                 |           6 |          1 |
	    |        18 | совокупность программ для хранения и обработки больших массивов информации                                                                   |           6 |          0 |
	    |        19 | строка                                                                                                                                       |           7 |          0 |
	    |        20 | столбец                                                                                                                                      |           7 |          0 |
	    |        21 | таблица                                                                                                                                      |           7 |          1 |
	    |        22 | обобщенное представление пользователей о данных                                                                                              |           8 |          1 |
	    |        23 | описание представления данных в памяти компьютера                                                                                            |           8 |          0 |
	    |        24 | база данных                                                                                                                                  |           8 |          0 |
	    |        25 | file                                                                                                                                         |           9 |          1 |
	    |        26 | INT                                                                                                                                          |           9 |          0 |
	    |        27 | VARCHAR                                                                                                                                      |           9 |          0 |
	    |        28 | DATE                                                                                                                                         |           9 |          0 |
	    +-----------+----------------------------------------------------------------------------------------------------------------------------------------------+-------------+------------+
	    28 rows in set (0.00 sec)
	mysql> INSERT INTO testing (testing_id,attempt_id,question_id,answer_id) VALUES
	(1,1,9,25),
	(2,1,7,19),
	(3,1,6,17),
	(4,2,3,9),
	(5,2,1,2),
	(6,2,4,11),
	(7,3,6,18),
	(8,3,8,24),
	(9,3,9,28),
	(10,4,1,2),
	(11,4,5,16),
	(12,4,3,10),
	(13,5,2,6),
	(14,5,1,2),
	(15,5,4,12),
	(16,6,6,17),
	(17,6,8,22),
	(18,6,7,21),
	(19,7,1,3),
	(20,7,4,11),
	(21,7,5,16);
	    Query OK, 21 rows affected (0.22 sec)
	    Records: 21  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM testing;
	    +------------+------------+-------------+-----------+
	    | testing_id | attempt_id | question_id | answer_id |
	    +------------+------------+-------------+-----------+
	    |          1 |          1 |           9 |        25 |
	    |          2 |          1 |           7 |        19 |
	    |          3 |          1 |           6 |        17 |
	    |          4 |          2 |           3 |         9 |
	    |          5 |          2 |           1 |         2 |
	    |          6 |          2 |           4 |        11 |
	    |          7 |          3 |           6 |        18 |
	    |          8 |          3 |           8 |        24 |
	    |          9 |          3 |           9 |        28 |
	    |         10 |          4 |           1 |         2 |
	    |         11 |          4 |           5 |        16 |
	    |         12 |          4 |           3 |        10 |
	    |         13 |          5 |           2 |         6 |
	    |         14 |          5 |           1 |         2 |
	    |         15 |          5 |           4 |        12 |
	    |         16 |          6 |           6 |        17 |
	    |         17 |          6 |           8 |        22 |
	    |         18 |          6 |           7 |        21 |
	    |         19 |          7 |           1 |         3 |
	    |         20 |          7 |           4 |        11 |
	    |         21 |          7 |           5 |        16 |
	    +------------+------------+-------------+-----------+
	    21 rows in set (0.01 sec)
	Task:
	Вывести студентов, которые сдавали дисциплину Основы баз данных», указать дату попытки и результат. Информацию вывести по убыванию результатов тестирования.
	Decision:
	mysql> SELECT * FROM student;
	    +------------+-------------------------------+
	    | student_id | name_student                  |
	    +------------+-------------------------------+
	    |          1 | Баранов Павел                 |
	    |          2 | Абрамова Катя                 |
	    |          3 | Семенов Иван                  |
	    |          4 | Яковлева Галина               |
	    +------------+-------------------------------+
	    4 rows in set (0.00 sec)
	mysql> SELECT * FROM attempt;
	    +------------+------------+------------+--------------+--------+
	    | attempt_id | student_id | subject_id | date_attempt | result |
	    +------------+------------+------------+--------------+--------+
	    |          1 |          1 |          2 | 2020-03-23   |     67 |
	    |          2 |          3 |          1 | 2020-03-23   |    100 |
	    |          3 |          4 |          2 | 2020-03-26   |      0 |
	    |          4 |          1 |          1 | 2020-04-15   |     33 |
	    |          5 |          3 |          1 | 2020-04-15   |     67 |
	    |          6 |          4 |          2 | 2020-04-21   |    100 |
	    |          7 |          3 |          1 | 2020-05-17   |     33 |
	    +------------+------------+------------+--------------+--------+
	    7 rows in set (0.00 sec)
	mysql> SELECT * FROM subject;
	    +------------+----------------------------------+
	    | subject_id | name_subject                     |
	    +------------+----------------------------------+
	    |          1 | Основы SQL                       |
	    |          2 | Основы баз данных                |
	    |          3 | Физика                           |
	    +------------+----------------------------------+
	    3 rows in set (0.00 sec)
	mysql> SELECT name_student, date_attempt, result
	FROM student
	INNER JOIN attempt
	ON student.student_id=attempt.student_id
	INNER JOIN subject
	ON attempt.subject_id=subject.subject_id
	WHERE subject.name_subject='Основы баз данных'
	ORDER BY result DESC;
	    +-------------------------------+--------------+--------+
	    | name_student                  | date_attempt | result |
	    +-------------------------------+--------------+--------+
	    | Яковлева Галина               | 2020-04-21   |    100 |
	    | Баранов Павел                 | 2020-03-23   |     67 |
	    | Яковлева Галина               | 2020-03-26   |      0 |
	    +-------------------------------+--------------+--------+
	    3 rows in set (0.01 sec)
	Task:
	Вывести, сколько попыток сделали студенты по каждой дисциплине, а также средний результат попыток, который округлить до 2 знаков после запятой. Под результатом попытки понимается процент правильных ответов на вопросы теста, который занесен в столбец result.  В результат включить название дисциплины, а также вычисляемые столбцы Количество и Среднее. Информацию вывести по убыванию средних результатов.
	Decision:
	mysql> SELECT * FROM attempt;
	    +------------+------------+------------+--------------+--------+
	    | attempt_id | student_id | subject_id | date_attempt | result |
	    +------------+------------+------------+--------------+--------+
	    |          1 |          1 |          2 | 2020-03-23   |     67 |
	    |          2 |          3 |          1 | 2020-03-23   |    100 |
	    |          3 |          4 |          2 | 2020-03-26   |      0 |
	    |          4 |          1 |          1 | 2020-04-15   |     33 |
	    |          5 |          3 |          1 | 2020-04-15   |     67 |
	    |          6 |          4 |          2 | 2020-04-21   |    100 |
	    |          7 |          3 |          1 | 2020-05-17   |     33 |
	    +------------+------------+------------+--------------+--------+
	    7 rows in set (0.00 sec)
	mysql> SELECT * FROM subject;
	    +------------+----------------------------------+
	    | subject_id | name_subject                     |
	    +------------+----------------------------------+
	    |          1 | Основы SQL                       |
	    |          2 | Основы баз данных                |
	    |          3 | Физика                           |
	    +------------+----------------------------------+
	    3 rows in set (0.00 sec)
	mysql> SELECT name_subject, COUNT(attempt.subject_id) AS Количество, ROUND(AVG(result),2) AS Среднее
	FROM attempt
	RIGHT JOIN subject
	ON attempt.subject_id=subject.subject_id
	GROUP BY name_subject;
	    +----------------------------------+----------------------+----------------+
	    | name_subject                     | Количество           | Среднее        |
	    +----------------------------------+----------------------+----------------+
	    | Основы SQL                       |                    4 |          58.25 |
	    | Основы баз данных                |                    3 |          55.67 |
	    | Физика                           |                    0 |           NULL |
	    +----------------------------------+----------------------+----------------+
	    3 rows in set (0.10 sec)
	Task:
	Вывести студентов (различных студентов), имеющих максимальные результаты попыток. Информацию отсортировать в алфавитном порядке по фамилии студента.
	Максимальный результат не обязательно будет 100%, поэтому явно это значение в запросе не задавать.
	Decision:
	mysql> SELECT * FROM attempt;
	    +------------+------------+------------+--------------+--------+
	    | attempt_id | student_id | subject_id | date_attempt | result |
	    +------------+------------+------------+--------------+--------+
	    |          1 |          1 |          2 | 2020-03-23   |     67 |
	    |          2 |          3 |          1 | 2020-03-23   |    100 |
	    |          3 |          4 |          2 | 2020-03-26   |      0 |
	    |          4 |          1 |          1 | 2020-04-15   |     33 |
	    |          5 |          3 |          1 | 2020-04-15   |     67 |
	    |          6 |          4 |          2 | 2020-04-21   |    100 |
	    |          7 |          3 |          1 | 2020-05-17   |     33 |
	    +------------+------------+------------+--------------+--------+
	    7 rows in set (0.01 sec)
	mysql> SELECT * FROM student;
	    +------------+-------------------------------+
	    | student_id | name_student                  |
	    +------------+-------------------------------+
	    |          1 | Баранов Павел                 |
	    |          2 | Абрамова Катя                 |
	    |          3 | Семенов Иван                  |
	    |          4 | Яковлева Галина               |
	    +------------+-------------------------------+
	    4 rows in set (0.00 sec)
	mysql> SELECT name_student, result
	FROM attempt
	INNER JOIN student
	ON attempt.student_id=student.student_id
	WHERE result=(
	SELECT MAX(result)
	FROM attempt)
	ORDER BY name_student;
	    +-------------------------------+--------+
	    | name_student                  | result |
	    +-------------------------------+--------+
	    | Семенов Иван                  |    100 |
	    | Яковлева Галина               |    100 |
	    +-------------------------------+--------+
	    2 rows in set (0.05 sec)
	Task:
	Если студент совершал несколько попыток по одной и той же дисциплине, то вывести разницу в днях между первой и последней попыткой. В результат включить фамилию и имя студента, название дисциплины и вычисляемый столбец Интервал. Информацию вывести по возрастанию разницы. Студентов, сделавших одну попытку по дисциплине, не учитывать.
	Decision:
	mysql> SELECT * FROM student;
	    +------------+-------------------------------+
	    | student_id | name_student                  |
	    +------------+-------------------------------+
	    |          1 | Баранов Павел                 |
	    |          2 | Абрамова Катя                 |
	    |          3 | Семенов Иван                  |
	    |          4 | Яковлева Галина               |
	    +------------+-------------------------------+
	    4 rows in set (0.00 sec)
	mysql> SELECT * FROM attempt;
	    +------------+------------+------------+--------------+--------+
	    | attempt_id | student_id | subject_id | date_attempt | result |
	    +------------+------------+------------+--------------+--------+
	    |          1 |          1 |          2 | 2020-03-23   |     67 |
	    |          2 |          3 |          1 | 2020-03-23   |    100 |
	    |          3 |          4 |          2 | 2020-03-26   |      0 |
	    |          4 |          1 |          1 | 2020-04-15   |     33 |
	    |          5 |          3 |          1 | 2020-04-15   |     67 |
	    |          6 |          4 |          2 | 2020-04-21   |    100 |
	    |          7 |          3 |          1 | 2020-05-17   |     33 |
	    +------------+------------+------------+--------------+--------+
	    7 rows in set (0.00 sec)
	mysql> SELECT * FROM subject;
	    +------------+----------------------------------+
	    | subject_id | name_subject                     |
	    +------------+----------------------------------+
	    |          1 | Основы SQL                       |
	    |          2 | Основы баз данных                |
	    |          3 | Физика                           |
	    +------------+----------------------------------+
	    3 rows in set (0.00 sec)
	mysql> SELECT name_student,name_subject,DATEDIFF(MAX(date_attempt),MIN(date_attempt)) AS Интервал
	FROM attempt
	INNER JOIN student
	ON attempt.student_id=student.student_id
	INNER JOIN subject
	ON attempt.subject_id=subject.subject_id
	GROUP BY name_student,name_subject
	HAVING COUNT(date_attempt)>1
	ORDER BY Интервал;
	    +-------------------------------+----------------------------------+------------------+
	    | name_student                  | name_subject                     | Интервал         |
	    +-------------------------------+----------------------------------+------------------+
	    | Яковлева Галина               | Основы баз данных                |               26 |
	    | Семенов Иван                  | Основы SQL                       |               55 |
	    +-------------------------------+----------------------------------+------------------+
	    2 rows in set (0.01 sec)
	Task:
	Студенты могут тестироваться по одной или нескольким дисциплинам (не обязательно по всем). Вывести дисциплину и количество уникальных студентов (столбец назвать Количество), которые по ней проходили тестирование . Информацию отсортировать сначала по убыванию количества, а потом по названию дисциплины. В результат включить и дисциплины, тестирование по которым студенты не проходили, в этом случае указать количество студентов 0.
	Decision:
	mysql> SELECT * FROM attempt;
	    +------------+------------+------------+--------------+--------+
	    | attempt_id | student_id | subject_id | date_attempt | result |
	    +------------+------------+------------+--------------+--------+
	    |          1 |          1 |          2 | 2020-03-23   |     67 |
	    |          2 |          3 |          1 | 2020-03-23   |    100 |
	    |          3 |          4 |          2 | 2020-03-26   |      0 |
	    |          4 |          1 |          1 | 2020-04-15   |     33 |
	    |          5 |          3 |          1 | 2020-04-15   |     67 |
	    |          6 |          4 |          2 | 2020-04-21   |    100 |
	    |          7 |          3 |          1 | 2020-05-17   |     33 |
	    +------------+------------+------------+--------------+--------+
	    7 rows in set (0.00 sec)
	mysql> SELECT * FROM subject;
	    +------------+----------------------------------+
	    | subject_id | name_subject                     |
	    +------------+----------------------------------+
	    |          1 | Основы SQL                       |
	    |          2 | Основы баз данных                |
	    |          3 | Физика                           |
	    +------------+----------------------------------+
	    3 rows in set (0.01 sec)
	mysql> SELECT name_subject,COUNT(new_table.student_id) AS Количество
	FROM (SELECT DISTINCT subject_id,student_id
	FROM attempt) AS new_table
	RIGHT JOIN subject
	ON new_table.subject_id=subject.subject_id
	GROUP BY name_subject
	ORDER BY Количество DESC,name_subject;
	    +----------------------------------+----------------------+
	    | name_subject                     | Количество           |
	    +----------------------------------+----------------------+
	    | Основы SQL                       |                    2 |
	    | Основы баз данных                |                    2 |
	    | Физика                           |                    0 |
	    +----------------------------------+----------------------+
	    3 rows in set (0.01 sec)
	Task:
	Случайным образом отберите 3 вопроса по дисциплине Основы баз данных». В результат включите столбцы question_id и name_question.
	Decision:
	mysql> SELECT * FROM question;
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    | question_id | name_question                                                                                                                       | subject_id |
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    |           1 | Запрос на выборку начинается с ключевого слова:                                                                                     |          1 |
	    |           2 | Условие, по которому отбираются записи, задается после ключевого слова:                                                             |          1 |
	    |           3 | Для сортировки используется:                                                                                                        |          1 |
	    |           4 | Какой запрос выбирает все записи из таблицы student:                                                                                |          1 |
	    |           5 | Для внутреннего соединения таблиц используется оператор:                                                                            |          1 |
	    |           6 | База данных - это:                                                                                                                  |          2 |
	    |           7 | Отношение - это:                                                                                                                    |          2 |
	    |           8 | Концептуальная модель используется для                                                                                              |          2 |
	    |           9 | Какой тип данных не допустим в реляционной таблице?                                                                                 |          2 |
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    9 rows in set (0.04 sec)
	mysql> SELECT * FROM subject;
	    +------------+----------------------------------+
	    | subject_id | name_subject                     |
	    +------------+----------------------------------+
	    |          1 | Основы SQL                       |
	    |          2 | Основы баз данных                |
	    |          3 | Физика                           |
	    +------------+----------------------------------+
	    3 rows in set (0.00 sec)
	mysql> SELECT question_id,name_question
	FROM question
	INNER JOIN subject
	ON question.subject_id=subject.subject_id
	WHERE name_subject='Основы баз данных'
	ORDER BY RAND()
	LIMIT 3;
	    +-------------+------------------------------------------------------------------------------------------------+
	    | question_id | name_question                                                                                  |
	    +-------------+------------------------------------------------------------------------------------------------+
	    |           9 | Какой тип данных не допустим в реляционной таблице?                                            |
	    |           7 | Отношение - это:                                                                               |
	    |           8 | Концептуальная модель используется для                                                         |
	    +-------------+------------------------------------------------------------------------------------------------+
	    3 rows in set (0.04 sec)
	Task:
	Вывести вопросы, которые были включены в тест для Семенова Ивана по дисциплине Основы SQL» 2020-05-17  (значение attempt_id для этой попытки равно 7). Указать, какой ответ дал студент и правильный он или нет(вывести Верно или Неверно). В результат включить вопрос, ответ и вычисляемый столбец  Результат.
	Decision:
	mysql> SELECT * FROM question;
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    | question_id | name_question                                                                                                                       | subject_id |
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    |           1 | Запрос на выборку начинается с ключевого слова:                                                                                     |          1 |
	    |           2 | Условие, по которому отбираются записи, задается после ключевого слова:                                                             |          1 |
	    |           3 | Для сортировки используется:                                                                                                        |          1 |
	    |           4 | Какой запрос выбирает все записи из таблицы student:                                                                                |          1 |
	    |           5 | Для внутреннего соединения таблиц используется оператор:                                                                            |          1 |
	    |           6 | База данных - это:                                                                                                                  |          2 |
	    |           7 | Отношение - это:                                                                                                                    |          2 |
	    |           8 | Концептуальная модель используется для                                                                                              |          2 |
	    |           9 | Какой тип данных не допустим в реляционной таблице?                                                                                 |          2 |
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    9 rows in set (0.00 sec)
	mysql> SELECT * FROM answer;
	    +-----------+----------------------------------------------------------------------------------------------------------------------------------------------+-------------+------------+
	    | answer_id | name_answer                                                                                                                                  | question_id | is_correct |
	    +-----------+----------------------------------------------------------------------------------------------------------------------------------------------+-------------+------------+
	    |         1 | UPDATE                                                                                                                                       |           1 |          0 |
	    |         2 | SELECT                                                                                                                                       |           1 |          1 |
	    |         3 | INSERT                                                                                                                                       |           1 |          0 |
	    |         4 | GROUP BY                                                                                                                                     |           2 |          0 |
	    |         5 | FROM                                                                                                                                         |           2 |          0 |
	    |         6 | WHERE                                                                                                                                        |           2 |          1 |
	    |         7 | SELECT                                                                                                                                       |           2 |          0 |
	    |         8 | SORT                                                                                                                                         |           3 |          0 |
	    |         9 | ORDER BY                                                                                                                                     |           3 |          1 |
	    |        10 | RANG BY                                                                                                                                      |           3 |          0 |
	    |        11 | SELECT * FROM student                                                                                                                        |           4 |          1 |
	    |        12 | SELECT student                                                                                                                               |           4 |          0 |
	    |        13 | INNER JOIN                                                                                                                                   |           5 |          1 |
	    |        14 | LEFT JOIN                                                                                                                                    |           5 |          0 |
	    |        15 | RIGHT JOIN                                                                                                                                   |           5 |          0 |
	    |        16 | CROSS JOIN                                                                                                                                   |           5 |          0 |
	    |        17 | совокупность данных, организованных по определенным правилам                                                                                 |           6 |          1 |
	    |        18 | совокупность программ для хранения и обработки больших массивов информации                                                                   |           6 |          0 |
	    |        19 | строка                                                                                                                                       |           7 |          0 |
	    |        20 | столбец                                                                                                                                      |           7 |          0 |
	    |        21 | таблица                                                                                                                                      |           7 |          1 |
	    |        22 | обобщенное представление пользователей о данных                                                                                              |           8 |          1 |
	    |        23 | описание представления данных в памяти компьютера                                                                                            |           8 |          0 |
	    |        24 | база данных                                                                                                                                  |           8 |          0 |
	    |        25 | file                                                                                                                                         |           9 |          1 |
	    |        26 | INT                                                                                                                                          |           9 |          0 |
	    |        27 | VARCHAR                                                                                                                                      |           9 |          0 |
	    |        28 | DATE                                                                                                                                         |           9 |          0 |
	    +-----------+----------------------------------------------------------------------------------------------------------------------------------------------+-------------+------------+
	    28 rows in set (0.12 sec)
	mysql> SELECT * FROM testing;
	    +------------+------------+-------------+-----------+
	    | testing_id | attempt_id | question_id | answer_id |
	    +------------+------------+-------------+-----------+
	    |          1 |          1 |           9 |        25 |
	    |          2 |          1 |           7 |        19 |
	    |          3 |          1 |           6 |        17 |
	    |          4 |          2 |           3 |         9 |
	    |          5 |          2 |           1 |         2 |
	    |          6 |          2 |           4 |        11 |
	    |          7 |          3 |           6 |        18 |
	    |          8 |          3 |           8 |        24 |
	    |          9 |          3 |           9 |        28 |
	    |         10 |          4 |           1 |         2 |
	    |         11 |          4 |           5 |        16 |
	    |         12 |          4 |           3 |        10 |
	    |         13 |          5 |           2 |         6 |
	    |         14 |          5 |           1 |         2 |
	    |         15 |          5 |           4 |        12 |
	    |         16 |          6 |           6 |        17 |
	    |         17 |          6 |           8 |        22 |
	    |         18 |          6 |           7 |        21 |
	    |         19 |          7 |           1 |         3 |
	    |         20 |          7 |           4 |        11 |
	    |         21 |          7 |           5 |        16 |
	    +------------+------------+-------------+-----------+
	    21 rows in set (0.01 sec)
	mysql> SELECT name_question,
	    name_answer,
	    IF(is_correct,'Верно','Неверно') AS Результат
	FROM testing
	INNER JOIN answer
	USING(answer_id)
	INNER JOIN question
	ON testing.question_id=question.question_id
	INNER JOIN subject
	USING(subject_id)
	INNER JOIN attempt
	USING(attempt_id)
	INNER JOIN student
	USING(student_id)
	WHERE date_attempt=DATE('2020-05-17')
	    AND name_student='Семенов Иван'
	    AND name_subject='Основы SQL';
	    +------------------------------------------------------------------------------------------------------------+-----------------------+--------------------+
	    | name_question                                                                                              | name_answer           | Результат          |
	    +------------------------------------------------------------------------------------------------------------+-----------------------+--------------------+
	    | Запрос на выборку начинается с ключевого слова:                                                            | INSERT                | Неверно            |
	    | Какой запрос выбирает все записи из таблицы student:                                                       | SELECT * FROM student | Верно              |
	    | Для внутреннего соединения таблиц используется оператор:                                                   | CROSS JOIN            | Неверно            |
	    +------------------------------------------------------------------------------------------------------------+-----------------------+--------------------+
	    3 rows in set (0.02 sec)
	Task:
	Посчитать результаты тестирования. Результат попытки вычислить как количество правильных ответов, деленное на 3 (количество вопросов в каждой попытке) и умноженное на 100. Результат округлить до двух знаков после запятой. Вывести фамилию студента, название предмета, дату и результат. Последний столбец назвать Результат. Информацию отсортировать сначала по фамилии студента, потом по убыванию даты попытки.
	Decision:
	mysql> SELECT * FROM answer;
	    +-----------+----------------------------------------------------------------------------------------------------------------------------------------------+-------------+------------+
	    | answer_id | name_answer                                                                                                                                  | question_id | is_correct |
	    +-----------+----------------------------------------------------------------------------------------------------------------------------------------------+-------------+------------+
	    |         1 | UPDATE                                                                                                                                       |           1 |          0 |
	    |         2 | SELECT                                                                                                                                       |           1 |          1 |
	    |         3 | INSERT                                                                                                                                       |           1 |          0 |
	    |         4 | GROUP BY                                                                                                                                     |           2 |          0 |
	    |         5 | FROM                                                                                                                                         |           2 |          0 |
	    |         6 | WHERE                                                                                                                                        |           2 |          1 |
	    |         7 | SELECT                                                                                                                                       |           2 |          0 |
	    |         8 | SORT                                                                                                                                         |           3 |          0 |
	    |         9 | ORDER BY                                                                                                                                     |           3 |          1 |
	    |        10 | RANG BY                                                                                                                                      |           3 |          0 |
	    |        11 | SELECT * FROM student                                                                                                                        |           4 |          1 |
	    |        12 | SELECT student                                                                                                                               |           4 |          0 |
	    |        13 | INNER JOIN                                                                                                                                   |           5 |          1 |
	    |        14 | LEFT JOIN                                                                                                                                    |           5 |          0 |
	    |        15 | RIGHT JOIN                                                                                                                                   |           5 |          0 |
	    CT *|        16 | CROSS JOIN                                                                                                                                   |           5 |          0 |
	    |        17 | совокупность данных, организованных по определенным правилам                                                                                 |           6 |          1 |
	    |        18 | совокупность программ для хранения и обработки больших массивов информации                                                                   |           6 |          0 |
	    |        19 | строка                                                                                                                                       |           7 |          0 |
	    |        20 | столбец                                                                                                                                      |           7 |          0 |
	    |        21 | таблица                                                                                                                                      |           7 |          1 |
	    |        22 | обобщенное представление пользователей о данных                                                                                              |           8 |          1 |
	    |        23 | описание представления данных в памяти компьютера                                                                                            |           8 |          0 |
	    |        24 | база данных                                                                                                                                  |           8 |          0 |
	    |        25 | file                                                                                                                                         |           9 |          1 |
	    |        26 | INT                                                                                                                                          |           9 |          0 |
	    |        27 | VARCHAR                                                                                                                                      |           9 |          0 |
	    |        28 | DATE                                                                                                                                         |           9 |          0 |
	    +-----------+----------------------------------------------------------------------------------------------------------------------------------------------+-------------+------------+
	    28 rows in set (0.00 sec)
	mysql> SELECT * FROM student;
	    +------------+-------------------------------+
	    | student_id | name_student                  |
	    +------------+-------------------------------+
	    |          1 | Баранов Павел                 |
	    |          2 | Абрамова Катя                 |
	    |          3 | Семенов Иван                  |
	    |          4 | Яковлева Галина               |
	    +------------+-------------------------------+
	    4 rows in set (0.00 sec)
	mysql> SELECT * FROM testing;
	    +------------+------------+-------------+-----------+
	    | testing_id | attempt_id | question_id | answer_id |
	    +------------+------------+-------------+-----------+
	    |          1 |          1 |           9 |        25 |
	    |          2 |          1 |           7 |        19 |
	    |          3 |          1 |           6 |        17 |
	    |          4 |          2 |           3 |         9 |
	    |          5 |          2 |           1 |         2 |
	    |          6 |          2 |           4 |        11 |
	    |          7 |          3 |           6 |        18 |
	    |          8 |          3 |           8 |        24 |
	    |          9 |          3 |           9 |        28 |
	    |         10 |          4 |           1 |         2 |
	    |         11 |          4 |           5 |        16 |
	    |         12 |          4 |           3 |        10 |
	    |         13 |          5 |           2 |         6 |
	    |         14 |          5 |           1 |         2 |
	    |         15 |          5 |           4 |        12 |
	    |         16 |          6 |           6 |        17 |
	    |         17 |          6 |           8 |        22 |
	    |         18 |          6 |           7 |        21 |
	    |         19 |          7 |           1 |         3 |
	    |         20 |          7 |           4 |        11 |
	    |         21 |          7 |           5 |        16 |
	    +------------+------------+-------------+-----------+
	    21 rows in set (0.00 sec)
	mysql> SELECT * FROM attempt;
	    +------------+------------+------------+--------------+--------+
	    | attempt_id | student_id | subject_id | date_attempt | result |
	    +------------+------------+------------+--------------+--------+
	    |          1 |          1 |          2 | 2020-03-23   |     67 |
	    |          2 |          3 |          1 | 2020-03-23   |    100 |
	    |          3 |          4 |          2 | 2020-03-26   |      0 |
	    |          4 |          1 |          1 | 2020-04-15   |     33 |
	    |          5 |          3 |          1 | 2020-04-15   |     67 |
	    |          6 |          4 |          2 | 2020-04-21   |    100 |
	    |          7 |          3 |          1 | 2020-05-17   |     33 |
	    +------------+------------+------------+--------------+--------+
	    7 rows in set (0.00 sec)
	mysql> SELECT * FROM question;
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    | question_id | name_question                                                                                                                       | subject_id |
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    |           1 | Запрос на выборку начинается с ключевого слова:                                                                                     |          1 |
	    |           2 | Условие, по которому отбираются записи, задается после ключевого слова:                                                             |          1 |
	    |           3 | Для сортировки используется:                                                                                                        |          1 |
	    |           4 | Какой запрос выбирает все записи из таблицы student:                                                                                |          1 |
	    |           5 | Для внутреннего соединения таблиц используется оператор:                                                                            |          1 |
	    |           6 | База данных - это:                                                                                                                  |          2 |
	    |           7 | Отношение - это:                                                                                                                    |          2 |
	    |           8 | Концептуальная модель используется для                                                                                              |          2 |
	    |           9 | Какой тип данных не допустим в реляционной таблице?                                                                                 |          2 |
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    9 rows in set (0.00 sec)
	mysql> SELECT * FROM subject;
	    +------------+----------------------------------+
	    | subject_id | name_subject                     |
	    +------------+----------------------------------+
	    |          1 | Основы SQL                       |
	    |          2 | Основы баз данных                |
	    |          3 | Физика                           |
	    +------------+----------------------------------+
	    3 rows in set (0.00 sec)
	mysql> SELECT name_student,
	    name_subject,
	    date_attempt,
	    ROUND(100 * SUM(is_correct) / 3, 2) AS Результат
	FROM attempt
	INNER JOIN student
	USING(student_id)
	INNER JOIN subject
	USING(subject_id)
	INNER JOIN testing
	USING(attempt_id)
	INNER JOIN answer
	USING(answer_id)
	GROUP BY attempt_id
	ORDER BY name_student, date_attempt DESC;
	    +-------------------------------+----------------------------------+--------------+--------------------+
	    | name_student                  | name_subject                     | date_attempt | Результат          |
	    +-------------------------------+----------------------------------+--------------+--------------------+
	    | Баранов Павел                 | Основы SQL                       | 2020-04-15   |              33.33 |
	    | Баранов Павел                 | Основы баз данных                | 2020-03-23   |              66.67 |
	    | Семенов Иван                  | Основы SQL                       | 2020-05-17   |              33.33 |
	    | Семенов Иван                  | Основы SQL                       | 2020-04-15   |              66.67 |
	    | Семенов Иван                  | Основы SQL                       | 2020-03-23   |             100.00 |
	    | Яковлева Галина               | Основы баз данных                | 2020-04-21   |             100.00 |
	    | Яковлева Галина               | Основы баз данных                | 2020-03-26   |               0.00 |
	    +-------------------------------+----------------------------------+--------------+--------------------+
	    7 rows in set (1.33 sec)
	Task:
	Для каждого вопроса вывести процент успешных решений, то есть отношение количества верных ответов к общему количеству ответов, значение округлить до 2-х знаков после запятой. Также вывести название предмета, к которому относится вопрос, и общее количество ответов на этот вопрос. В результат включить название дисциплины, вопросы по ней (столбец назвать Вопрос), а также два вычисляемых столбца Всего_ответов и Успешность. Информацию отсортировать сначала по названию дисциплины, потом по убыванию успешности, а потом по тексту вопроса в алфавитном порядке.
	Поскольку тексты вопросов могут быть длинными, обрезать их 30 символов и добавить многоточие "...".
	Decision:
	mysql> SELECT * FROM subject;
	    +------------+----------------------------------+
	    | subject_id | name_subject                     |
	    +------------+----------------------------------+
	    |          1 | Основы SQL                       |
	    |          2 | Основы баз данных                |
	    |          3 | Физика                           |
	    +------------+----------------------------------+
	    3 rows in set (0.00 sec)
	mysql> SELECT * FROM question;
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    | question_id | name_question                                                                                                                       | subject_id |
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    |           1 | Запрос на выборку начинается с ключевого слова:                                                                                     |          1 |
	    |           2 | Условие, по которому отбираются записи, задается после ключевого слова:                                                             |          1 |
	    |           3 | Для сортировки используется:                                                                                                        |          1 |
	    |           4 | Какой запрос выбирает все записи из таблицы student:                                                                                |          1 |
	    |           5 | Для внутреннего соединения таблиц используется оператор:                                                                            |          1 |
	    |           6 | База данных - это:                                                                                                                  |          2 |
	    |           7 | Отношение - это:                                                                                                                    |          2 |
	    |           8 | Концептуальная модель используется для                                                                                              |          2 |
	    |           9 | Какой тип данных не допустим в реляционной таблице?                                                                                 |          2 |
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    9 rows in set (0.01 sec)
	mysql> SELECT testing_id, question_id, answer_id FROM testing;
	    +------------+-------------+-----------+
	    | testing_id | question_id | answer_id |
	    +------------+-------------+-----------+
	    |          1 |           9 |        25 |
	    |          2 |           7 |        19 |
	    |          3 |           6 |        17 |
	    |          4 |           3 |         9 |
	    |          5 |           1 |         2 |
	    |          6 |           4 |        11 |
	    |          7 |           6 |        18 |
	    |          8 |           8 |        24 |
	    |          9 |           9 |        28 |
	    |         10 |           1 |         2 |
	    |         11 |           5 |        16 |
	    |         12 |           3 |        10 |
	    |         13 |           2 |         6 |
	    |         14 |           1 |         2 |
	    |         15 |           4 |        12 |
	    |         16 |           6 |        17 |
	    |         17 |           8 |        22 |
	    |         18 |           7 |        21 |
	    |         19 |           1 |         3 |
	    |         20 |           4 |        11 |
	    |         21 |           5 |        16 |
	    +------------+-------------+-----------+
	    21 rows in set (0.00 sec)
	mysql> SELECT answer_id, question_id, is_correct FROM answer;
	    +-----------+-------------+------------+
	    | answer_id | question_id | is_correct |
	    +-----------+-------------+------------+
	    |         1 |           1 |          0 |
	    |         2 |           1 |          1 |
	    |         3 |           1 |          0 |
	    |         4 |           2 |          0 |
	    |         5 |           2 |          0 |
	    |         6 |           2 |          1 |
	    |         7 |           2 |          0 |
	    |         8 |           3 |          0 |
	    |         9 |           3 |          1 |
	    |        10 |           3 |          0 |
	    |        11 |           4 |          1 |
	    |        12 |           4 |          0 |
	    |        13 |           5 |          1 |
	    |        14 |           5 |          0 |
	    |        15 |           5 |          0 |
	    |        16 |           5 |          0 |
	    |        17 |           6 |          1 |
	    |        18 |           6 |          0 |
	    |        19 |           7 |          0 |
	    |        20 |           7 |          0 |
	    |        21 |           7 |          1 |
	    |        22 |           8 |          1 |
	    |        23 |           8 |          0 |
	    |        24 |           8 |          0 |
	    |        25 |           9 |          1 |
	    |        26 |           9 |          0 |
	    |        27 |           9 |          0 |
	    |        28 |           9 |          0 |
	    +-----------+-------------+------------+
	    28 rows in set (0.00 sec)
	mysql> SELECT name_subject,
	    CONCAT(LEFT(name_question, 30), '...') AS Вопрос,
	    COUNT(testing.answer_id) AS Всего_ответов,
	    ROUND(SUM(is_correct) / COUNT(testing.answer_id) * 100, 2) AS Успешность
	FROM subject
	JOIN question USING(subject_id)
	JOIN testing USING(question_id)
	LEFT JOIN answer USING(answer_id)
	GROUP BY 1, 2
	ORDER BY 1, 4 DESC, 2;
	    +----------------------------------+---------------------------------------------------------------+---------------------------+----------------------+
	    | name_subject                     | Вопрос                                                        | Всего_ответов             | Успешность           |
	    +----------------------------------+---------------------------------------------------------------+---------------------------+----------------------+
	    | Основы SQL                       | Условие, по которому отбираютс...                             |                         1 |               100.00 |
	    | Основы SQL                       | Запрос на выборку начинается с...                             |                         4 |                75.00 |
	    | Основы SQL                       | Какой запрос выбирает все запи...                             |                         3 |                66.67 |
	    | Основы SQL                       | Для сортировки используется:...                               |                         2 |                50.00 |
	    | Основы SQL                       | Для внутреннего соединения таб...                             |                         2 |                 0.00 |
	    | Основы баз данных                | База данных - это:...                                         |                         3 |                66.67 |
	    | Основы баз данных                | Какой тип данных не допустим в...                             |                         2 |                50.00 |
	    | Основы баз данных                | Концептуальная модель использу...                             |                         2 |                50.00 |
	    | Основы баз данных                | Отношение - это:...                                           |                         2 |                50.00 |
	    +----------------------------------+---------------------------------------------------------------+---------------------------+----------------------+
	    9 rows in set (0.20 sec)
	Task:
	В таблицу attempt включить новую попытку для студента Баранова Павла по дисциплине Основы баз данных». Установить текущую дату в качестве даты выполнения попытки.
	Decision:
	mysql> SELECT * FROM student;
	    +------------+-------------------------------+
	    | student_id | name_student                  |
	    +------------+-------------------------------+
	    |          1 | Баранов Павел                 |
	    |          2 | Абрамова Катя                 |
	    |          3 | Семенов Иван                  |
	    |          4 | Яковлева Галина               |
	    +------------+-------------------------------+
	    4 rows in set (0.00 sec)
	mysql> SELECT * FROM subject;
	    +------------+----------------------------------+
	    | subject_id | name_subject                     |
	    +------------+----------------------------------+
	    |          1 | Основы SQL                       |
	    |          2 | Основы баз данных                |
	    |          3 | Физика                           |
	    +------------+----------------------------------+
	    3 rows in set (0.01 sec)
	mysql> SELECT * FROM attempt;
	    +------------+------------+------------+--------------+--------+
	    | attempt_id | student_id | subject_id | date_attempt | result |
	    +------------+------------+------------+--------------+--------+
	    |          1 |          1 |          2 | 2020-03-23   |     67 |
	    |          2 |          3 |          1 | 2020-03-23   |    100 |
	    |          3 |          4 |          2 | 2020-03-26   |      0 |
	    |          4 |          1 |          1 | 2020-04-15   |     33 |
	    |          5 |          3 |          1 | 2020-04-15   |     67 |
	    |          6 |          4 |          2 | 2020-04-21   |    100 |
	    |          7 |          3 |          1 | 2020-05-17   |     33 |
	    +------------+------------+------------+--------------+--------+
	    7 rows in set (0.00 sec)
	mysql> INSERT INTO attempt(student_id, subject_id, date_attempt)
	SELECT student_id, subject_id, NOW()
	FROM  student, subject
	WHERE name_student = 'Баранов Павел' AND name_subject = 'Основы баз данных';
	    Query OK, 1 row affected, 1 warning (0.16 sec)
	    Records: 1  Duplicates: 0  Warnings: 1
	mysql> SELECT * FROM attempt;
	    +------------+------------+------------+--------------+--------+
	    | attempt_id | student_id | subject_id | date_attempt | result |
	    +------------+------------+------------+--------------+--------+
	    |          1 |          1 |          2 | 2020-03-23   |     67 |
	    |          2 |          3 |          1 | 2020-03-23   |    100 |
	    |          3 |          4 |          2 | 2020-03-26   |      0 |
	    |          4 |          1 |          1 | 2020-04-15   |     33 |
	    |          5 |          3 |          1 | 2020-04-15   |     67 |
	    |          6 |          4 |          2 | 2020-04-21   |    100 |
	    |          7 |          3 |          1 | 2020-05-17   |     33 |
	    |          8 |          1 |          2 | 2022-03-22   |   NULL |
	    +------------+------------+------------+--------------+--------+
	    8 rows in set (0.00 sec)
	Task:
	Случайным образом выбрать три вопроса (запрос) по дисциплине, тестирование по которой собирается проходить студент, занесенный в таблицу attempt последним, и добавить их в таблицу testing. id последней попытки получить как максимальное значение id из таблицы attempt.
	Decision:
	mysql> SELECT * FROM question;
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    | question_id | name_question                                                                                                                       | subject_id |
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    |           1 | Запрос на выборку начинается с ключевого слова:                                                                                     |          1 |
	    |           2 | Условие, по которому отбираются записи, задается после ключевого слова:                                                             |          1 |
	    |           3 | Для сортировки используется:                                                                                                        |          1 |
	    |           4 | Какой запрос выбирает все записи из таблицы student:                                                                                |          1 |
	    |           5 | Для внутреннего соединения таблиц используется оператор:                                                                            |          1 |
	    |           6 | База данных - это:                                                                                                                  |          2 |
	    |           7 | Отношение - это:                                                                                                                    |          2 |
	    |           8 | Концептуальная модель используется для                                                                                              |          2 |
	    |           9 | Какой тип данных не допустим в реляционной таблице?                                                                                 |          2 |
	    +-------------+-------------------------------------------------------------------------------------------------------------------------------------+------------+
	    9 rows in set (0.00 sec)
	mysql> SELECT * FROM attempt;
	    +------------+------------+------------+--------------+--------+
	    | attempt_id | student_id | subject_id | date_attempt | result |
	    +------------+------------+------------+--------------+--------+
	    |          1 |          1 |          2 | 2020-03-23   |     67 |
	    |          2 |          3 |          1 | 2020-03-23   |    100 |
	    |          3 |          4 |          2 | 2020-03-26   |      0 |
	    |          4 |          1 |          1 | 2020-04-15   |     33 |
	    |          5 |          3 |          1 | 2020-04-15   |     67 |
	    |          6 |          4 |          2 | 2020-04-21   |    100 |
	    |          7 |          3 |          1 | 2020-05-17   |     33 |
	    |          8 |          1 |          2 | 2022-03-22   |   NULL |
	    +------------+------------+------------+--------------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT * FROM testing;
	    +------------+------------+-------------+-----------+
	    | testing_id | attempt_id | question_id | answer_id |
	    +------------+------------+-------------+-----------+
	    |          1 |          1 |           9 |        25 |
	    |          2 |          1 |           7 |        19 |
	    |          3 |          1 |           6 |        17 |
	    |          4 |          2 |           3 |         9 |
	    |          5 |          2 |           1 |         2 |
	    |          6 |          2 |           4 |        11 |
	    |          7 |          3 |           6 |        18 |
	    |          8 |          3 |           8 |        24 |
	    |          9 |          3 |           9 |        28 |
	    |         10 |          4 |           1 |         2 |
	    |         11 |          4 |           5 |        16 |
	    |         12 |          4 |           3 |        10 |
	    |         13 |          5 |           2 |         6 |
	    |         14 |          5 |           1 |         2 |
	    |         15 |          5 |           4 |        12 |
	    |         16 |          6 |           6 |        17 |
	    |         17 |          6 |           8 |        22 |
	    |         18 |          6 |           7 |        21 |
	    |         19 |          7 |           1 |         3 |
	    |         20 |          7 |           4 |        11 |
	    |         21 |          7 |           5 |        16 |
	    +------------+------------+-------------+-----------+
	    21 rows in set (0.00 sec)
	mysql> INSERT INTO testing(attempt_id, question_id)
	SELECT attempt_id, question_id
	FROM question
	JOIN attempt USING(subject_id)
	WHERE attempt_id = (SELECT MAX(attempt_id)
	                FROM attempt)
	ORDER BY RAND()
	LIMIT 3;
	    Query OK, 3 rows affected (0.16 sec)
	    Records: 3  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM testing;
	    +------------+------------+-------------+-----------+
	    | testing_id | attempt_id | question_id | answer_id |
	    +------------+------------+-------------+-----------+
	    |          1 |          1 |           9 |        25 |
	    |          2 |          1 |           7 |        19 |
	    |          3 |          1 |           6 |        17 |
	    |          4 |          2 |           3 |         9 |
	    |          5 |          2 |           1 |         2 |
	    |          6 |          2 |           4 |        11 |
	    |          7 |          3 |           6 |        18 |
	    |          8 |          3 |           8 |        24 |
	    |          9 |          3 |           9 |        28 |
	    |         10 |          4 |           1 |         2 |
	    |         11 |          4 |           5 |        16 |
	    |         12 |          4 |           3 |        10 |
	    |         13 |          5 |           2 |         6 |
	    |         14 |          5 |           1 |         2 |
	    |         15 |          5 |           4 |        12 |
	    |         16 |          6 |           6 |        17 |
	    |         17 |          6 |           8 |        22 |
	    |         18 |          6 |           7 |        21 |
	    |         19 |          7 |           1 |         3 |
	    |         20 |          7 |           4 |        11 |
	    |         21 |          7 |           5 |        16 |
	    |         22 |          8 |           6 |      NULL |
	    |         23 |          8 |           7 |      NULL |
	    |         24 |          8 |           8 |      NULL |
	    +------------+------------+-------------+-----------+
	    24 rows in set (0.00 sec)
	Task:
	Студент прошел тестирование (то есть все его ответы занесены в таблицу testing), далее необходимо вычислить результат(запрос) и занести его в таблицу attempt для соответствующей попытки.  Результат попытки вычислить как количество правильных ответов, деленное на 3 (количество вопросов в каждой попытке) и умноженное на 100. Результат округлить до целого.
	Будем считать, что мы знаем id попытки,  для которой вычисляется результат, в нашем случае это 8. В таблицу testing занесены следующие ответы пользователя:
	+------------+------------+-------------+-----------+
	| testing_id | attempt_id | question_id | answer_id |
	+------------+------------+-------------+-----------+
	| 22         | 8          | 7           | 19        |
	| 23         | 8          | 6           | 17        |
	| 24         | 8          | 8           | 22        |
	+------------+------------+-------------+-----------+
	Decision:
	mysql> SELECT * FROM testing;
	    *+------------+------------+-------------+-----------+
	    | testing_id | attempt_id | question_id | answer_id |
	    +------------+------------+-------------+-----------+
	    |          1 |          1 |           9 |        25 |
	    |          2 |          1 |           7 |        19 |
	    |          3 |          1 |           6 |        17 |
	    |          4 |          2 |           3 |         9 |
	    |          5 |          2 |           1 |         2 |
	    |          6 |          2 |           4 |        11 |
	    |          7 |          3 |           6 |        18 |
	    |          8 |          3 |           8 |        24 |
	    |          9 |          3 |           9 |        28 |
	    |         10 |          4 |           1 |         2 |
	    |         11 |          4 |           5 |        16 |
	    |         12 |          4 |           3 |        10 |
	    |         13 |          5 |           2 |         6 |
	    |         14 |          5 |           1 |         2 |
	    |         15 |          5 |           4 |        12 |
	    |         16 |          6 |           6 |        17 |
	    |         17 |          6 |           8 |        22 |
	    |         18 |          6 |           7 |        21 |
	    |         19 |          7 |           1 |         3 |
	    |         20 |          7 |           4 |        11 |
	    |         21 |          7 |           5 |        16 |
	    |         22 |          8 |           6 |      NULL |
	    |         23 |          8 |           7 |      NULL |
	    |         24 |          8 |           8 |      NULL |
	    +------------+------------+-------------+-----------+
	    24 rows in set (0.00 sec)
	mysql> SELECT * FROM attempt;
	    +------------+------------+------------+--------------+--------+
	    | attempt_id | student_id | subject_id | date_attempt | result |
	    +------------+------------+------------+--------------+--------+
	    |          1 |          1 |          2 | 2020-03-23   |     67 |
	    |          2 |          3 |          1 | 2020-03-23   |    100 |
	    |          3 |          4 |          2 | 2020-03-26   |      0 |
	    |          4 |          1 |          1 | 2020-04-15   |     33 |
	    |          5 |          3 |          1 | 2020-04-15   |     67 |
	    |          6 |          4 |          2 | 2020-04-21   |    100 |
	    |          7 |          3 |          1 | 2020-05-17   |     33 |
	    |          8 |          1 |          2 | 2022-03-22   |   NULL |
	    +------------+------------+------------+--------------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT * FROM answer;
	    +-----------+----------------------------------------------------------------------------------------------------------------------------------------------+-------------+------------+
	    | answer_id | name_answer                                                                                                                                  | question_id | is_correct |
	    +-----------+----------------------------------------------------------------------------------------------------------------------------------------------+-------------+------------+
	    |         1 | UPDATE                                                                                                                                       |           1 |          0 |
	    |         2 | SELECT                                                                                                                                       |           1 |          1 |
	    |         3 | INSERT                                                                                                                                       |           1 |          0 |
	    |         4 | GROUP BY                                                                                                                                     |           2 |          0 |
	    |         5 | FROM                                                                                                                                         |           2 |          0 |
	    |         6 | WHERE                                                                                                                                        |           2 |          1 |
	    |         7 | SELECT                                                                                                                                       |           2 |          0 |
	    |         8 | SORT                                                                                                                                         |           3 |          0 |
	    |         9 | ORDER BY                                                                                                                                     |           3 |          1 |
	    |        10 | RANG BY                                                                                                                                      |           3 |          0 |
	    |        11 | SELECT * FROM student                                                                                                                        |           4 |          1 |
	    |        12 | SELECT student                                                                                                                               |           4 |          0 |
	    |        13 | INNER JOIN                                                                                                                                   |           5 |          1 |
	    |        14 | LEFT JOIN                                                                                                                                    |           5 |          0 |
	    |        15 | RIGHT JOIN                                                                                                                                   |           5 |          0 |
	    |        16 | CROSS JOIN                                                                                                                                   |           5 |          0 |
	    |        17 | совокупность данных, организованных по определенным правилам                                                                                 |           6 |          1 |
	    |        18 | совокупность программ для хранения и обработки больших массивов информации                                                                   |           6 |          0 |
	    |        19 | строка                                                                                                                                       |           7 |          0 |
	    |        20 | столбец                                                                                                                                      |           7 |          0 |
	    |        21 | таблица                                                                                                                                      |           7 |          1 |
	    |        22 | обобщенное представление пользователей о данных                                                                                              |           8 |          1 |
	    |        23 | описание представления данных в памяти компьютера                                                                                            |           8 |          0 |
	    |        24 | база данных                                                                                                                                  |           8 |          0 |
	    |        25 | file                                                                                                                                         |           9 |          1 |
	    |        26 | INT                                                                                                                                          |           9 |          0 |
	    |        27 | VARCHAR                                                                                                                                      |           9 |          0 |
	    |        28 | DATE                                                                                                                                         |           9 |          0 |
	    +-----------+----------------------------------------------------------------------------------------------------------------------------------------------+-------------+------------+
	    28 rows in set (0.00 sec)
	mysql> UPDATE attempt
	SET result = (SELECT ROUND((SUM(is_correct)/3)*100, 2)
	    FROM answer
	    INNER JOIN testing
	    ON answer.answer_id = testing.answer_id
	    WHERE testing.attempt_id = 8)
	WHERE attempt.attempt_id = 8;
	Task:
	Удалить из таблицы attempt все попытки, выполненные раньше 1 мая 2020 года. Также удалить и все соответствующие этим попыткам вопросы из таблицы testing, которая создавалась следующим запросом:
	    CREATE TABLE testing (
	        testing_id INT PRIMARY KEY AUTO_INCREMENT,
	        attempt_id INT,
	        question_id INT,
	        answer_id INT,
	        FOREIGN KEY (attempt_id)  REFERENCES attempt (attempt_id) ON DELETE CASCADE
	    );
	Decision:
	mysql> SELECT * FROM testing;
	    +------------+------------+-------------+-----------+
	    | testing_id | attempt_id | question_id | answer_id |
	    +------------+------------+-------------+-----------+
	    |          1 |          1 |           9 |        25 |
	    |          2 |          1 |           7 |        19 |
	    |          3 |          1 |           6 |        17 |
	    |          4 |          2 |           3 |         9 |
	    |          5 |          2 |           1 |         2 |
	    |          6 |          2 |           4 |        11 |
	    |          7 |          3 |           6 |        18 |
	    |          8 |          3 |           8 |        24 |
	    |          9 |          3 |           9 |        28 |
	    |         10 |          4 |           1 |         2 |
	    |         11 |          4 |           5 |        16 |
	    |         12 |          4 |           3 |        10 |
	    |         13 |          5 |           2 |         6 |
	    |         14 |          5 |           1 |         2 |
	    |         15 |          5 |           4 |        12 |
	    |         16 |          6 |           6 |        17 |
	    |         17 |          6 |           8 |        22 |
	    |         18 |          6 |           7 |        21 |
	    |         19 |          7 |           1 |         3 |
	    |         20 |          7 |           4 |        11 |
	    |         21 |          7 |           5 |        16 |
	    |         22 |          8 |           6 |      NULL |
	    |         23 |          8 |           7 |      NULL |
	    |         24 |          8 |           8 |      NULL |
	    +------------+------------+-------------+-----------+
	    24 rows in set (0.00 sec)
	mysql> SELECT * FROM attempt;
	    +------------+------------+------------+--------------+--------+
	    | attempt_id | student_id | subject_id | date_attempt | result |
	    +------------+------------+------------+--------------+--------+
	    |          1 |          1 |          2 | 2020-03-23   |     67 |
	    |          2 |          3 |          1 | 2020-03-23   |    100 |
	    |          3 |          4 |          2 | 2020-03-26   |      0 |
	    |          4 |          1 |          1 | 2020-04-15   |     33 |
	    |          5 |          3 |          1 | 2020-04-15   |     67 |
	    |          6 |          4 |          2 | 2020-04-21   |    100 |
	    |          7 |          3 |          1 | 2020-05-17   |     33 |
	    |          8 |          1 |          2 | 2022-03-22   |   NULL |
	    +------------+------------+------------+--------------+--------+
	    8 rows in set (0.00 sec)
	mysql> DELETE FROM attempt
	WHERE date_attempt < '2020-05-01';
	    Query OK, 6 rows affected (0.19 sec)
	mysql> SELECT * FROM attempt;
	    +------------+------------+------------+--------------+--------+
	    | attempt_id | student_id | subject_id | date_attempt | result |
	    +------------+------------+------------+--------------+--------+
	    |          7 |          3 |          1 | 2020-05-17   |     33 |
	    |          8 |          1 |          2 | 2022-03-22   |   NULL |
	    +------------+------------+------------+--------------+--------+
	    2 rows in set (0.00 sec)
	mysql> SELECT * FROM testing;
	    +------------+------------+-------------+-----------+
	    | testing_id | attempt_id | question_id | answer_id |
	    +------------+------------+-------------+-----------+
	    |         19 |          7 |           1 |         3 |
	    |         20 |          7 |           4 |        11 |
	    |         21 |          7 |           5 |        16 |
	    |         22 |          8 |           6 |      NULL |
	    |         23 |          8 |           7 |      NULL |
	    |         24 |          8 |           8 |      NULL |
	    +------------+------------+-------------+-----------+
	    6 rows in set (0.00 sec)
	Task:
	Найти вопрос, с самой большой успешностью выполнения - "самый легкий" и вопрос, с самой маленькой успешностью выполнения - "самый сложный". (Подробно про успешность на этом шаге). Вывести предмет, эти два вопроса и указание - самый сложный или самый легкий это вопрос. Сначала вывести самый легкий запроса, потом самый сложный.
	Decision:
	SET @mn = (SELECT SUM(is_correct) / COUNT(is_correct) * 100
	FROM subject
	JOIN question USING(subject_id)
	JOIN testing USING(question_id)
	LEFT JOIN answer USING(answer_id)
	GROUP BY name_subject, name_question
	ORDER BY 1
	LIMIT 1);
	SET @mx = (SELECT SUM(is_correct) / COUNT(is_correct) * 100
	FROM subject
	JOIN question USING(subject_id)
	JOIN testing USING(question_id)
	LEFT JOIN answer USING(answer_id)
	GROUP BY name_subject, name_question
	ORDER BY 1 DESC
	LIMIT 1);
	SELECT name_subject, name_question,
	IF(SUM(is_correct) / COUNT(is_correct) * 100 = @mx, 'самый легкий', 'самый сложный') AS Сложность
	FROM subject
	JOIN question USING(subject_id)
	JOIN testing USING(question_id)
	LEFT JOIN answer USING(answer_id)
	GROUP BY name_subject, name_question
	HAVING SUM(is_correct) / COUNT(is_correct) * 100 = @mn OR SUM(is_correct) / COUNT(is_correct) * 100 = @mx
	ORDER BY SUM(is_correct) / COUNT(is_correct) * 100 DESC
	+--------------+-------------------------------------------------------------------------+---------------+
	| name_subject | name_question | Сложность |
	+--------------+-------------------------------------------------------------------------+---------------+
	| Основы SQL | Условие, по которому отбираются записи, задается после ключевого слова: | самый легкий |
	| Основы SQL | Для внутреннего соединения таблиц используется оператор: | самый сложный |
	+--------------+-------------------------------------------------------------------------+---------------+
	Task:
	Для повышения успеваемости, предоставить возможность студентам снова пройти тестирование.Для студентов, у которых количество попыток меньше 3 и максимальный балл < 70, в таблицу attempt добавить новые попытки по соответствующим предметам с текущей датой.
	Decision:
	INSERT attempt(student_id, subject_id, date_attempt, result)
	SELECT student_id, subject_id, NOW(), NULL
	FROM attempt
	GROUP BY student_id, subject_id
	HAVING COUNT(subject_id) < 3 AND MAX(result) < 70;
	SELECT * FROM attempt;
	+------------+------------+------------+--------------+--------+
	| attempt_id | student_id | subject_id | date_attempt | result |
	+------------+------------+------------+--------------+--------+
	| 1 | 1 | 2 | 2020-03-23 | 67 |
	| 2 | 3 | 1 | 2020-03-23 | 100 |
	| 3 | 4 | 2 | 2020-03-26 | 0 |
	| 4 | 1 | 1 | 2020-04-15 | 33 |
	| 5 | 3 | 1 | 2020-04-15 | 67 |
	| 6 | 4 | 2 | 2020-04-21 | 100 |
	| 7 | 3 | 1 | 2020-05-17 | 33 |
	| 8 | 1 | 1 | 2020-05-18 | None |
	| 9 | 1 | 2 | 2020-05-18 | None |
	+------------+------------+------------+--------------+--------+
	Task:
	Разработать базу "Абитуриент".
	Университет состоит из множества факультетов (школ). Абитуриенты зачисляются на образовательные программы по результатам Единого государственного экзамена (ЕГЭ). Каждая образовательная программа относится к определенному факультету, для нее определяются предметы ЕГЭ, необходимые для поступления, минимальный балл по этим предметам, а также план набора (количество мест) на образовательную программу.
	Абитуриенты подают заявление в приемную комиссию на образовательную программу, каждый абитуриент может выбрать несколько образовательных программ (но не более трех). В заявлении указываются фамилия, имя, отчество заявителя, а также его достижения: получил ли он медаль за учебу в школе, есть ли у него значок ГТО и т.д. При этом за каждое достижение начисляется дополнительное очко. Абитуриент предоставляет справку с результатами сдачи Единого государственного экзамена. Если абитуриент выбирает образовательную программу, то он должен был сдать предметы, определенные для этой программы, и балл должен быть как минимум минимальным по этому предмету.
	Зачисление абитуриентов осуществляется следующим образом: сначала подсчитывается сумма баллов по предметам для каждой образовательной программы, суммируются баллы успеваемости, затем абитуриенты сортируются в порядке убывания суммы баллов и отбираются первые в соответствии с количеством мест, определенным планом набора.
	Decision:
	mysql> CREATE DATABASE Students;
	Query OK, 1 row affected (0.26 sec)
	mysql> USE Students;
	Database changed
	mysql> CREATE TABLE department (department_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> name_department VARCHAR(30));
	Query OK, 0 rows affected (1.35 sec)
	mysql> INSERT INTO department (department_id, name_department)
	    -> VALUES (1, 'Инженерная школа'), (2, 'Школа естественных наук');
	Query OK, 2 rows affected (0.15 sec)
	Records: 2  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM department;
	+---------------+----------------------------------------------+
	| department_id | name_department                              |
	+---------------+----------------------------------------------+
	|             1 | Инженерная школа                             |
	|             2 | Школа естественных наук                      |
	+---------------+----------------------------------------------+
	2 rows in set (0.00 sec)
	mysql> CREATE TABLE subject (subject_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> name_subject VARCHAR(30));
	Query OK, 0 rows affected (2.33 sec)
	mysql> INSERT INTO subject (subject_id, name_subject)
	    -> VALUES (1, 'Русский язык'), (2, 'Математика'), (3, 'Физика'), (4, 'Информатика');
	Query OK, 4 rows affected (0.26 sec)
	Records: 4  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM subject;
	+------------+-------------------------+
	| subject_id | name_subject            |
	+------------+-------------------------+
	|          1 | Русский язык            |
	|          2 | Математика              |
	|          3 | Физика                  |
	|          4 | Информатика             |
	+------------+-------------------------+
	4 rows in set (0.00 sec)
	mysql> CREATE TABLE program (program_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> name_program VARCHAR(50),
	    -> department_id INT,
	    -> plan INT,
	    -> FOREIGN KEY (department_id) REFERENCES department(department_id) ON DELETE CASCADE);
	Query OK, 0 rows affected (1.43 sec)
	mysql> INSERT INTO program (program_id, name_program, department_id, plan)
	    -> VALUES (1, 'Прикладная математика и информатика', 2, 2),
	    -> (2, 'Математика и компьютерные науки', 2, 1),
	    -> (3, 'Прикладная механика', 1, 2),
	    -> (4, 'Мехатроника и робототехника', 1, 3);
	Query OK, 4 rows affected (0.14 sec)
	Records: 4  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM program;
	+------------+---------------------------------------------------------------------+---------------+------+
	| program_id | name_program                                                        | department_id | plan |
	+------------+---------------------------------------------------------------------+---------------+------+
	|          1 | Прикладная математика и информатика                                 |             2 |    2 |
	|          2 | Математика и компьютерные науки                                     |             2 |    1 |
	|          3 | Прикладная механика                                                 |             1 |    2 |
	|          4 | Мехатроника и робототехника                                         |             1 |    3 |
	+------------+---------------------------------------------------------------------+---------------+------+
	4 rows in set (0.01 sec)
	mysql> CREATE TABLE enrollee (enrollee_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> name_enrollee VARCHAR(50));
	Query OK, 0 rows affected (2.96 sec)
	mysql> INSERT INTO enrollee (enrollee_id, name_enrollee)
	    -> VALUES (1, 'Баранов Павел'), (2, 'Абрамова Катя'), (3, 'Семенов Иван'),
	    -> (4, 'Яковлева Галина'), (5, 'Попов Илья'), (6, 'Степанова Дарья');
	Query OK, 6 rows affected (0.30 sec)
	Records: 6  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM enrollee;
	+-------------+-------------------------------+
	| enrollee_id | name_enrollee                 |
	+-------------+-------------------------------+
	|           1 | Баранов Павел                 |
	|           2 | Абрамова Катя                 |
	|           3 | Семенов Иван                  |
	|           4 | Яковлева Галина               |
	|           5 | Попов Илья                    |
	|           6 | Степанова Дарья               |
	+-------------+-------------------------------+
	6 rows in set (0.01 sec)
	mysql> CREATE TABLE achievement (achievement_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> name_achievement VARCHAR(30),
	    -> bonus INT);
	Query OK, 0 rows affected (1.13 sec)
	mysql> INSERT INTO achievement (achievement_id, name_achievement, bonus)
	    -> VALUES (1, 'Золотая медаль', 5), (2, 'Серебряная медаль', 3),
	    -> (3, 'Золотой значок ГТО', 3),(4, 'Серебряный значок ГТО', 1);
	Query OK, 4 rows affected (0.31 sec)
	Records: 4  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM achievement;
	+----------------+------------------------------------------+-------+
	| achievement_id | name_achievement                         | bonus |
	+----------------+------------------------------------------+-------+
	|              1 | Золотая медаль                           |     5 |
	|              2 | Серебряная медаль                        |     3 |
	|              3 | Золотой значок ГТО                       |     3 |
	|              4 | Серебряный значок ГТО                    |     1 |
	+----------------+------------------------------------------+-------+
	4 rows in set (0.00 sec)
	mysql> CREATE TABLE enrollee_achievement (enrollee_achiev_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> enrollee_id INT,
	    -> achievement_id INT,
	    -> FOREIGN KEY (enrollee_id) REFERENCES enrollee(enrollee_id) ON DELETE CASCADE,
	    -> FOREIGN KEY (achievement_id) REFERENCES achievement(achievement_id) ON DELETE CASCADE);
	Query OK, 0 rows affected (1.85 sec)
	mysql> INSERT INTO enrollee_achievement (enrollee_achiev_id, enrollee_id, achievement_id)
	    -> VALUES (1, 1, 2),
	    -> (2, 1, 3),
	    -> (3, 3, 1),
	    -> (4, 4, 4),
	    -> (5, 5, 1),
	    -> (6, 5, 3);
	Query OK, 6 rows affected (0.29 sec)
	Records: 6  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM enrollee_achievement;
	+--------------------+-------------+----------------+
	| enrollee_achiev_id | enrollee_id | achievement_id |
	+--------------------+-------------+----------------+
	|                  1 |           1 |              2 |
	|                  2 |           1 |              3 |
	|                  3 |           3 |              1 |
	|                  4 |           4 |              4 |
	|                  5 |           5 |              1 |
	|                  6 |           5 |              3 |
	+--------------------+-------------+----------------+
	6 rows in set (0.00 sec)
	mysql> CREATE TABLE program_subject (program_subject_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> program_id INT,
	    -> subject_id INT,
	    -> min_result INT,
	    -> FOREIGN KEY (program_id) REFERENCES program(program_id)  ON DELETE CASCADE,
	    -> FOREIGN KEY (subject_id) REFERENCES subject(subject_id) ON DELETE CASCADE);
	Query OK, 0 rows affected (2.22 sec)
	mysql> INSERT INTO program_subject (program_subject_id, program_id, subject_id, min_result)
	    -> VALUES (1, 1, 1, 40),(2, 1, 2, 50), (3, 1, 4, 60), (4, 2, 1, 30),
	    -> (5, 2, 2, 50),(6, 2, 4, 60), (7, 3, 1, 30),(8, 3, 2, 45),
	    -> (9, 3, 3, 45),(10, 4, 1, 40), (11, 4, 2, 45), (12, 4, 3, 45);
	Query OK, 12 rows affected (0.30 sec)
	Records: 12  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM program_subject;
	+--------------------+------------+------------+------------+
	| program_subject_id | program_id | subject_id | min_result |
	+--------------------+------------+------------+------------+
	|                  1 |          1 |          1 |         40 |
	|                  2 |          1 |          2 |         50 |
	|                  3 |          1 |          4 |         60 |
	|                  4 |          2 |          1 |         30 |
	|                  5 |          2 |          2 |         50 |
	|                  6 |          2 |          4 |         60 |
	|                  7 |          3 |          1 |         30 |
	|                  8 |          3 |          2 |         45 |
	|                  9 |          3 |          3 |         45 |
	|                 10 |          4 |          1 |         40 |
	|                 11 |          4 |          2 |         45 |
	|                 12 |          4 |          3 |         45 |
	+--------------------+------------+------------+------------+
	12 rows in set (0.00 sec)
	mysql> CREATE TABLE program_enrollee (program_enrollee_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> program_id INT,
	    -> enrollee_id INT,
	    -> FOREIGN KEY (program_id) REFERENCES program(program_id) ON DELETE CASCADE,
	    -> FOREIGN KEY (enrollee_id) REFERENCES enrollee(enrollee_id) ON DELETE CASCADE);
	Query OK, 0 rows affected (2.10 sec)
	mysql> INSERT INTO program_enrollee (program_enrollee_id, program_id, enrollee_id)
	    -> VALUES (1, 3, 1), (2, 4, 1), (3, 1, 1), (4, 2, 2), (5, 1, 2),
	    -> (6, 1, 3), (7, 2, 3), (8, 4, 3), (9, 3, 4), (10, 3, 5),
	    -> (11, 4, 5), (12, 2, 6), (13, 3, 6), (14, 4, 6);
	Query OK, 14 rows affected (0.24 sec)
	Records: 14  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM program_enrollee;
	+---------------------+------------+-------------+
	| program_enrollee_id | program_id | enrollee_id |
	+---------------------+------------+-------------+
	|                   1 |          3 |           1 |
	|                   2 |          4 |           1 |
	|                   3 |          1 |           1 |
	|                   4 |          2 |           2 |
	|                   5 |          1 |           2 |
	|                   6 |          1 |           3 |
	|                   7 |          2 |           3 |
	|                   8 |          4 |           3 |
	|                   9 |          3 |           4 |
	|                  10 |          3 |           5 |
	|                  11 |          4 |           5 |
	|                  12 |          2 |           6 |
	|                  13 |          3 |           6 |
	|                  14 |          4 |           6 |
	+---------------------+------------+-------------+
	14 rows in set (0.00 sec)
	mysql> CREATE TABLE enrollee_subject (enrollee_subject_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> enrollee_id INT,
	    -> subject_id INT,
	    -> result INT,
	    -> FOREIGN KEY (enrollee_id) REFERENCES enrollee(enrollee_id) ON DELETE CASCADE,
	    -> FOREIGN KEY (subject_id) REFERENCES subject(subject_id) ON DELETE CASCADE);
	Query OK, 0 rows affected (2.15 sec)
	mysql> INSERT INTO enrollee_subject (enrollee_subject_id, enrollee_id, subject_id, result)
	    -> VALUES (1, 1, 1, 68), (2, 1, 2, 70), (3, 1, 3, 41), (4, 1, 4, 75), (5, 2, 1, 75), (6, 2, 2, 70),
	    -> (7, 2, 4, 81), (8, 3, 1, 85), (9, 3, 2, 67), (10, 3, 3, 90), (11, 3, 4, 78), (12, 4, 1, 82),
	    -> (13, 4, 2, 86), (14, 4, 3, 70), (15, 5, 1, 65), (16, 5, 2, 67), (17, 5, 3, 60),
	    -> (18, 6, 1, 90), (19, 6, 2, 92), (20, 6, 3, 88), (21, 6, 4, 94);
	Query OK, 21 rows affected (0.30 sec)
	Records: 21  Duplicates: 0  Warnings: 0
	mysql> SHOW TABLES;
	+----------------------+
	| Tables_in_Students   |
	+----------------------+
	| achievement          |
	| department           |
	| enrollee             |
	| enrollee_achievement |
	| enrollee_subject     |
	| program              |
	| program_enrollee     |
	| program_subject      |
	| subject              |
	+----------------------+
	9 rows in set (0.00 sec)
	Запросы на выборку
	Task:
	Вывести абитуриентов, которые хотят поступать на образовательную программу Мехатроника и робототехника» в отсортированном по фамилиям виде.
	Decision:
	mysql> SELECT * FROM program;
	+------------+---------------------------------------------------------------------+---------------+------+
	| program_id | name_program                                                        | department_id | plan |
	+------------+---------------------------------------------------------------------+---------------+------+
	|          1 | Прикладная математика и информатика                                 |             2 |    2 |
	|          2 | Математика и компьютерные науки                                     |             2 |    1 |
	|          3 | Прикладная механика                                                 |             1 |    2 |
	|          4 | Мехатроника и робототехника                                         |             1 |    3 |
	+------------+---------------------------------------------------------------------+---------------+------+
	4 rows in set (0.00 sec)
	mysql> SELECT * FROM enrollee;
	+-------------+-------------------------------+
	| enrollee_id | name_enrollee                 |
	+-------------+-------------------------------+
	|           1 | Баранов Павел                 |
	|           2 | Абрамова Катя                 |
	|           3 | Семенов Иван                  |
	|           4 | Яковлева Галина               |
	|           5 | Попов Илья                    |
	|           6 | Степанова Дарья               |
	+-------------+-------------------------------+
	6 rows in set (0.00 sec)
	mysql> SELECT * FROM program_enrollee;
	+---------------------+------------+-------------+
	| program_enrollee_id | program_id | enrollee_id |
	+---------------------+------------+-------------+
	|                   1 |          3 |           1 |
	|                   2 |          4 |           1 |
	|                   3 |          1 |           1 |
	|                   4 |          2 |           2 |
	|                   5 |          1 |           2 |
	|                   6 |          1 |           3 |
	|                   7 |          2 |           3 |
	|                   8 |          4 |           3 |
	|                   9 |          3 |           4 |
	|                  10 |          3 |           5 |
	|                  11 |          4 |           5 |
	|                  12 |          2 |           6 |
	|                  13 |          3 |           6 |
	|                  14 |          4 |           6 |
	+---------------------+------------+-------------+
	14 rows in set (0.00 sec)
	mysql> SELECT name_enrollee
	    -> FROM enrollee
	    -> INNER JOIN program_enrollee
	    -> ON enrollee.enrollee_id = program_enrollee.enrollee_id
	    -> INNER JOIN program
	    -> ON program_enrollee.program_id = program.program_id
	    -> WHERE name_program="Мехатроника и робототехника"
	    -> ORDER BY name_enrollee;
	+-------------------------------+
	| name_enrollee                 |
	+-------------------------------+
	| Баранов Павел                 |
	| Попов Илья                    |
	| Семенов Иван                  |
	| Степанова Дарья               |
	+-------------------------------+
	4 rows in set (0.00 sec)
	Task:
	Вывести образовательные программы, на которые для поступления необходим предмет Информатика». Программы отсортировать в обратном алфавитном порядке.
	Decision:
	mysql> SELECT * FROM program;
	+------------+---------------------------------------------------------------------+---------------+------+
	| program_id | name_program                                                        | department_id | plan |
	+------------+---------------------------------------------------------------------+---------------+------+
	|          1 | Прикладная математика и информатика                                 |             2 |    2 |
	|          2 | Математика и компьютерные науки                                     |             2 |    1 |
	|          3 | Прикладная механика                                                 |             1 |    2 |
	|          4 | Мехатроника и робототехника                                         |             1 |    3 |
	+------------+---------------------------------------------------------------------+---------------+------+
	4 rows in set (0.00 sec)
	mysql> SELECT * FROM subject;
	+------------+-------------------------+
	| subject_id | name_subject            |
	+------------+-------------------------+
	|          1 | Русский язык            |
	|          2 | Математика              |
	|          3 | Физика                  |
	|          4 | Информатика             |
	+------------+-------------------------+
	4 rows in set (0.01 sec)
	mysql> SELECT * FROM program_subject;
	+--------------------+------------+------------+------------+
	| program_subject_id | program_id | subject_id | min_result |
	+--------------------+------------+------------+------------+
	|                  1 |          1 |          1 |         40 |
	|                  2 |          1 |          2 |         50 |
	|                  3 |          1 |          4 |         60 |
	|                  4 |          2 |          1 |         30 |
	|                  5 |          2 |          2 |         50 |
	|                  6 |          2 |          4 |         60 |
	|                  7 |          3 |          1 |         30 |
	|                  8 |          3 |          2 |         45 |
	|                  9 |          3 |          3 |         45 |
	|                 10 |          4 |          1 |         40 |
	|                 11 |          4 |          2 |         45 |
	|                 12 |          4 |          3 |         45 |
	+--------------------+------------+------------+------------+
	12 rows in set (0.00 sec)
	mysql> SELECT name_program
	    -> FROM program
	    -> INNER JOIN program_subject
	    -> USING(program_id)
	    -> INNER JOIN subject
	    -> USING(subject_id)
	    -> WHERE name_subject="Информатика";
	+---------------------------------------------------------------------+
	| name_program                                                        |
	+---------------------------------------------------------------------+
	| Прикладная математика и информатика                                 |
	| Математика и компьютерные науки                                     |
	+---------------------------------------------------------------------+
	2 rows in set (0.00 sec)
	Task:
	Выведите количество абитуриентов, сдавших ЕГЭ по каждому предмету, максимальное, минимальное и среднее значение баллов по предмету ЕГЭ. Вычисляемые столбцы назвать Количество, Максимум, Минимум, Среднее. Информацию отсортировать по названию предмета в алфавитном порядке, среднее значение округлить до одного знака после запятой.
	Decision:
	mysql> SELECT * FROM subject;
	+------------+-------------------------+
	| subject_id | name_subject            |
	+------------+-------------------------+
	|          1 | Русский язык            |
	|          2 | Математика              |
	|          3 | Физика                  |
	|          4 | Информатика             |
	+------------+-------------------------+
	4 rows in set (0.00 sec)
	mysql> SELECT * FROM enrollee_subject;
	+---------------------+-------------+------------+--------+
	| enrollee_subject_id | enrollee_id | subject_id | result |
	+---------------------+-------------+------------+--------+
	|                   1 |           1 |          1 |     68 |
	|                   2 |           1 |          2 |     70 |
	|                   3 |           1 |          3 |     41 |
	|                   4 |           1 |          4 |     75 |
	|                   5 |           2 |          1 |     75 |
	|                   6 |           2 |          2 |     70 |
	|                   7 |           2 |          4 |     81 |
	|                   8 |           3 |          1 |     85 |
	|                   9 |           3 |          2 |     67 |
	|                  10 |           3 |          3 |     90 |
	|                  11 |           3 |          4 |     78 |
	|                  12 |           4 |          1 |     82 |
	|                  13 |           4 |          2 |     86 |
	|                  14 |           4 |          3 |     70 |
	|                  15 |           5 |          1 |     65 |
	|                  16 |           5 |          2 |     67 |
	|                  17 |           5 |          3 |     60 |
	|                  18 |           6 |          1 |     90 |
	|                  19 |           6 |          2 |     92 |
	|                  20 |           6 |          3 |     88 |
	|                  21 |           6 |          4 |     94 |
	+---------------------+-------------+------------+--------+
	21 rows in set (0.01 sec)
	mysql> SELECT name_subject,
	    ->     COUNT(enrollee_id) AS Количество,
	    ->     MAX(result) AS Максимум,
	    ->     MIN(result) AS Минимум,
	    ->     ROUND(AVG(result), 1) AS Среднее
	    -> FROM subject
	    -> INNER JOIN enrollee_subject
	    -> USING(subject_id)
	    -> GROUP BY name_subject
	    -> ORDER BY name_subject;
	+-------------------------+----------------------+------------------+----------------+----------------+
	| name_subject            | Количество           | Максимум         | Минимум        | Среднее        |
	+-------------------------+----------------------+------------------+----------------+----------------+
	| Информатика             |                    4 |               94 |             75 |           82.0 |
	| Математика              |                    6 |               92 |             67 |           75.3 |
	| Русский язык            |                    6 |               90 |             65 |           77.5 |
	| Физика                  |                    5 |               90 |             41 |           69.8 |
	+-------------------------+----------------------+------------------+----------------+----------------+
	4 rows in set (0.01 sec)
	Task:
	Вывести образовательные программы, для которых минимальный балл ЕГЭ по каждому предмету больше или равен 40 баллам. Программы вывести в отсортированном по алфавиту виде.
	Decision:
	mysql> SELECT * FROM program;
	+------------+---------------------------------------------------------------------+---------------+------+
	| program_id | name_program                                                        | department_id | plan |
	+------------+---------------------------------------------------------------------+---------------+------+
	|          1 | Прикладная математика и информатика                                 |             2 |    2 |
	|          2 | Математика и компьютерные науки                                     |             2 |    1 |
	|          3 | Прикладная механика                                                 |             1 |    2 |
	|          4 | Мехатроника и робототехника                                         |             1 |    3 |
	+------------+---------------------------------------------------------------------+---------------+------+
	4 rows in set (0.00 sec)
	mysql> SELECT * FROM program_subject;
	+--------------------+------------+------------+------------+
	| program_subject_id | program_id | subject_id | min_result |
	+--------------------+------------+------------+------------+
	|                  1 |          1 |          1 |         40 |
	|                  2 |          1 |          2 |         50 |
	|                  3 |          1 |          4 |         60 |
	|                  4 |          2 |          1 |         30 |
	|                  5 |          2 |          2 |         50 |
	|                  6 |          2 |          4 |         60 |
	|                  7 |          3 |          1 |         30 |
	|                  8 |          3 |          2 |         45 |
	|                  9 |          3 |          3 |         45 |
	|                 10 |          4 |          1 |         40 |
	|                 11 |          4 |          2 |         45 |
	|                 12 |          4 |          3 |         45 |
	+--------------------+------------+------------+------------+
	12 rows in set (0.00 sec)
	mysql> SELECT name_program
	    -> FROM (SELECT name_program, MIN(min_result)
	    ->      FROM program
	    ->      INNER JOIN program_subject
	    ->      USING(program_id)
	    ->      GROUP BY name_program
	    ->      HAVING MIN(min_result)>=40) table1
	    -> ORDER BY name_program;
	+---------------------------------------------------------------------+
	| name_program                                                        |
	+---------------------------------------------------------------------+
	| Мехатроника и робототехника                                         |
	| Прикладная математика и информатика                                 |
	+---------------------------------------------------------------------+
	2 rows in set (0.01 sec)
	Task:
	Вывести образовательные программы, которые имеют самый большой план набора,  вместе с этой величиной.
	Decision:
	mysql> SELECT * FROM program;
	+------------+---------------------------------------------------------------------+---------------+------+
	| program_id | name_program                                                        | department_id | plan |
	+------------+---------------------------------------------------------------------+---------------+------+
	|          1 | Прикладная математика и информатика                                 |             2 |    2 |
	|          2 | Математика и компьютерные науки                                     |             2 |    1 |
	|          3 | Прикладная механика                                                 |             1 |    2 |
	|          4 | Мехатроника и робототехника                                         |             1 |    3 |
	+------------+---------------------------------------------------------------------+---------------+------+
	4 rows in set (0.00 sec)
	mysql> SELECT name_program, plan
	    -> FROM program
	    -> WHERE plan=(SELECT MAX(plan)
	    ->     FROM program) ;
	+------------------------------------------------------+------+
	| name_program                                         | plan |
	+------------------------------------------------------+------+
	| Мехатроника и робототехника                          |    3 |
	+------------------------------------------------------+------+
	1 row in set (0.11 sec)
	Task:
	Посчитать, сколько дополнительных баллов получит каждый абитуриент. Столбец с дополнительными баллами назвать Бонус. Информацию вывести в отсортированном по фамилиям виде.
	Decision:
	mysql> SELECT * FROM achievement;
	+----------------+------------------------------------------+-------+
	| achievement_id | name_achievement                         | bonus |
	+----------------+------------------------------------------+-------+
	|              1 | Золотая медаль                           |     5 |
	|              2 | Серебряная медаль                        |     3 |
	|              3 | Золотой значок ГТО                       |     3 |
	|              4 | Серебряный значок ГТО                    |     1 |
	+----------------+------------------------------------------+-------+
	4 rows in set (0.00 sec)
	mysql> SELECT * FROM enrollee;
	+-------------+-------------------------------+
	| enrollee_id | name_enrollee                 |
	+-------------+-------------------------------+
	|           1 | Баранов Павел                 |
	|           2 | Абрамова Катя                 |
	|           3 | Семенов Иван                  |
	|           4 | Яковлева Галина               |
	|           5 | Попов Илья                    |
	|           6 | Степанова Дарья               |
	+-------------+-------------------------------+
	6 rows in set (0.00 sec)
	mysql> SELECT * FROM enrollee_achievement;
	+--------------------+-------------+----------------+
	| enrollee_achiev_id | enrollee_id | achievement_id |
	+--------------------+-------------+----------------+
	|                  1 |           1 |              2 |
	|                  2 |           1 |              3 |
	|                  3 |           3 |              1 |
	|                  4 |           4 |              4 |
	|                  5 |           5 |              1 |
	|                  6 |           5 |              3 |
	+--------------------+-------------+----------------+
	6 rows in set (0.00 sec)
	mysql> SELECT name_enrollee,
	    ->     IFNULL(SUM(bonus),0) AS Бонус
	    -> FROM enrollee
	    -> LEFT JOIN enrollee_achievement
	    -> USING(enrollee_id)
	    -> LEFT JOIN achievement
	    -> USING(achievement_id)
	    -> GROUP BY name_enrollee
	    -> ORDER BY name_enrollee;
	+-------------------------------+------------+
	| name_enrollee                 | Бонус      |
	+-------------------------------+------------+
	| Абрамова Катя                 |          0 |
	| Баранов Павел                 |          6 |
	| Попов Илья                    |          8 |
	| Семенов Иван                  |          5 |
	| Степанова Дарья               |          0 |
	| Яковлева Галина               |          1 |
	+-------------------------------+------------+
	6 rows in set (0.00 sec)
	Task:
	Выведите сколько человек подало заявление на каждую образовательную программу и конкурс на нее (число поданных заявлений деленное на количество мест по плану), округленный до 2-х знаков после запятой. В запросе вывести название факультета, к которому относится образовательная программа, название образовательной программы, план набора абитуриентов на образовательную программу (plan), количество поданных заявлений (Количество) и Конкурс. Информацию отсортировать в порядке убывания конкурса.
	Decision:
	mysql> SELECT * FROM department;
	+---------------+----------------------------------------------+
	| department_id | name_department                              |
	+---------------+----------------------------------------------+
	|             1 | Инженерная школа                             |
	|             2 | Школа естественных наук                      |
	+---------------+----------------------------------------------+
	2 rows in set (0.01 sec)
	mysql> SELECT * FROM program;
	+------------+---------------------------------------------------------------------+---------------+------+
	| program_id | name_program                                                        | department_id | plan |
	+------------+---------------------------------------------------------------------+---------------+------+
	|          1 | Прикладная математика и информатика                                 |             2 |    2 |
	|          2 | Математика и компьютерные науки                                     |             2 |    1 |
	|          3 | Прикладная механика                                                 |             1 |    2 |
	|          4 | Мехатроника и робототехника                                         |             1 |    3 |
	+------------+---------------------------------------------------------------------+---------------+------+
	4 rows in set (0.01 sec)
	mysql> SELECT * FROM program_enrollee;
	+---------------------+------------+-------------+
	| program_enrollee_id | program_id | enrollee_id |
	+---------------------+------------+-------------+
	|                   1 |          3 |           1 |
	|                   2 |          4 |           1 |
	|                   3 |          1 |           1 |
	|                   4 |          2 |           2 |
	|                   5 |          1 |           2 |
	|                   6 |          1 |           3 |
	|                   7 |          2 |           3 |
	|                   8 |          4 |           3 |
	|                   9 |          3 |           4 |
	|                  10 |          3 |           5 |
	|                  11 |          4 |           5 |
	|                  12 |          2 |           6 |
	|                  13 |          3 |           6 |
	|                  14 |          4 |           6 |
	+---------------------+------------+-------------+
	14 rows in set (0.00 sec)
	mysql> SELECT name_department,
	    ->     name_program,
	    ->     plan,
	    ->     COUNT(enrollee_id) AS Количество,
	    -> ROUND(COUNT(enrollee_id)/plan ,2) AS Конкурс
	    -> FROM department
	    -> INNER JOIN program
	    -> USING(department_id)
	    -> INNER JOIN program_enrollee
	    -> USING(program_id)
	    -> GROUP BY name_department, name_program, plan
	    -> ORDER BY Конкурс DESC;
	+----------------------------------------------+---------------------------------------------------------------------+------+----------------------+----------------+
	| name_department                              | name_program                                                        | plan | Количество           | Конкурс        |
	+----------------------------------------------+---------------------------------------------------------------------+------+----------------------+----------------+
	| Школа естественных наук                      | Математика и компьютерные науки                                     |    1 |                    3 |           3.00 |
	| Инженерная школа                             | Прикладная механика                                                 |    2 |                    4 |           2.00 |
	| Школа естественных наук                      | Прикладная математика и информатика                                 |    2 |                    3 |           1.50 |
	| Инженерная школа                             | Мехатроника и робототехника                                         |    3 |                    4 |           1.33 |
	+----------------------------------------------+---------------------------------------------------------------------+------+----------------------+----------------+
	4 rows in set (0.01 sec)
	Task:
	Вывести образовательные программы, на которые для поступления необходимы предмет Информатика» и Математика» в отсортированном по названию программ виде.
	Decision:
	mysql> SELECT * FROM program;
	+------------+---------------------------------------------------------------------+---------------+------+
	| program_id | name_program                                                        | department_id | plan |
	+------------+---------------------------------------------------------------------+---------------+------+
	|          1 | Прикладная математика и информатика                                 |             2 |    2 |
	|          2 | Математика и компьютерные науки                                     |             2 |    1 |
	|          3 | Прикладная механика                                                 |             1 |    2 |
	|          4 | Мехатроника и робототехника                                         |             1 |    3 |
	+------------+---------------------------------------------------------------------+---------------+------+
	4 rows in set (0.00 sec)
	mysql> SELECT * FROM subject;
	+------------+-------------------------+
	| subject_id | name_subject            |
	+------------+-------------------------+
	|          1 | Русский язык            |
	|          2 | Математика              |
	|          3 | Физика                  |
	|          4 | Информатика             |
	+------------+-------------------------+
	4 rows in set (0.00 sec)
	mysql> SELECT * FROM program_subject;
	+--------------------+------------+------------+------------+
	| program_subject_id | program_id | subject_id | min_result |
	+--------------------+------------+------------+------------+
	|                  1 |          1 |          1 |         40 |
	|                  2 |          1 |          2 |         50 |
	|                  3 |          1 |          4 |         60 |
	|                  4 |          2 |          1 |         30 |
	|                  5 |          2 |          2 |         50 |
	|                  6 |          2 |          4 |         60 |
	|                  7 |          3 |          1 |         30 |
	|                  8 |          3 |          2 |         45 |
	|                  9 |          3 |          3 |         45 |
	|                 10 |          4 |          1 |         40 |
	|                 11 |          4 |          2 |         45 |
	|                 12 |          4 |          3 |         45 |
	+--------------------+------------+------------+------------+
	12 rows in set (0.01 sec)
	mysql> SELECT name_program
	    -> FROM program
	    -> INNER JOIN program_subject
	    -> USING(program_id)
	    -> INNER JOIN subject
	    -> ON program_subject.subject_id=subject.subject_id AND name_subject IN ('Математика', 'Информатика')
	    -> GROUP BY name_program
	    -> HAVING COUNT(name_subject)=2
	    -> ORDEORDER BY name_program;
	+---------------------------------------------------------------------+
	| name_program                                                        |
	+---------------------------------------------------------------------+
	| Математика и компьютерные науки                                     |
	| Прикладная математика и информатика                                 |
	+---------------------------------------------------------------------+
	2 rows in set (0.01 sec)
	Task:
	Посчитать количество баллов каждого абитуриента на каждую образовательную программу, на которую он подал заявление, по результатам ЕГЭ. В результат включить название образовательной программы, фамилию и имя абитуриента, а также столбец с суммой баллов, который назвать itog. Информацию вывести в отсортированном сначала по образовательной программе, а потом по убыванию суммы баллов виде.
	Decision:
	mysql> SELECT program.name_program, enrollee.name_enrollee, SUM(enrollee_subject.result) AS itog
	    -> FROM program_subject
	    -> INNER JOIN program USING(program_id)
	    -> INNER JOIN program_enrollee USING(program_id)
	    -> INNER JOIN enrollee USING(enrollee_id)
	    -> INNER JOIN enrollee_subject ON enrollee_subject.subject_id = program_subject.subject_id
	    ->     AND enrollee_subject.enrollee_id = program_enrollee.enrollee_id
	    -> GROUP BY 1, 2
	    -> ORDER BY 1, 3 DESC;
	+---------------------------------------------------------------------+-------------------------------+------+
	| name_program                                                        | name_enrollee                 | itog |
	+---------------------------------------------------------------------+-------------------------------+------+
	| Математика и компьютерные науки                                     | Степанова Дарья               |  276 |
	| Математика и компьютерные науки                                     | Семенов Иван                  |  230 |
	| Математика и компьютерные науки                                     | Абрамова Катя                 |  226 |
	| Мехатроника и робототехника                                         | Степанова Дарья               |  270 |
	| Мехатроника и робототехника                                         | Семенов Иван                  |  242 |
	| Мехатроника и робототехника                                         | Попов Илья                    |  192 |
	| Мехатроника и робототехника                                         | Баранов Павел                 |  179 |
	| Прикладная математика и информатика                                 | Семенов Иван                  |  230 |
	| Прикладная математика и информатика                                 | Абрамова Катя                 |  226 |
	| Прикладная математика и информатика                                 | Баранов Павел                 |  213 |
	| Прикладная механика                                                 | Степанова Дарья               |  270 |
	| Прикладная механика                                                 | Яковлева Галина               |  238 |
	| Прикладная механика                                                 | Попов Илья                    |  192 |
	| Прикладная механика                                                 | Баранов Павел                 |  179 |
	+---------------------------------------------------------------------+-------------------------------+------+
	14 rows in set (0.00 sec)
	Task:
	Вывести название образовательной программы и фамилию тех абитуриентов, которые подавали документы на эту образовательную программу, но не могут быть зачислены на нее. Эти абитуриенты имеют результат по одному или нескольким предметам ЕГЭ, необходимым для поступления на эту образовательную программу, меньше минимального балла. Информацию вывести в отсортированном сначала по программам, а потом по фамилиям абитуриентов виде.
	Например, Баранов Павел по Физике» набрал 41 балл, а  для образовательной программы Прикладная механика» минимальный балл по этому предмету определен в 45 баллов. Следовательно, абитуриент на данную программу не может поступить.
	Decision:
	mysql> SELECT * FROM enrollee;
	+-------------+-------------------------------+
	| enrollee_id | name_enrollee                 |
	+-------------+-------------------------------+
	|           1 | Баранов Павел                 |
	|           2 | Абрамова Катя                 |
	|           3 | Семенов Иван                  |
	|           4 | Яковлева Галина               |
	|           5 | Попов Илья                    |
	|           6 | Степанова Дарья               |
	+-------------+-------------------------------+
	6 rows in set (0.00 sec)
	mysql> SELECT * FROM program_enrollee;
	+---------------------+------------+-------------+
	| program_enrollee_id | program_id | enrollee_id |
	+---------------------+------------+-------------+
	|                   1 |          3 |           1 |
	|                   2 |          4 |           1 |
	|                   3 |          1 |           1 |
	|                   4 |          2 |           2 |
	|                   5 |          1 |           2 |
	|                   6 |          1 |           3 |
	|                   7 |          2 |           3 |
	|                   8 |          4 |           3 |
	|                   9 |          3 |           4 |
	|                  10 |          3 |           5 |
	|                  11 |          4 |           5 |
	|                  12 |          2 |           6 |
	|                  13 |          3 |           6 |
	|                  14 |          4 |           6 |
	+---------------------+------------+-------------+
	14 rows in set (0.00 sec)
	mysql> SELECT * FROM program_enrollee;
	+---------------------+------------+-------------+
	| program_enrollee_id | program_id | enrollee_id |
	+---------------------+------------+-------------+
	|                   1 |          3 |           1 |
	|                   2 |          4 |           1 |
	|                   3 |          1 |           1 |
	|                   4 |          2 |           2 |
	|                   5 |          1 |           2 |
	|                   6 |          1 |           3 |
	|                   7 |          2 |           3 |
	|                   8 |          4 |           3 |
	|                   9 |          3 |           4 |
	|                  10 |          3 |           5 |
	|                  11 |          4 |           5 |
	|                  12 |          2 |           6 |
	|                  13 |          3 |           6 |
	|                  14 |          4 |           6 |
	+---------------------+------------+-------------+
	14 rows in set (0.00 sec)
	mysql> SELECT * FROM program_subject;
	+--------------------+------------+------------+------------+
	| program_subject_id | program_id | subject_id | min_result |
	+--------------------+------------+------------+------------+
	|                  1 |          1 |          1 |         40 |
	|                  2 |          1 |          2 |         50 |
	|                  3 |          1 |          4 |         60 |
	|                  4 |          2 |          1 |         30 |
	|                  5 |          2 |          2 |         50 |
	|                  6 |          2 |          4 |         60 |
	|                  7 |          3 |          1 |         30 |
	|                  8 |          3 |          2 |         45 |
	|                  9 |          3 |          3 |         45 |
	|                 10 |          4 |          1 |         40 |
	|                 11 |          4 |          2 |         45 |
	|                 12 |          4 |          3 |         45 |
	+--------------------+------------+------------+------------+
	12 rows in set (0.00 sec)
	mysql> SELECT * FROM subject;
	+------------+-------------------------+
	| subject_id | name_subject            |
	+------------+-------------------------+
	|          1 | Русский язык            |
	|          2 | Математика              |
	|          3 | Физика                  |
	|          4 | Информатика             |
	+------------+-------------------------+
	4 rows in set (0.00 sec)
	mysql> SELECT * FROM enrollee_subject;
	+---------------------+-------------+------------+--------+
	| enrollee_subject_id | enrollee_id | subject_id | result |
	+---------------------+-------------+------------+--------+
	|                   1 |           1 |          1 |     68 |
	|                   2 |           1 |          2 |     70 |
	|                   3 |           1 |          3 |     41 |
	|                   4 |           1 |          4 |     75 |
	|                   5 |           2 |          1 |     75 |
	|                   6 |           2 |          2 |     70 |
	|                   7 |           2 |          4 |     81 |
	|                   8 |           3 |          1 |     85 |
	|                   9 |           3 |          2 |     67 |
	|                  10 |           3 |          3 |     90 |
	|                  11 |           3 |          4 |     78 |
	|                  12 |           4 |          1 |     82 |
	|                  13 |           4 |          2 |     86 |
	|                  14 |           4 |          3 |     70 |
	|                  15 |           5 |          1 |     65 |
	|                  16 |           5 |          2 |     67 |
	|                  17 |           5 |          3 |     60 |
	|                  18 |           6 |          1 |     90 |
	|                  19 |           6 |          2 |     92 |
	|                  20 |           6 |          3 |     88 |
	|                  21 |           6 |          4 |     94 |
	+---------------------+-------------+------------+--------+
	21 rows in set (0.00 sec)
	mysql> SELECT name_program, name_enrollee
	    -> FROM enrollee
	    -> INNER JOIN program_enrollee USING(enrollee_id)
	    -> INNER JOIN program USING(program_id)
	    -> INNER JOIN program_subject USING(program_id)
	    -> INNER JOIN subject USING(subject_id)
	    -> INNER JOIN enrollee_subject USING(subject_id)
	    -> WHERE enrollee_subject.enrollee_id = enrollee.enrollee_id AND result < min_result
	    -> ORDER BY name_program;
	+------------------------------------------------------+---------------------------+
	| name_program                                         | name_enrollee             |
	+------------------------------------------------------+---------------------------+
	| Мехатроника и робототехника                          | Баранов Павел             |
	| Прикладная механика                                  | Баранов Павел             |
	+------------------------------------------------------+---------------------------+
	2 rows in set (0.00 sec)
	Task:
	Создать вспомогательную таблицу applicant,  куда включить id образовательной программы, id абитуриента, сумму баллов абитуриентов (столбец itog) в отсортированном сначала по id образовательной программы, а потом по убыванию суммы баллов виде (использовать запрос из предыдущего урока).
	Decision:
	MariaDB [Students]> SELECT * FROM enrollee;
	    +-------------+-------------------------------+
	    | enrollee_id | name_enrollee                 |
	    +-------------+-------------------------------+
	    |           1 | Баранов Павел                 |
	    |           2 | Абрамова Катя                 |
	    |           3 | Семенов Иван                  |
	    |           4 | Яковлева Галина               |
	    |           5 | Попов Илья                    |
	    |           6 | Степанова Дарья               |
	    +-------------+-------------------------------+
	    6 rows in set (0.001 sec)
	MariaDB [Students]> SELECT * FROM program_enrollee;
	    +---------------------+------------+-------------+
	    | program_enrollee_id | program_id | enrollee_id |
	    +---------------------+------------+-------------+
	    |                   1 |          3 |           1 |
	    |                   2 |          4 |           1 |
	    |                   3 |          1 |           1 |
	    |                   4 |          2 |           2 |
	    |                   5 |          1 |           2 |
	    |                   6 |          1 |           3 |
	    |                   7 |          2 |           3 |
	    |                   8 |          4 |           3 |
	    |                   9 |          3 |           4 |
	    |                  10 |          3 |           5 |
	    |                  11 |          4 |           5 |
	    |                  12 |          2 |           6 |
	    |                  13 |          3 |           6 |
	    |                  14 |          4 |           6 |
	    +---------------------+------------+-------------+
	    14 rows in set (0.001 sec)
	MariaDB [Students]> SELECT * FROM program;
	    +------------+---------------------------------------------------------------------+---------------+------+
	    | program_id | name_program                                                        | department_id | plan |
	    +------------+---------------------------------------------------------------------+---------------+------+
	    |          1 | Прикладная математика и информатика                                 |             2 |    2 |
	    |          2 | Математика и компьютерные науки                                     |             2 |    1 |
	    |          3 | Прикладная механика                                                 |             1 |    2 |
	    |          4 | Мехатроника и робототехника                                         |             1 |    3 |
	    +------------+---------------------------------------------------------------------+---------------+------+
	    4 rows in set (0.001 sec)
	MariaDB [Students]> SELECT * FROM program_subject;
	    +--------------------+------------+------------+------------+
	    | program_subject_id | program_id | subject_id | min_result |
	    +--------------------+------------+------------+------------+
	    |                  1 |          1 |          1 |         40 |
	    |                  2 |          1 |          2 |         50 |
	    |                  3 |          1 |          4 |         60 |
	    |                  4 |          2 |          1 |         30 |
	    |                  5 |          2 |          2 |         50 |
	    |                  6 |          2 |          4 |         60 |
	    |                  7 |          3 |          1 |         30 |
	    |                  8 |          3 |          2 |         45 |
	    |                  9 |          3 |          3 |         45 |
	    |                 10 |          4 |          1 |         40 |
	    |                 11 |          4 |          2 |         45 |
	    |                 12 |          4 |          3 |         45 |
	    +--------------------+------------+------------+------------+
	    12 rows in set (0.002 sec)
	MariaDB [Students]> SELECT * FROM subject;
	    +------------+-------------------------+
	    | subject_id | name_subject            |
	    +------------+-------------------------+
	    |          1 | Русский язык            |
	    |          2 | Математика              |
	    |          3 | Физика                  |
	    |          4 | Информатика             |
	    +------------+-------------------------+
	    4 rows in set (0.001 sec)
	MariaDB [Students]> SELECT * FROM enrollee_subject;
	    +---------------------+-------------+------------+--------+
	    | enrollee_subject_id | enrollee_id | subject_id | result |
	    +---------------------+-------------+------------+--------+
	    |                   1 |           1 |          1 |     68 |
	    |                   2 |           1 |          2 |     70 |
	    |                   3 |           1 |          3 |     41 |
	    |                   4 |           1 |          4 |     75 |
	    |                   5 |           2 |          1 |     75 |
	    |                   6 |           2 |          2 |     70 |
	    |                   7 |           2 |          4 |     81 |
	    |                   8 |           3 |          1 |     85 |
	    |                   9 |           3 |          2 |     67 |
	    |                  10 |           3 |          3 |     90 |
	    |                  11 |           3 |          4 |     78 |
	    |                  12 |           4 |          1 |     82 |
	    |                  13 |           4 |          2 |     86 |
	    |                  14 |           4 |          3 |     70 |
	    |                  15 |           5 |          1 |     65 |
	    |                  16 |           5 |          2 |     67 |
	    |                  17 |           5 |          3 |     60 |
	    |                  18 |           6 |          1 |     90 |
	    |                  19 |           6 |          2 |     92 |
	    |                  20 |           6 |          3 |     88 |
	    |                  21 |           6 |          4 |     94 |
	    +---------------------+-------------+------------+--------+
	    21 rows in set (0.001 sec)
	MariaDB [Students]> CREATE TABLE applicant
	    -> SELECT program_id, enrollee.enrollee_id, SUM(result) AS itog
	    -> FROM enrollee
	    -> JOIN program_enrollee USING(enrollee_id)
	    -> JOIN program USING(program_id)
	    -> JOIN program_subject USING(program_id)
	    -> JOIN subject USING(subject_id)
	    -> JOIN enrollee_subject USING(subject_id)
	    -> WHERE enrollee_subject.enrollee_id = enrollee.enrollee_id
	    -> GROUP BY program_id, enrollee_id
	    -> ORDER BY program_id, itog DESC;
	Query OK, 14 rows affected (0.028 sec)
	Records: 14  Duplicates: 0  Warnings: 0
	MariaDB [Students]> SELECT * FROM applicant;
	    +------------+-------------+------+
	    | program_id | enrollee_id | itog |
	    +------------+-------------+------+
	    |          1 |           3 |  230 |
	    |          1 |           2 |  226 |
	    |          1 |           1 |  213 |
	    |          2 |           6 |  276 |
	    |          2 |           3 |  230 |
	    |          2 |           2 |  226 |
	    |          3 |           6 |  270 |
	    |          3 |           4 |  238 |
	    |          3 |           5 |  192 |
	    |          3 |           1 |  179 |
	    |          4 |           6 |  270 |
	    |          4 |           3 |  242 |
	    |          4 |           5 |  192 |
	    |          4 |           1 |  179 |
	    +------------+-------------+------+
	    14 rows in set (0.001 sec)
	Task:
	Из таблицы applicant, созданной на предыдущем шаге, удалить записи, если абитуриент на выбранную образовательную программу не набрал минимального балла хотя бы по одному предмету (использовать запрос из предыдущего урока).
	Decision:
	MariaDB [Students]> DELETE FROM applicant
	    -> USING applicant
	    -> JOIN (SELECT program_enrollee.program_id, program_enrollee.enrollee_id
	    ->     FROM program
	    ->     JOIN program_subject  USING(program_id)
	    ->     JOIN program_enrollee USING(program_id)
	    ->     JOIN enrollee_subject
	    ->     ON enrollee_subject.enrollee_id = program_enrollee.enrollee_id
	    ->         AND enrollee_subject.subject_id = program_subject.subject_id
	    ->     WHERE result < min_result) AS table1
	    -> ON applicant.program_id = table1.program_id
	    ->     AND applicant.enrollee_id = table1.enrollee_id;
	Query OK, 2 rows affected (0.005 sec)
	MariaDB [Students]> SELECT * FROM applicant;
	    +------------+-------------+------+
	    | program_id | enrollee_id | itog |
	    +------------+-------------+------+
	    |          1 |           3 |  230 |
	    |          1 |           2 |  226 |
	    |          1 |           1 |  213 |
	    |          2 |           6 |  276 |
	    |          2 |           3 |  230 |
	    |          2 |           2 |  226 |
	    |          3 |           6 |  270 |
	    |          3 |           4 |  238 |
	    |          3 |           5 |  192 |
	    |          4 |           6 |  270 |
	    |          4 |           3 |  242 |
	    |          4 |           5 |  192 |
	    +------------+-------------+------+
	    12 rows in set (0.001 sec)
	Task:
	Повысить итоговые баллы абитуриентов в таблице applicant на значения дополнительных баллов (использовать запрос из предыдущего урока).
	Decision:
	MariaDB [Students]> SELECT * FROM applicant;
	    +------------+-------------+------+
	    | program_id | enrollee_id | itog |
	    +------------+-------------+------+
	    |          1 |           3 |  230 |
	    |          1 |           2 |  226 |
	    |          1 |           1 |  213 |
	    |          2 |           6 |  276 |
	    |          2 |           3 |  230 |
	    |          2 |           2 |  226 |
	    |          3 |           6 |  270 |
	    |          3 |           4 |  238 |
	    |          3 |           5 |  192 |
	    |          4 |           6 |  270 |
	    |          4 |           3 |  242 |
	    |          4 |           5 |  192 |
	    +------------+-------------+------+
	    12 rows in set (0.001 sec)
	MariaDB [Students]> SELECT * FROM achievement;
	    +----------------+------------------------------------------+-------+
	    | achievement_id | name_achievement                         | bonus |
	    +----------------+------------------------------------------+-------+
	    |              1 | Золотая медаль                           |     5 |
	    |              2 | Серебряная медаль                        |     3 |
	    |              3 | Золотой значок ГТО                       |     3 |
	    |              4 | Серебряный значок ГТО                    |     1 |
	    +----------------+------------------------------------------+-------+
	    4 rows in set (0.001 sec)
	MariaDB [Students]> SELECT * FROM enrollee;
	    +-------------+-------------------------------+
	    | enrollee_id | name_enrollee                 |
	    +-------------+-------------------------------+
	    |           1 | Баранов Павел                 |
	    |           2 | Абрамова Катя                 |
	    |           3 | Семенов Иван                  |
	    |           4 | Яковлева Галина               |
	    |           5 | Попов Илья                    |
	    |           6 | Степанова Дарья               |
	    +-------------+-------------------------------+
	    6 rows in set (0.001 sec)
	MariaDB [Students]> SELECT * FROM enrollee_achievement;
	    +--------------------+-------------+----------------+
	    | enrollee_achiev_id | enrollee_id | achievement_id |
	    +--------------------+-------------+----------------+
	    |                  1 |           1 |              2 |
	    |                  2 |           1 |              3 |
	    |                  3 |           3 |              1 |
	    |                  4 |           4 |              4 |
	    |                  5 |           5 |              1 |
	    |                  6 |           5 |              3 |
	    +--------------------+-------------+----------------+
	    6 rows in set (0.001 sec)
	MariaDB [Students]> UPDATE applicant
	    -> JOIN (SELECT enrollee_id, IFNULL(SUM(bonus),0) AS Бонус
	    ->     FROM enrollee_achievement
	    ->     LEFT JOIN achievement
	    ->     USING(achievement_id)
	    ->     GROUP BY enrollee_id) AS table1
	    -> USING(enrollee_id)
	    -> SET itog = itog + Бонус;
	Query OK, 7 rows affected (0.004 sec)
	Rows matched: 7  Changed: 7  Warnings: 0
	MariaDB [Students]> SELECT * FROM applicant;
	    +------------+-------------+------+
	    | program_id | enrollee_id | itog |
	    +------------+-------------+------+
	    |          1 |           3 |  235 |
	    |          1 |           2 |  226 |
	    |          1 |           1 |  219 |
	    |          2 |           6 |  276 |
	    |          2 |           3 |  235 |
	    |          2 |           2 |  226 |
	    |          3 |           6 |  270 |
	    |          3 |           4 |  239 |
	    |          3 |           5 |  200 |
	    |          4 |           6 |  270 |
	    |          4 |           3 |  247 |
	    |          4 |           5 |  200 |
	    +------------+-------------+------+
	    12 rows in set (0.001 sec)
	Task:
	Поскольку при добавлении дополнительных баллов, абитуриенты по каждой образовательной программе могут следовать не в порядке убывания суммарных баллов, необходимо создать новую таблицу applicant_order на основе таблицы applicant. При создании таблицы данные нужно отсортировать сначала по id образовательной программы, потом по убыванию итогового балла. А таблицу applicant, которая была создана как вспомогательная, необходимо удалить.
	Decision:
	MariaDB [Students]> SELECT * FROM applicant;
	    +------------+-------------+------+
	    | program_id | enrollee_id | itog |
	    +------------+-------------+------+
	    |          1 |           3 |  235 |
	    |          1 |           2 |  226 |
	    |          1 |           1 |  219 |
	    |          2 |           6 |  276 |
	    |          2 |           3 |  235 |
	    |          2 |           2 |  226 |
	    |          3 |           6 |  270 |
	    |          3 |           4 |  239 |
	    |          3 |           5 |  200 |
	    |          4 |           6 |  270 |
	    |          4 |           3 |  247 |
	    |          4 |           5 |  200 |
	    +------------+-------------+------+
	    12 rows in set (0.001 sec)
	MariaDB [Students]> CREATE TABLE applicant_order
	    -> SELECT * FROM applicant
	    -> ORDER BY program_id, itog DESC;
	Query OK, 12 rows affected (0.010 sec)
	Records: 12  Duplicates: 0  Warnings: 0
	MariaDB [Students]> DROP TABLE applicant;
	Query OK, 0 rows affected (0.005 sec)
	MariaDB [Students]> SELECT * FROM applicant_order;
	    +------------+-------------+------+
	    | program_id | enrollee_id | itog |
	    +------------+-------------+------+
	    |          1 |           3 |  235 |
	    |          1 |           2 |  226 |
	    |          1 |           1 |  219 |
	    |          2 |           6 |  276 |
	    |          2 |           3 |  235 |
	    |          2 |           2 |  226 |
	    |          3 |           6 |  270 |
	    |          3 |           4 |  239 |
	    |          3 |           5 |  200 |
	    |          4 |           6 |  270 |
	    |          4 |           3 |  247 |
	    |          4 |           5 |  200 |
	    +------------+-------------+------+
	    12 rows in set (0.001 sec)
	Task:
	Включить в таблицу applicant_order новый столбец str_id целого типа , расположить его перед первым.
	Decision:
	MariaDB [Students]> SELECT * FROM applicant_order;
	    +------------+-------------+------+
	    | program_id | enrollee_id | itog |
	    +------------+-------------+------+
	    |          1 |           3 |  235 |
	    |          1 |           2 |  226 |
	    |          1 |           1 |  219 |
	    |          2 |           6 |  276 |
	    |          2 |           3 |  235 |
	    |          2 |           2 |  226 |
	    |          3 |           6 |  270 |
	    |          3 |           4 |  239 |
	    |          3 |           5 |  200 |
	    |          4 |           6 |  270 |
	    |          4 |           3 |  247 |
	    |          4 |           5 |  200 |
	    +------------+-------------+------+
	    12 rows in set (0.001 sec)
	MariaDB [Students]> ALTER TABLE applicant_order
	    -> ADD str_id int FIRST;
	Query OK, 0 rows affected (0.004 sec)
	Records: 0  Duplicates: 0  Warnings: 0
	MariaDB [Students]> SELECT * FROM applicant_order;
	    +--------+------------+-------------+------+
	    | str_id | program_id | enrollee_id | itog |
	    +--------+------------+-------------+------+
	    |   NULL |          1 |           3 |  235 |
	    |   NULL |          1 |           2 |  226 |
	    |   NULL |          1 |           1 |  219 |
	    |   NULL |          2 |           6 |  276 |
	    |   NULL |          2 |           3 |  235 |
	    |   NULL |          2 |           2 |  226 |
	    |   NULL |          3 |           6 |  270 |
	    |   NULL |          3 |           4 |  239 |
	    |   NULL |          3 |           5 |  200 |
	    |   NULL |          4 |           6 |  270 |
	    |   NULL |          4 |           3 |  247 |
	    |   NULL |          4 |           5 |  200 |
	    +--------+------------+-------------+------+
	    12 rows in set (0.001 sec)
	Task:
	Занести в столбец str_id таблицы applicant_order нумерацию абитуриентов, которая начинается с 1 для каждой образовательной программы.
	Decision:
	MariaDB [Students]> SELECT * FROM applicant_order;
	    +--------+------------+-------------+------+
	    | str_id | program_id | enrollee_id | itog |
	    +--------+------------+-------------+------+
	    |   NULL |          1 |           3 |  235 |
	    |   NULL |          1 |           2 |  226 |
	    |   NULL |          1 |           1 |  219 |
	    |   NULL |          2 |           6 |  276 |
	    |   NULL |          2 |           3 |  235 |
	    |   NULL |          2 |           2 |  226 |
	    |   NULL |          3 |           6 |  270 |
	    |   NULL |          3 |           4 |  239 |
	    |   NULL |          3 |           5 |  200 |
	    |   NULL |          4 |           6 |  270 |
	    |   NULL |          4 |           3 |  247 |
	    |   NULL |          4 |           5 |  200 |
	    +--------+------------+-------------+------+
	    12 rows in set (0.001 sec)
	MariaDB [Students]> SET @row_num := 1;
	    Query OK, 0 rows affected (0.001 sec)
	MariaDB [Students]> SET @num_pr := 0;
	    Query OK, 0 rows affected (0.000 sec)
	MariaDB [Students]> UPDATE applicant_order
	    ->     SET str_id = IF(program_id = @num_pr, @row_num := @row_num + 1, @row_num := 1 AND @num_pr := @num_pr + 1);
	Query OK, 12 rows affected (0.003 sec)
	Rows matched: 12  Changed: 12  Warnings: 0
	MariaDB [Students]> SELECT * FROM applicant_order;
	    +--------+------------+-------------+------+
	    | str_id | program_id | enrollee_id | itog |
	    +--------+------------+-------------+------+
	    |      1 |          1 |           3 |  235 |
	    |      2 |          1 |           2 |  226 |
	    |      3 |          1 |           1 |  219 |
	    |      1 |          2 |           6 |  276 |
	    |      2 |          2 |           3 |  235 |
	    |      3 |          2 |           2 |  226 |
	    |      1 |          3 |           6 |  270 |
	    |      2 |          3 |           4 |  239 |
	    |      3 |          3 |           5 |  200 |
	    |      1 |          4 |           6 |  270 |
	    |      2 |          4 |           3 |  247 |
	    |      3 |          4 |           5 |  200 |
	    +--------+------------+-------------+------+
	    12 rows in set (0.001 sec)
	Task:
	Создать таблицу student,  в которую включить абитуриентов, которые могут быть рекомендованы к зачислению  в соответствии с планом набора. Информацию отсортировать сначала в алфавитном порядке по названию программ, а потом по убыванию итогового балла.
	Decision:
	MariaDB [Students]> SELECT * FROM applicant_order;
	    +--------+------------+-------------+------+
	    | str_id | program_id | enrollee_id | itog |
	    +--------+------------+-------------+------+
	    |      1 |          1 |           3 |  235 |
	    |      2 |          1 |           2 |  226 |
	    |      3 |          1 |           1 |  219 |
	    |      1 |          2 |           6 |  276 |
	    |      2 |          2 |           3 |  235 |
	    |      3 |          2 |           2 |  226 |
	    |      1 |          3 |           6 |  270 |
	    |      2 |          3 |           4 |  239 |
	    |      3 |          3 |           5 |  200 |
	    |      1 |          4 |           6 |  270 |
	    |      2 |          4 |           3 |  247 |
	    |      3 |          4 |           5 |  200 |
	    +--------+------------+-------------+------+
	    12 rows in set (0.001 sec)
	MariaDB [Students]> SELECT * FROM enrollee;
	    +-------------+-------------------------------+
	    | enrollee_id | name_enrollee                 |
	    +-------------+-------------------------------+
	    |           1 | Баранов Павел                 |
	    |           2 | Абрамова Катя                 |
	    |           3 | Семенов Иван                  |
	    |           4 | Яковлева Галина               |
	    |           5 | Попов Илья                    |
	    |           6 | Степанова Дарья               |
	    +-------------+-------------------------------+
	    6 rows in set (0.001 sec)
	MariaDB [Students]> SELECT * FROM program;
	    +------------+---------------------------------------------------------------------+---------------+------+
	    | program_id | name_program                                                        | department_id | plan |
	    +------------+---------------------------------------------------------------------+---------------+------+
	    |          1 | Прикладная математика и информатика                                 |             2 |    2 |
	    |          2 | Математика и компьютерные науки                                     |             2 |    1 |
	    |          3 | Прикладная механика                                                 |             1 |    2 |
	    |          4 | Мехатроника и робототехника                                         |             1 |    3 |
	    +------------+---------------------------------------------------------------------+---------------+------+
	    4 rows in set (0.001 sec)
	MariaDB [Students]> CREATE TABLE student AS
	    -> SELECT name_program, name_enrollee, itog
	    -> FROM enrollee
	    -> INNER JOIN applicant_order
	    -> USING(enrollee_id)
	    -> INNER JOIN program
	    -> USING(program_id)
	    -> WHERE str_id<=plan
	    -> ORDER BY name_program, itog DESC;
	Query OK, 8 rows affected (0.012 sec)
	Records: 8  Duplicates: 0  Warnings: 0
	MariaDB [Students]> SELECT * FROM student;
	    +---------------------------------------------------------------------+-------------------------------+------+
	    | name_program                                                        | name_enrollee                 | itog |
	    +---------------------------------------------------------------------+-------------------------------+------+
	    | Математика и компьютерные науки                                     | Степанова Дарья               |  276 |
	    | Мехатроника и робототехника                                         | Степанова Дарья               |  270 |
	    | Мехатроника и робототехника                                         | Семенов Иван                  |  247 |
	    | Мехатроника и робототехника                                         | Попов Илья                    |  200 |
	    | Прикладная математика и информатика                                 | Семенов Иван                  |  235 |
	    | Прикладная математика и информатика                                 | Абрамова Катя                 |  226 |
	    | Прикладная механика                                                 | Степанова Дарья               |  270 |
	    | Прикладная механика                                                 | Яковлева Галина               |  239 |
	    +---------------------------------------------------------------------+-------------------------------+------+
	    8 rows in set (0.001 sec)
	Task:
	Разработать базу "Аналитика образовательных курсов"
	Курс на платформе Steptuser состоит из нескольких модулей, каждый модуль включает в себя несколько уроков, для каждого урока сохраняется информация о его положении в модуле. Каждый урок состоит из последовательности шагов. Каждый шаг имеет свой собственный тип (это может быть текст, SQL-задание и т.д.), а также порядковый номер в уроке.
	Пользователи регистрируются на курс, указывают свое имя. Когда пользователь проходит курс на платформе Steptuser, все его действия оставляют "цифровой след": какие задачи и когда он выполнил, сколько попыток он предпринял, правильно ли он решил задачу. Все его комментарии также сохраняются. Если пользователь проходит курс и получает сертификат, дата его выдачи сохраняется. Вся эта информация является первичной для образовательной аналитики.
	Образовательная аналитика - это измерение, сбор, анализ и представление данных об учащемся и его действиях на онлайн-платформе с целью понимания и оптимизации образовательного процесса и среды, в которой этот процесс происходит.
	Для этого урока была создана база данных с полным описанием структуры курса. Образовательная аналитика включена в базу данных не полностью, а только для определенной группы пользователей из-за большого объема данных. Например, информация о решениях 17 000 пользователей нашего курса за шесть месяцев его существования содержит 534 500 записей.
	Мы выбрали пользователей для базы данных уроков следующим образом:
	        мы отклонили всех тех, кто не выполнил ни одного задания (их было 8800).;
	        мы сгруппировали оставшихся пользователей в зависимости от количества решенных задач, вот что произошло (мы считаем, что те, кто не отправлял задания более месяца, покинули курс):
	    Всего    Закончили обучение или покинули курс    Активные пользователи
	    Выполнили все задания    116    75    41
	    Получили сертификат    617    470    147
	    Третий модуль    225    220    5
	    Второй модуль    940    762    178
	    Первый модуль, 5-7 урок    1077    891    186
	    Первый модуль, 4 урок    701    589    112
	    Первый модуль, 3 урок    823    670    153
	    Первый модуль, 2 урок    1268    1044    224
	    Первый модуль, 1 урок    2430    2020    410
			затем были отобраны типичные представители групп более или менее пропорционально численности каждой группы (имена пользователей, разумеется, были заменены).;
	Получилось 64 пользователя и более 2000 их попыток.
	Группировка и выборка каждой группы обычно зависят от целей исследования, например, если вам нужно понять, когда и по какой причине пользователи покидают курс, то для начальных шагов необходимо более "мелкое" разделение.
	Структура и частичное наполнение таблиц
	Таблица module:
	    module_id    module_name
	    INT PRIMARY KEY
	    AUTO_INCREMENT    VARCHAR(64)
	    1    Основы реляционной модели и SQL
	    2    Запросы SQL к связанным таблицам
	Таблица lesson (в последнем столбце указан порядковый номер урока внутри модуля):
	    lesson_id    lesson_name    module_id    lesson_position
	    INT PRIMARY KEY
	    AUTO_INCREMENT    VARCHAR(50)    INT    INT
	    1    Отношение(таблица)    1    1
	    2    Выборка данных    1    2
	    3    Таблица "Командировки", запросы на выборку    1    6
	    4    Вложенные запросы    1    4
	Таблица step:
	    step_id    step_name    step_type    lesson_id    step_position
	    INT PRIMARY KEY
	    AUTO_INCREMENT    VARCHAR(256)    VARCHAR(16)    INT    INT
	    1    Структура уроков курса    text    1    1
	    2    Содержание урока    text    1    2
	    3    Реляционная модель, основные положения    table    1    3
	    4    Отношение, реляционная модель    choice    1    4
	Таблица keyword:
	    keyword_id    keyword_name
	    INT PRIMARY KEY
	    AUTO_INCREMENT    VARCHAR(16)
	    1    SELECT
	    2    FROM
	Таблица step_keyword:
	    step_id    keyword_id
	    INT PRIMARY KEY    INT PRIMARY KEY
	    38    1
	    81    3
	Пояснение
	В этой таблице ключ состоит из двух столбцов. Это сделано для того, чтобы в таблицу нельзя было включить одинаковые записи. Для создания таблицы с двумя ключами используется код:
	    CREATE TABLE step_keyword (
	        step_id INT,
	        keyword_id INT,
	        PRIMARY KEY (step_id, keyword_id),
	        FOREIGN KEY (step_id)  REFERENCES step (step_id) ON DELETE CASCADE,
	        FOREIGN KEY (keyword_id)  REFERENCES keyword (keyword_id) ON DELETE CASCADE
	    );
	Таблица student:
	    student_id    student_name
	    INT PRIMARY KEY
	    AUTO_INCREMENT    VARCHAR(64)
	    1    student_1
	    2    student_2
	Таблица step_student  (в этой таблице хранятся все попытки пользователей по каждому шагу, указывается время начала попытки и время отправки задания на проверку, а также верный или неверный получился результат):
	    step_student_id    step_id    student_id    attempt_time    submission_time    result
	    INT PRIMARY KEY
	    AUTO_INCREMENT    INT    INT    INT    INT    VARCHAR(16)
	    1    10    52    1598291444    1598291490    correct
	    2    10    11    1593291995    1593292031    correct
	    3    10    19    1591017571    1591017743    wrong
	    4    10    4    1590254781    1590254800    correct
	Пояснение
	Время в этой таблице представлено в формате  Unix-время , в котором хранится количество секунд, прошедших с 1 января 1970 года.
	Для перевода к привычному типу DATE используется формула:
	    1970-01-01 + time_unix / 86400
	В SQL для перевода удобно использовать функцию  
	    FROM_UNIXTIME(time_unix)
	Decision:
	MariaDB [(none)]> CREATE DATABASE Analitics;
	    Query OK, 1 row affected (0.002 sec)
	MariaDB [(none)]> SHOW DATABASES;
	    +--------------------+
	    | Database           |
	    +--------------------+
	    | Analitics          |
	    | RPA                |
	    | Students           |
	    | information_schema |
	    | mysql              |
	    | performance_schema |
	    +--------------------+
	    6 rows in set (0.005 sec)
	MariaDB [(none)]> USE Analitics;
	Database changed
	MariaDB [Analitics]> CREATE TABLE module(
	    -> module_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> module_name VARCHAR(64));
	Query OK, 0 rows affected (0.010 sec)
	MariaDB [Analitics]> INSERT INTO module (module_name)
	    -> VALUES ('Основы реляционной модели и SQL'),
	    -> ('Запросы SQL к связанным таблицам');
	ERROR 1366 (22007): Incorrect string value: '\xD0\x9E\xD1\x81\xD0\xBD...' for column `Analitics`.`module`.`module_name` at row 1
	MariaDB [Analitics]> SHOW VARIABLES WHERE variable_name LtuserE '%char%' OR variable_name LtuserE '%coll%';
	    +--------------------------+------------------------------+
	    | Variable_name            | Value                        |
	    +--------------------------+------------------------------+
	    | character_set_client     | utf8                         |
	    | character_set_connection | utf8                         |
	    | character_set_database   | latin1                       |
	    | character_set_filesystem | binary                       |
	    | character_set_results    | utf8                         |
	    | character_set_server     | latin1                       |
	    | character_set_system     | utf8                         |
	    | character_sets_dir       | /usr/share/mariadb/charsets/ |
	    | collation_connection     | utf8_general_ci              |
	    | collation_database       | latin1_swedish_ci            |
	    | collation_server         | latin1_swedish_ci            |
	    +--------------------------+------------------------------+
	    11 rows in set (0.006 sec)
	MariaDB [Analitics]> CREATE DROP module;
	    ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'DROP module' at line 1
	MariaDB [Analitics]> DROP TABLE module;
	    Query OK, 0 rows affected (0.005 sec)
	MariaDB [Analitics]> CREATE TABLE module( module_id INT PRIMARY KEY AUTO_INCREMENT, module_name VARCHAR(64)) ENGINE=MyISAM CHARACTER SET=utf8mb4;
	    Query OK, 0 rows affected (0.003 sec)
	MariaDB [Analitics]> INSERT INTO module (module_name) VALUES ('Основы реляционной модели и SQL'), ('Запросы SQL к связанным таблицам');
	    Query OK, 2 rows affected (0.001 sec)
	    Records: 2  Duplicates: 0  Warnings: 0
	MariaDB [Analitics]> SHOW TABLES;
	    +---------------------+
	    | Tables_in_Analitics |
	    +---------------------+
	    | module              |
	    +---------------------+
	    1 row in set (0.001 sec)
	MariaDB [Analitics]> SELECT * FROM module;
	    +-----------+-----------------------------------------------------------+
	    | module_id | module_name                                               |
	    +-----------+-----------------------------------------------------------+
	    |         1 | Основы реляционной модели и SQL                           |
	    |         2 | Запросы SQL к связанным таблицам                          |
	    +-----------+-----------------------------------------------------------+
	    2 rows in set (0.001 sec)
	MariaDB [Analitics]> CREATE TABLE lesson(
	    -> lesson_id       INT PRIMARY KEY AUTO_INCREMENT,
	    -> lesson_name     VARCHAR(50),
	    -> module_id       INT,
	    -> lesson_position INT,
	    -> FOREIGN KEY (module_id) REFERENCES module (module_id) ON DELETE CASCADE)
	    -> ENGINE=MyISAM CHARACTER SET=utf8mb4;
	Query OK, 0 rows affected (0.003 sec)
	MariaDB [Analitics]> INSERT INTO lesson(lesson_name, module_id, lesson_position)
	    -> VALUES ('Отношение(таблица)', 1, 1),
	    -> ('Выборка данных', 1, 2),
	    -> ('Таблица "Командировки", запросы на выборку', 1, 6),
	    -> ('Вложенные запросы', 1, 4);
	Query OK, 4 rows affected (0.002 sec)
	Records: 4  Duplicates: 0  Warnings: 0
	MariaDB [Analitics]> SELECT * FROM lesson;
	    +-----------+-------------------------------------------------------------------------------+-----------+-----------------+
	    | lesson_id | lesson_name                                                                   | module_id | lesson_position |
	    +-----------+-------------------------------------------------------------------------------+-----------+-----------------+
	    |         1 | Отношение(таблица)                                                            |         1 |               1 |
	    |         2 | Выборка данных                                                                |         1 |               2 |
	    |         3 | Таблица "Командировки", запросы на выборку                                    |         1 |               6 |
	    |         4 | Вложенные запросы                                                             |         1 |               4 |
	    +-----------+-------------------------------------------------------------------------------+-----------+-----------------+
	    4 rows in set (0.001 sec)
	MariaDB [Analitics]> CREATE TABLE step(
	    -> step_id       INT PRIMARY KEY AUTO_INCREMENT,
	    -> step_name     VARCHAR(256),
	    -> step_type     VARCHAR(16),
	    -> lesson_id     INT,
	    -> step_position INT,
	    -> FOREIGN KEY (lesson_id) REFERENCES lesson (lesson_id) ON DELETE CASCADE)
	    -> ENGINE=MyISAM CHARACTER SET=utf8mb4;
	Query OK, 0 rows affected (0.004 sec)
	MariaDB [Analitics]> INSERT INTO step(step_name, step_type, lesson_id, step_position)
	    -> VALUES ('Структура уроков курса', 'text', 1, 1),
	    -> ('Содержание урока', 'text', 1, 2),
	    -> ('Реляционная модель, основные положения', 'table', 1, 3),
	    -> ('Отношение, реляционная модель', 'choice', 1, 4);
	Query OK, 4 rows affected (0.001 sec)
	Records: 4  Duplicates: 0  Warnings: 0
	MariaDB [Analitics]> SELECT * FROM step;
	    +---------+--------------------------------------------------------------------------+-----------+-----------+---------------+
	    | step_id | step_name                                                                | step_type | lesson_id | step_position |
	    +---------+--------------------------------------------------------------------------+-----------+-----------+---------------+
	    |       1 | Структура уроков курса                                                   | text      |         1 |             1 |
	    |       2 | Содержание урока                                                         | text      |         1 |             2 |
	    |       3 | Реляционная модель, основные положения                                   | table     |         1 |             3 |
	    |       4 | Отношение, реляционная модель                                            | choice    |         1 |             4 |
	    +---------+--------------------------------------------------------------------------+-----------+-----------+---------------+
	    4 rows in set (0.001 sec)
	MariaDB [Analitics]> CREATE TABLE keyword(
	    -> keyword_id   INT PRIMARY KEY AUTO_INCREMENT,
	    -> keyword_name VARCHAR(16))
	    -> ENGINE=MyISAM CHARACTER SET=utf8mb4;
	Query OK, 0 rows affected (0.003 sec)
	MariaDB [Analitics]> INSERT INTO keyword(keyword_name)
	    -> VALUES ('SELECT'),
	    -> ('FROM');
	Query OK, 2 rows affected (0.001 sec)
	Records: 2  Duplicates: 0  Warnings: 0
	MariaDB [Analitics]> SELECT * FROM keyword;
	    +------------+--------------+
	    | keyword_id | keyword_name |
	    +------------+--------------+
	    |          1 | SELECT       |
	    |          2 | FROM         |
	    +------------+--------------+
	    2 rows in set (0.001 sec)
	MariaDB [Analitics]> CREATE TABLE step_keyword(
	    -> step_id    INT,
	    -> keyword_id INT,
	    -> PRIMARY KEY (step_id, keyword_id),
	    -> FOREIGN KEY (step_id) REFERENCES step (step_id) ON DELETE CASCADE,
	    -> FOREIGN KEY (keyword_id) REFERENCES keyword (keyword_id) ON DELETE CASCADE)
	    -> ENGINE=MyISAM CHARACTER SET=utf8mb4;
	Query OK, 0 rows affected (0.003 sec)
	MariaDB [Analitics]> SET FOREIGN_KEY_CHECKS = 0;
	    Query OK, 0 rows affected (0.000 sec)
	MariaDB [Analitics]> INSERT INTO step_keyword (step_id, keyword_id) VALUE (38, 1);
	    Query OK, 1 row affected (0.001 sec)
	MariaDB [Analitics]> INSERT INTO step_keyword (step_id, keyword_id) VALUE (81, 3);
	    Query OK, 1 row affected (0.000 sec)
	MariaDB [Analitics]> SELECT * FROM step_keyword;
	    +---------+------------+
	    | step_id | keyword_id |
	    +---------+------------+
	    |      38 |          1 |
	    |      81 |          3 |
	    +---------+------------+
	    2 rows in set (0.001 sec)
	MariaDB [Analitics]> CREATE TABLE student(
	    -> student_id   INT PRIMARY KEY AUTO_INCREMENT,
	    -> student_name VARCHAR(64))
	    -> ENGINE=MyISAM CHARACTER SET=utf8mb4;
	Query OK, 0 rows affected (0.003 sec)
	MariaDB [Analitics]> INSERT INTO student(student_name)
	    -> VALUES ('student_1'),
	    -> ('student_2');
	Query OK, 2 rows affected (0.001 sec)
	Records: 2  Duplicates: 0  Warnings: 0
	MariaDB [Analitics]> SELECT * FROM student;
	    +------------+--------------+
	    | student_id | student_name |
	    +------------+--------------+
	    |          1 | student_1    |
	    |          2 | student_2    |
	    +------------+--------------+
	    2 rows in set (0.001 sec)
	MariaDB [Analitics]> CREATE TABLE step_student(
	    -> step_student_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> step_id         INT,
	    -> student_id      INT,
	    -> attempt_time    INT,
	    -> submission_time INT,
	    -> result          VARCHAR(16),
	    -> FOREIGN KEY (student_id) REFERENCES student (student_id) ON DELETE CASCADE,
	    -> FOREIGN KEY (step_id) REFERENCES step (step_id) ON DELETE CASCADE)
	    -> ENGINE=MyISAM CHARACTER SET=utf8mb4;
	Query OK, 0 rows affected (0.003 sec)
	MariaDB [Analitics]> INSERT INTO step_student (step_id, student_id, attempt_time, submission_time, result)
	    -> VALUES (10, 52, 1598291444, 1598291490, 'correct'),
	    -> (10, 11, 1593291995, 1593292031, 'correct'),
	    -> (10, 19, 1591017571, 1591017743, 'wrong'),
	    -> (10, 4, 1590254781, 1590254800, 'correct');
	Query OK, 4 rows affected (0.002 sec)
	Records: 4  Duplicates: 0  Warnings: 0
	MariaDB [Analitics]> SET FOREIGN_KEY_CHECKS = 1;
	    Query OK, 0 rows affected (0.001 sec)
	MariaDB [Analitics]> SELECT * FROM step_student;
	    +-----------------+---------+------------+--------------+-----------------+---------+
	    | step_student_id | step_id | student_id | attempt_time | submission_time | result  |
	    +-----------------+---------+------------+--------------+-----------------+---------+
	    |               1 |      10 |         52 |   1598291444 |      1598291490 | correct |
	    |               2 |      10 |         11 |   1593291995 |      1593292031 | correct |
	    |               3 |      10 |         19 |   1591017571 |      1591017743 | wrong   |
	    |               4 |      10 |          4 |   1590254781 |      1590254800 | correct |
	    +-----------------+---------+------------+--------------+-----------------+---------+
	    4 rows in set (0.001 sec)
	MariaDB [Analitics]> SHOW TABLES;
	    +---------------------+
	    | Tables_in_Analitics |
	    +---------------------+
	    | keyword             |
	    | lesson              |
	    | module              |
	    | step                |
	    | step_keyword        |
	    | step_student        |
	    | student             |
	    +---------------------+
	    7 rows in set (0.001 sec)
	Task:
	Отобрать все шаги, в которых рассматриваются вложенные запросы (то есть в названии шага упоминаются вложенные запросы). Указать к какому уроку и модулю они относятся. Для этого вывести 3 поля:
	        в поле Модуль указать номер модуля и его название через пробел;
	        в поле Урок указать номер модуля, порядковый номер урока (lesson_position) через точку и название урока через пробел;
	        в поле Шаг указать номер модуля, порядковый номер урока (lesson_position) через точку, порядковый номер шага (step_position) через точку и название шага через пробел.
	Длину полей Модуль и Урок ограничить 19 символами, при этом слишком длинные надписи обозначить многоточием в конце (16 символов - это номер модуля или урока, пробел и  название Урока или Модуля к ним присоединить "..."). Информацию отсортировать по возрастанию номеров модулей, порядковых номеров уроков и порядковых номеров шагов.
	Decision:
	MariaDB [Analitics]> SELECT lesson_id, lesson_name, module_id FROM lesson;
	    +-----------+-------------------------------------------------------------------------------+-----------+
	    | lesson_id | lesson_name                                                                   | module_id |
	    +-----------+-------------------------------------------------------------------------------+-----------+
	    |         1 | Отношение(таблица)                                                            |         1 |
	    |         2 | Выборка данных                                                                |         1 |
	    |         3 | Таблица "Командировки", запросы на выборку                                    |         1 |
	    |         4 | Вложенные запросы                                                             |         1 |
	    +-----------+-------------------------------------------------------------------------------+-----------+
	    4 rows in set (0.001 sec)
	MariaDB [Analitics]> SELECT * FROM module;
	    +-----------+-----------------------------------------------------------+
	    | module_id | module_name                                               |
	    +-----------+-----------------------------------------------------------+
	    |         1 | Основы реляционной модели и SQL                           |
	    |         2 | Запросы SQL к связанным таблицам                          |
	    +-----------+-----------------------------------------------------------+
	    2 rows in set (0.000 sec)
	MariaDB [Analitics]> SELECT step_id, step_name, lesson_id FROM step;
	    +---------+--------------------------------------------------------------------------+-----------+
	    | step_id | step_name                                                                | lesson_id |
	    +---------+--------------------------------------------------------------------------+-----------+
	    |       1 | Структура уроков курса                                                   |         1 |
	    |       2 | Содержание урока                                                         |         1 |
	    |       3 | Реляционная модель, основные положения                                   |         1 |
	    |       4 | Отношение, реляционная модель                                            |         1 |
	    +---------+--------------------------------------------------------------------------+-----------+
	    4 rows in set (0.001 sec)
	MariaDB [Analitics]> SELECT CONCAT(LEFT(CONCAT(module_id, ' ', module_name), 16), '...') AS Модуль,
	    ->     CONCAT(LEFT(CONCAT(module_id, '.', lesson_position, ' ', lesson_name), 16), '...') AS Урок,
	    ->     CONCAT(module_id, '.', lesson_position, '.', step_position, ' ', step_name) AS Шаг
	    -> FROM module
	    -> JOIN lesson
	    ->     USING(module_id)
	    -> JOIN step
	    ->     USING(lesson_id)
	    -> WHERE step_name LtuserE '%ложенн% запрос%'
	    -> ORDER BY module_id, lesson_id, step_id;
	Query result:
	+---------------------+---------------------+-------------------------------------------------------------+
	| Модуль              | Урок                | Шаг                                                         |
	+---------------------+---------------------+-------------------------------------------------------------+
	| 1 Основы реляцио... | 1.4 Вложенные за... | 1.4.2 Вложенный запрос, возвращающий одно значение          |
	| 1 Основы реляцио... | 1.4 Вложенные за... | 1.4.3 Использование вложенного запроса в выражении          |
	| 1 Основы реляцио... | 1.4 Вложенные за... | 1.4.4 Вложенный запрос, оператор IN                         |
	| 1 Основы реляцио... | 1.4 Вложенные за... | 1.4.5 Вложенный запрос, операторы ANY и ALL                 |
	| 1 Основы реляцио... | 1.4 Вложенные за... | 1.4.6 Вложенный запрос после SELECT                         |
	| 1 Основы реляцио... | 1.5 Запросы корр... | 1.5.5 Добавление записей, вложенные запросы                 |
	| 2 Запросы SQL к ... | 2.2 Запросы на в... | 2.2.7 Запросы для нескольких таблиц со вложенными запросами |
	| 2 Запросы SQL к ... | 2.2 Запросы на в... | 2.2.8 Вложенные запросы в операторах соединения             |
	| 2 Запросы SQL к ... | 2.3 Запросы корр... | 2.3.5 Запрос на обновление, вложенные запросы               |
	+---------------------+---------------------+-------------------------------------------------------------+
	Affected rows: 9
	Task:
	Заполнить таблицу step_keyword следующим образом: если ключевое слово есть в названии шага, то включить в step_keyword строку с id шага и id ключевого слова.
	Decision:
	MariaDB [Analitics]> SELECT * FROM keyword;
	    +------------+--------------+
	    | keyword_id | keyword_name |
	    +------------+--------------+
	    |          1 | SELECT       |
	    |          2 | FROM         |
	    +------------+--------------+
	    2 rows in set (0.000 sec)
	MariaDB [Analitics]> SELECT * FROM step;
	    +---------+--------------------------------------------------------------------------+-----------+-----------+---------------+
	    | step_id | step_name                                                                | step_type | lesson_id | step_position |
	    +---------+--------------------------------------------------------------------------+-----------+-----------+---------------+
	    |       1 | Структура уроков курса                                                   | text      |         1 |             1 |
	    |       2 | Содержание урока                                                         | text      |         1 |             2 |
	    |       3 | Реляционная модель, основные положения                                   | table     |         1 |             3 |
	    |       4 | Отношение, реляционная модель                                            | choice    |         1 |             4 |
	    +---------+--------------------------------------------------------------------------+-----------+-----------+---------------+
	    4 rows in set (0.001 sec)
	MariaDB [Analitics]> INSERT INTO step_keyword(step_id, keyword_id)
	    -> SELECT step_id, keyword_id
	    -> FROM step
	    -> INNER JOIN keyword
	    -> ON INSTR(CONCAT(step_name, ' '), CONCAT(' ', keyword_name, ' '))
	    ->     OR INSTR(CONCAT(step_name, ' '), CONCAT(' ', keyword_name, ','))
	    ->     OR INSTR(CONCAT(step_name, ' '), CONCAT(' ', keyword_name, '('));
	Query result:
	+---------+------------+
	| step_id | keyword_id |
	+---------+------------+
	| 38      | 1          |
	| 81      | 3          |
	| 82      | 4          |
	| 82      | 5          |
	| 82      | 6          |
	| 81      | 7          |
	| 82      | 7          |
	| 83      | 7          |
	| 83      | 8          |
	| 47      | 10         |
	| 47      | 11         |
	| 42      | 15         |
	| 43      | 16         |
	| 44      | 16         |
	| 42      | 17         |
	| 43      | 18         |
	| 46      | 18         |
	| 43      | 19         |
	| 88      | 26         |
	| 112     | 27         |
	| 113     | 27         |
	| 37      | 28         |
	| 37      | 29         |
	| 18      | 30         |
	| 36      | 30         |
	| 19      | 31         |
	| 18      | 32         |
	+---------+------------+
	Affected rows: 27
	Task:
	Реализовать поиск по ключевым словам. Вывести шаги, с которыми связаны ключевые слова MAX и AVG одновременно. Для шагов указать id модуля, позицию урока в модуле, позицию шага в уроке через точку, после позиции шага перед заголовком - пробел. Позицию шага в уроке вывести в виде двух цифр (если позиция шага меньше 10, то перед цифрой поставить 0). Столбец назвать Шаг. Информацию отсортировать по первому столбцу в алфавитном порядке.
	Decision:
	MariaDB [Analitics]> SELECT CONCAT(module_id,'.',
	    ->     lesson_position,
	    ->     IF(step_position < 10, ".0","."),
	    ->     step_position,
	    ->     " ",
	    ->     step_name) AS Шаг
	    -> FROM step
	    -> JOIN lesson
	    ->     USING(lesson_id)
	    -> JOIN module
	    ->     USING(module_id)
	    -> JOIN step_keyword
	    ->     USING (step_id)
	    -> JOIN keyword
	    ->     USING(keyword_id)
	    -> WHERE keyword_name = 'MAX'
	    ->     OR keyword_name ='AVG'
	    -> GROUP BY ШАГ
	    -> HAVING COUNT(*) = 2
	    -> ORDER BY 1;
	Query result:
	+---------------------------------------------------------+
	| Шаг                                                     |
	+---------------------------------------------------------+
	| 1.3.04 Выборка данных, групповые функции MIN, MAX и AVG |
	| 1.4.06 Вложенный запрос после SELECT                    |
	+---------------------------------------------------------+
	Affected rows: 2
	Task:
	Посчитать, сколько студентов относится к каждой группе. Столбцы назвать Группа, Интервал, Количество. Указать границы интервала.
	Decision:
	MariaDB [Analitics]> SELECT rate_group Группа,
	    ->     CASE rate_group
	    ->         WHEN 'I'   THEN 'от 0 до 10'
	    ->         WHEN 'II'  THEN 'от 11 до 15'
	    ->         WHEN 'III' THEN 'от 16 до 27'
	    ->         ELSE 'больше 27'
	    ->     END Интервал,
	    ->     COUNT(*) Количество
	    -> FROM(
	    ->     SELECT
	    ->         CASE
	    ->             WHEN COUNT(DISTINCT step_id) <= 10 THEN 'I'
	    ->             WHEN COUNT(DISTINCT step_id) <= 15 THEN 'II'
	    ->             WHEN COUNT(DISTINCT step_id) <= 27 THEN 'III'
	    ->             ELSE 'IV'
	    ->         END rate_group
	    ->     FROM step_student
	    ->     WHERE result = 'correct'
	    ->     GROUP BY student_id) query_in
	    -> GROUP BY rate_group
	    -> ORDER BY rate_group;
	Query result:
	+--------+-------------+------------+
	| Группа | Интервал    | Количество |
	+--------+-------------+------------+
	| I      | от 0 до 10  | 10         |
	| II     | от 11 до 15 | 27         |
	| III    | от 16 до 27 | 9          |
	| IV     | больше 27   | 18         |
	+--------+-------------+------------+
	Affected rows: 4
	Task:
	Исправить запрос примера так: для шагов, которые  не имеют неверных ответов,  указать 100 как процент успешных попыток, если же шаг не имеет верных ответов, указать 0. Информацию отсортировать сначала по возрастанию успешности, а затем по названию шага в алфавитном порядке.
	Decision:
	MariaDB [Analitics]> WITH table1 (step_name, correct, count)
	    ->     AS (SELECT step_name,
	    ->         SUM( IF (result = 'correct' , 1 , 0)),
	    ->         COUNT(result)
	    ->         FROM step
	    ->         JOIN step_student
	    ->             USING (step_id)
	    ->         GROUP BY step_name)
	    -> SELECT step_name AS Шаг,
	    ->     ROUND((correct/count)*100) AS Успешность
	    -> FROM table1
	    -> ORDER BY 2, 1;
	Query result:
	+--------------------------------------------------------------------------+------------+
	| Шаг                                                                      | Успешность |
	+--------------------------------------------------------------------------+------------+
	| Задание. Работа с архивной таблицей, оператор UNION, часть 1             | 0          |
	| Выборка данных, оператор LtuserE                                            | 19         |
	| Вложенные запросы в операторах соединения                                | 32         |
	| Задание. Вывести самый популярный жанр                                   | 33         |
	| Запросы для нескольких таблиц с группировкой                             | 33         |
	| Задание. Вывести заказы, доставленные с опозданием                       | 35         |
	| Задание. Вывести информацию о движении каждого заказа                    | 36         |
	| Запросы для нескольких таблиц со вложенными запросами                    | 36         |
	| Задание. Вывести подробную информацию о каждом заказе                    | 37         |
	| Выборка данных, вычисляемые столбцы, логические функции                  | 44         |
	| Операция соединение, использование USING()                               | 45         |
	| Перекрестное соединение CROSS JOIN                                       | 45         |
	| Задание. Вывести города, в которых живут клиенты магазина                | 48         |
	| Задание. Посчитать, сколько раз была заказана каждая книга               | 48         |
	| Запросы на основе трех и более связанных таблиц                          | 49         |
	| Выборка данных с сортировкой                                             | 53         |
	| Внешнее соединение LEFT и RIGHT OUTER JOIN                               | 55         |
	| Запросы на выборку из нескольких таблиц                                  | 58         |
	| Выборка данных, вычисляемые столбцы, математические функции              | 59         |
	| Задание. Вывести клиентов, которые заказывали книги определенного автора | 63         |
	| Задание. Вывести информацию об оплате каждого заказа                     | 65         |
	| Выборка данных, логические операции                                      | 67         |
	| Проектирование концептуальной модели базы данных                         | 70         |
	| Выборка данных, операторы BETWEEN, IN                                    | 72         |
	| Выборка данных с созданием вычисляемого столбца                          | 74         |
	| Выборка отдельных столбцов                                               | 76         |
	| Соединение INNER JOIN                                                    | 78         |
	| Выборка данных по условию                                                | 81         |
	| Выборка отдельных столбцов и присвоение им новых имен                    | 84         |
	| Выборка всех данных из таблицы                                           | 87         |
	| Задание. Работа с архивной таблицей, оператор UNION, часть 2             | 100        |
	| Построение логической схемы базы данных                                  | 100        |
	+--------------------------------------------------------------------------+------------+
	Affected rows: 32
	Task:
	Вычислить прогресс пользователей по курсу. Прогресс вычисляется как отношение верно пройденных шагов к общему количеству шагов в процентах, округленное до целого. В нашей базе данные о
	Тем пользователям, которые прошли все шаги (прогресс = 100%) выдать "Сертификат с отличием". Тем, у кого прогресс больше или равен 80% - "Сертификат". Для остальных записей в столбце Результат задать пустую строку ("").
	Информацию отсортировать по убыванию прогресса, затем по имени пользователя в алфавитном порядке.
	Decision:
	MariaDB [Analitics]> WITH get_passed (student_name, pssd)
	    ->     AS( SELECT student_name, COUNT(DISTINCT step_id) AS passed
	    ->         FROM student JOIN step_student USING(student_id)
	    ->         WHERE result = "correct"
	    ->         GROUP BY student_id
	    ->         ORDER BY passed)
	    -> SELECT student_name AS Студент,
	    ->     ROUND(100*pssd/(SELECT COUNT(DISTINCT step_id)
	    ->         FROM step_student)) AS Прогресс,
	    ->     CASE
	    ->         WHEN ROUND(100*pssd/(SELECT COUNT(DISTINCT step_id) FROM step_student)) =  100 THEN "Сертификат с отличием"
	    ->         WHEN ROUND(100*pssd/(SELECT COUNT(DISTINCT step_id) FROM step_student)) >= 80 THEN "Сертификат"
	    ->         ELSE ""
	    ->     END AS Результат
	    -> FROM get_passed
	    -> ORDER BY Прогресс DESC, Студент;
	Query result:
	+------------+----------+-----------------------+
	| Студент    | Прогресс | Результат             |
	+------------+----------+-----------------------+
	| student_60 | 100      | Сертификат с отличием |
	| student_15 | 94       | Сертификат            |
	| student_18 | 94       | Сертификат            |
	| student_27 | 94       | Сертификат            |
	| student_30 | 94       | Сертификат            |
	| student_31 | 94       | Сертификат            |
	| student_36 | 94       | Сертификат            |
	| student_39 | 94       | Сертификат            |
	| student_4  | 94       | Сертификат            |
	| student_43 | 94       | Сертификат            |
	| student_44 | 94       | Сертификат            |
	| student_46 | 94       | Сертификат            |
	| student_49 | 94       | Сертификат            |
	| student_51 | 94       | Сертификат            |
	| student_53 | 94       | Сертификат            |
	| student_59 | 91       | Сертификат            |
	| student_9  | 91       | Сертификат            |
	| student_23 | 88       | Сертификат            |
	| student_50 | 84       | Сертификат            |
	| student_20 | 78       |                       |
	| student_24 | 78       |                       |
	| student_52 | 63       |                       |
	| student_56 | 63       |                       |
	| student_34 | 59       |                       |
	| student_40 | 59       |                       |
	| student_11 | 50       |                       |
	| student_48 | 50       |                       |
	| student_42 | 47       |                       |
	| student_61 | 44       |                       |
	| student_13 | 41       |                       |
	| student_26 | 41       |                       |
	| student_1  | 34       |                       |
	| student_10 | 34       |                       |
	| student_12 | 34       |                       |
	| student_14 | 34       |                       |
	| student_19 | 34       |                       |
	| student_2  | 34       |                       |
	| student_21 | 34       |                       |
	| student_22 | 34       |                       |
	| student_25 | 34       |                       |
	| student_28 | 34       |                       |
	| student_3  | 34       |                       |
	| student_32 | 34       |                       |
	| student_35 | 34       |                       |
	| student_37 | 34       |                       |
	| student_41 | 34       |                       |
	| student_45 | 34       |                       |
	| student_54 | 34       |                       |
	| student_55 | 34       |                       |
	| student_57 | 34       |                       |
	| student_6  | 34       |                       |
	| student_62 | 34       |                       |
	| student_7  | 34       |                       |
	| student_8  | 34       |                       |
	| student_17 | 31       |                       |
	| student_33 | 31       |                       |
	| student_38 | 31       |                       |
	| student_58 | 31       |                       |
	| student_64 | 31       |                       |
	| student_16 | 28       |                       |
	| student_5  | 28       |                       |
	| student_63 | 28       |                       |
	| student_29 | 25       |                       |
	| student_47 | 25       |                       |
	+------------+----------+-----------------------+
	Task:
	Для студента с именем student_61 вывести все его попытки: название шага, результат и дату отправки попытки (submission_time). Информацию отсортировать по дате отправки попытки и указать, сколько минут прошло между отправкой соседних попыток. Название шага ограничить 20 символами и добавить "...". Столбцы назвать Студент, Шаг, Результат, Дата_отправки, Разница.
	Decision:
	SELECT student_name AS Студент,
	CONCAT(LEFT(step_name, 20), '...') AS Шаг,
	result AS Результат,
	FROM_UNIXTIME(submission_time) AS Дата_отправки,
	SEC_TO_TIME(submission_time - LAG(submission_time,
	1,
	submission_time)
	OVER (ORDER BY submission_time)) AS Разница
	FROM student
	INNER JOIN step_student USING(student_id)
	INNER JOIN step USING(step_id)
	WHERE student_name = 'student_61'
	ORDER BY Дата_отправки;
	+------------+-------------------------+-----------+---------------------+------------------+
	| Студент | Шаг | Результат | Дата_отправки | Разница |
	+------------+-------------------------+-----------+---------------------+------------------+
	| student_61 | Выборка всех данных ... | correct | 2020-08-27 14:22:14 | 0:00:00 |
	| student_61 | Выборка отдельных ст... | correct | 2020-08-27 14:23:53 | 0:01:39 |
	| student_61 | Выборка отдельных ст... | correct | 2020-08-27 14:28:41 | 0:04:48 |
	| student_61 | Выборка данных с соз... | wrong | 2020-08-27 14:33:57 | 0:05:16 |
	| student_61 | Выборка данных с соз... | wrong | 2020-08-27 14:34:24 | 0:00:27 |
	| student_61 | Выборка данных с соз... | correct | 2020-08-27 14:34:50 | 0:00:26 |
	| student_61 | Выборка данных, вычи... | correct | 2020-08-27 14:42:44 | 0:07:54 |
	| student_61 | Выборка данных, вычи... | wrong | 2020-08-27 14:54:06 | 0:11:22 |
	| student_61 | Выборка данных, вычи... | wrong | 2020-08-27 14:55:04 | 0:00:58 |
	| student_61 | Выборка данных, вычи... | wrong | 2020-08-27 14:58:23 | 0:03:19 |
	| student_61 | Выборка данных, вычи... | wrong | 2020-08-27 14:58:56 | 0:00:33 |
	| student_61 | Выборка данных, вычи... | wrong | 2020-08-27 14:59:09 | 0:00:13 |
	| student_61 | Выборка данных, вычи... | wrong | 2020-08-27 14:59:49 | 0:00:40 |
	| student_61 | Выборка данных, вычи... | wrong | 2020-08-27 15:01:00 | 0:01:11 |
	| student_61 | Выборка данных, вычи... | wrong | 2020-08-27 15:05:20 | 0:04:20 |
	| student_61 | Выборка данных, вычи... | wrong | 2020-08-27 15:06:19 | 0:00:59 |
	| student_61 | Выборка данных, вычи... | wrong | 2020-08-27 15:06:58 | 0:00:39 |
	| student_61 | Выборка данных, вычи... | wrong | 2020-08-27 15:08:40 | 0:01:42 |
	| student_61 | Выборка данных, вычи... | wrong | 2020-08-27 15:09:02 | 0:00:22 |
	| student_61 | Выборка данных, вычи... | correct | 2020-08-27 15:13:06 | 0:04:04 |
	| student_61 | Выборка данных по ус... | wrong | 2020-08-27 15:21:02 | 0:07:56 |
	| student_61 | Выборка данных по ус... | correct | 2020-08-27 15:21:18 | 0:00:16 |
	| student_61 | Выборка данных, логи... | correct | 2020-08-27 15:26:05 | 0:04:47 |
	| student_61 | Выборка данных, опер... | correct | 2020-08-27 15:31:31 | 0:05:26 |
	| student_61 | Выборка данных, опер... | wrong | 2020-08-27 15:42:30 | 0:10:59 |
	| student_61 | Выборка данных, опер... | wrong | 2020-08-27 15:43:35 | 0:01:05 |
	| student_61 | Выборка данных, опер... | wrong | 2020-08-27 15:48:09 | 0:04:34 |
	| student_61 | Выборка данных, опер... | wrong | 2020-08-27 15:49:47 | 0:01:38 |
	| student_61 | Выборка данных, опер... | wrong | 2020-08-27 15:52:13 | 0:02:26 |
	| student_61 | Выборка данных, опер... | wrong | 2020-08-27 15:57:41 | 0:05:28 |
	| student_61 | Выборка данных, опер... | wrong | 2020-08-27 15:57:53 | 0:00:12 |
	| student_61 | Выборка данных, опер... | wrong | 2020-08-27 15:58:28 | 0:00:35 |
	| student_61 | Выборка данных, опер... | wrong | 2020-08-27 15:59:58 | 0:01:30 |
	| student_61 | Выборка данных, опер... | wrong | 2020-08-27 16:00:22 | 0:00:24 |
	| student_61 | Выборка данных, опер... | correct | 2020-08-27 16:01:05 | 0:00:43 |
	| student_61 | Выборка данных с сор... | wrong | 2020-08-27 16:12:51 | 0:11:46 |
	| student_61 | Выборка данных с сор... | correct | 2020-08-27 16:14:15 | 0:01:24 |
	| student_61 | Соединение INNER JOI... | correct | 2020-09-01 07:25:39 | 4 days, 15:11:24 |
	| student_61 | Внешнее соединение L... | wrong | 2020-09-01 09:53:30 | 2:27:51 |
	| student_61 | Внешнее соединение L... | correct | 2020-09-01 09:53:50 | 0:00:20 |
	| student_61 | Перекрестное соедине... | wrong | 2020-09-01 10:45:30 | 0:51:40 |
	| student_61 | Перекрестное соедине... | wrong | 2020-09-01 10:46:21 | 0:00:51 |
	| student_61 | Перекрестное соедине... | correct | 2020-09-01 10:47:55 | 0:01:34 |
	+------------+-------------------------+-----------+---------------------+------------------+
	Task:
	Посчитать среднее время, за которое пользователи проходят урок по следующему алгоритму:

	        для каждого пользователя вычислить время прохождения шага как сумму времени, потраченного на каждую попытку (время попытки - это разница между временем отправки задания и временем начала попытки), при этом попытки, которые длились больше 4 часов не учитывать, так как пользователь мог просто оставить задание открытым в браузере, а вернуться к нему на следующий день;
	        для каждого студента посчитать общее время, которое он затратил на каждый урок;
	        вычислить среднее время выполнения урока в часах, результат округлить до 2-х знаков после запятой;
	        вывести информацию по возрастанию времени, пронумеровав строки, для каждого урока указать номер модуля и его позицию в нем.
	Decision:
	MariaDB [Analitics]> SELECT ROW_NUMBER() OVER (ORDER BY Среднее_время) AS Номер,
	    ->     Урок, Среднее_время
	    -> FROM(
	    ->     SELECT
	    ->         Урок, ROUND(AVG(difference), 2) AS Среднее_время
	    -> FROM
	    ->      (SELECT student_id,
	    ->              CONCAT(module_id, '.', lesson_position, ' ', lesson_name) AS Урок,
	    ->              SUM((submission_time - attempt_time) / 3600) AS difference
	    ->       FROM module INNER JOIN lesson USING (module_id)
	    ->                   INNER JOIN step USING (lesson_id)
	    ->                   INNER JOIN step_student USING (step_id)
	    ->       WHERE submission_time - attempt_time <= 4 * 3600
	    ->       GROUP BY 1, 2) AS query_1
	    -> GROUP BY 1) AS TA
	    -> order by 3;
	Query result:
	+-------+-------------------------------------------------------------+---------------+
	| Номер | Урок                                                        | Среднее_время |
	+-------+-------------------------------------------------------------+---------------+
	| 1     | 2.2 Запросы на выборку, соединение таблиц                   | 2.37          |
	| 2     | 1.2 Выборка данных                                          | 2.65          |
	| 3     | 2.4 База данных "Интернет-магазин книг", запросы на выборку | 3.65          |
	+-------+-------------------------------------------------------------+---------------+
	Affected rows: 3
	Task:
	Вычислить рейтинг каждого студента относительно студента, прошедшего наибольшее количество шагов в модуле (вычисляется как отношение количества пройденных студентом шагов к максимальному количеству пройденных шагов, умноженное на 100). Вывести номер модуля, имя студента, количество пройденных им шагов и относительный рейтинг. Относительный рейтинг округлить до одного знака после запятой. Столбцы назвать Модуль, Студент, Пройдено_шагов и Относительный_рейтинг  соответственно. Информацию отсортировать сначала по возрастанию номера модуля, потом по убыванию относительного рейтинга и, наконец, по имени студента в алфавитном порядке.
	Decision:
	MariaDB [Analitics]> SELECT  module_id AS Модуль, student_name AS Студент, COUNT(DISTINCT step_id) AS Пройдено_шагов ,
	    -> ROUND(COUNT(DISTINCT step_id) /
	    ->       MAX(COUNT(DISTINCT step_id)) OVER(PARTITION BY module_id) *100, 1) AS Относительный_рейтинг
	    -> FROM lesson
	    -> JOIN step USING (lesson_id)
	    -> JOIN step_student USING (step_id)
	    -> JOIN student USING (student_id)
	    -> WHERE result = 'correct'
	    -> GROUP BY module_id, student_name
	    -> ORDER BY 1, 4 DESC, 2;
	Query result:
	+--------+------------+----------------+-----------------------+
	| Модуль | Студент    | Пройдено_шагов | Относительный_рейтинг |
	+--------+------------+----------------+-----------------------+
	| 1      | student_1  | 11             | 100.0                 |
	| 1      | student_10 | 11             | 100.0                 |
	| 1      | student_11 | 11             | 100.0                 |
	| 1      | student_12 | 11             | 100.0                 |
	| 1      | student_13 | 11             | 100.0                 |
	| 1      | student_14 | 11             | 100.0                 |
	| 1      | student_15 | 11             | 100.0                 |
	| 1      | student_18 | 11             | 100.0                 |
	| 1      | student_19 | 11             | 100.0                 |
	| 1      | student_2  | 11             | 100.0                 |
	| 1      | student_20 | 11             | 100.0                 |
	| 1      | student_21 | 11             | 100.0                 |
	| 1      | student_22 | 11             | 100.0                 |
	| 1      | student_23 | 11             | 100.0                 |
	| 1      | student_24 | 11             | 100.0                 |
	| 1      | student_25 | 11             | 100.0                 |
	| 1      | student_26 | 11             | 100.0                 |
	| 1      | student_27 | 11             | 100.0                 |
	| 1      | student_28 | 11             | 100.0                 |
	| 1      | student_3  | 11             | 100.0                 |
	| 1      | student_30 | 11             | 100.0                 |
	| 1      | student_31 | 11             | 100.0                 |
	| 1      | student_32 | 11             | 100.0                 |
	| 1      | student_34 | 11             | 100.0                 |
	| 1      | student_35 | 11             | 100.0                 |
	| 1      | student_36 | 11             | 100.0                 |
	| 1      | student_37 | 11             | 100.0                 |
	| 1      | student_39 | 11             | 100.0                 |
	| 1      | student_4  | 11             | 100.0                 |
	| 1      | student_40 | 11             | 100.0                 |
	| 1      | student_41 | 11             | 100.0                 |
	| 1      | student_42 | 11             | 100.0                 |
	| 1      | student_43 | 11             | 100.0                 |
	| 1      | student_44 | 11             | 100.0                 |
	| 1      | student_45 | 11             | 100.0                 |
	| 1      | student_46 | 11             | 100.0                 |
	| 1      | student_48 | 11             | 100.0                 |
	| 1      | student_49 | 11             | 100.0                 |
	| 1      | student_50 | 11             | 100.0                 |
	| 1      | student_51 | 11             | 100.0                 |
	| 1      | student_52 | 11             | 100.0                 |
	| 1      | student_53 | 11             | 100.0                 |
	| 1      | student_54 | 11             | 100.0                 |
	| 1      | student_55 | 11             | 100.0                 |
	| 1      | student_56 | 11             | 100.0                 |
	| 1      | student_57 | 11             | 100.0                 |
	| 1      | student_59 | 11             | 100.0                 |
	| 1      | student_6  | 11             | 100.0                 |
	| 1      | student_60 | 11             | 100.0                 |
	| 1      | student_61 | 11             | 100.0                 |
	| 1      | student_62 | 11             | 100.0                 |
	| 1      | student_7  | 11             | 100.0                 |
	| 1      | student_8  | 11             | 100.0                 |
	| 1      | student_9  | 11             | 100.0                 |
	| 1      | student_17 | 10             | 90.9                  |
	| 1      | student_33 | 10             | 90.9                  |
	| 1      | student_38 | 10             | 90.9                  |
	| 1      | student_58 | 10             | 90.9                  |
	| 1      | student_64 | 10             | 90.9                  |
	| 1      | student_16 | 9              | 81.8                  |
	| 1      | student_5  | 9              | 81.8                  |
	| 1      | student_63 | 9              | 81.8                  |
	| 1      | student_29 | 8              | 72.7                  |
	| 1      | student_47 | 8              | 72.7                  |
	| 2      | student_60 | 21             | 100.0                 |
	| 2      | student_15 | 19             | 90.5                  |
	| 2      | student_18 | 19             | 90.5                  |
	| 2      | student_27 | 19             | 90.5                  |
	| 2      | student_30 | 19             | 90.5                  |
	| 2      | student_31 | 19             | 90.5                  |
	| 2      | student_36 | 19             | 90.5                  |
	| 2      | student_39 | 19             | 90.5                  |
	| 2      | student_4  | 19             | 90.5                  |
	| 2      | student_43 | 19             | 90.5                  |
	| 2      | student_44 | 19             | 90.5                  |
	| 2      | student_46 | 19             | 90.5                  |
	| 2      | student_49 | 19             | 90.5                  |
	| 2      | student_51 | 19             | 90.5                  |
	| 2      | student_53 | 19             | 90.5                  |
	| 2      | student_59 | 18             | 85.7                  |
	| 2      | student_9  | 18             | 85.7                  |
	| 2      | student_23 | 17             | 81.0                  |
	| 2      | student_50 | 16             | 76.2                  |
	| 2      | student_20 | 14             | 66.7                  |
	| 2      | student_24 | 14             | 66.7                  |
	| 2      | student_52 | 9              | 42.9                  |
	| 2      | student_56 | 9              | 42.9                  |
	| 2      | student_34 | 8              | 38.1                  |
	| 2      | student_40 | 8              | 38.1                  |
	| 2      | student_11 | 5              | 23.8                  |
	| 2      | student_48 | 5              | 23.8                  |
	| 2      | student_42 | 4              | 19.0                  |
	| 2      | student_61 | 3              | 14.3                  |
	| 2      | student_13 | 2              | 9.5                   |
	| 2      | student_26 | 2              | 9.5                   |
	+--------+------------+----------------+-----------------------+
	Affected rows: 95
	Task:
	Проанализировать, в каком порядке и с каким интервалом пользователь отправлял последнее верно выполненное задание каждого урока. Учитывать только студентов, прошедших хотя бы один шаг из всех трех уроков. В базе занесены попытки студентов  для трех уроков курса, поэтому анализ проводить только для этих уроков.
	Для студентов прошедших как минимум по одному шагу в каждом уроке, найти последний пройденный шаг каждого урока - крайний шаг, и указать:
	        имя студента;
	        номер урока, состоящий из номера модуля и через точку позиции каждого урока в модуле;
	        время отправки  - время подачи решения на проверку;
	        разницу во времени отправки между текущим и предыдущим крайним шагом в днях, при этом для первого шага поставить прочерк ("-"), а количество дней округлить до целого в большую сторону.
	Столбцы назвать  Студент, Урок,  Макс_время_отправки и Интервал  соответственно. Отсортировать результаты по имени студента в алфавитном порядке, а потом по возрастанию времени отправки.
	Decision:
	MariaDB [Analitics]> WITH get_time_lesson(student_name,  lesson, max_submission_time)
	    -> AS( SELECT student_name,  
	    ->    CONCAT(module_id,
	    ->        '.',
	    ->         lesson_position),
	    ->    MAX(submission_time)
	    ->    FROM step_student
	    ->    INNER JOIN step USING (step_id)
	    ->    INNER JOIN lesson USING (lesson_id)
	    ->    INNER JOIN student USING(student_id)
	    ->    WHERE  result = 'correct'  
	    ->    GROUP BY 1,2
	    ->    ORDER BY 1),
	    ->    get_students(student_name)
	    ->  AS( SELECT student_name
	    ->    FROM get_time_lesson
	    ->    GROUP BY student_name
	    ->    HAVING COUNT(lesson) = 3)
	    -> SELECT student_name AS Студент,  
	    ->    lesson AS Урок,
	    ->    FROM_UNIXTIME(max_submission_time) AS Макс_время_отправки,
	    ->    IFNULL(CEIL((max_submission_time - LAG(max_submission_time) OVER (PARTITION BY student_name
	    ->        ORDER BY max_submission_time )) / 86400),'-') AS Интервал
	    -> FROM get_time_lesson
	    -> WHERE student_name in (SELECT * FROM get_students)
	    -> ORDER BY 1,3;
	Query result:
	+------------+------+---------------------+----------+
	| Студент    | Урок | Макс_время_отправки | Интервал |
	+------------+------+---------------------+----------+
	| student_15 | 1.2  | 2020-05-20 12:35:57 | -        |
	| student_15 | 2.4  | 2020-06-08 07:10:24 | 19       |
	| student_15 | 2.2  | 2020-08-18 12:47:03 | 72       |
	| student_18 | 1.2  | 2020-04-17 03:22:14 | -        |
	| student_18 | 2.2  | 2020-06-18 07:25:44 | 63       |
	| student_18 | 2.4  | 2020-06-18 07:34:14 | 1        |
	| student_20 | 1.2  | 2020-05-28 12:08:53 | -        |
	| student_20 | 2.2  | 2020-06-17 15:55:29 | 21       |
	| student_20 | 2.4  | 2020-06-18 09:48:39 | 1        |
	| student_23 | 1.2  | 2020-05-24 18:15:27 | -        |
	| student_23 | 2.2  | 2020-06-01 04:37:16 | 8        |
	| student_23 | 2.4  | 2020-06-01 04:42:36 | 1        |
	| student_24 | 1.2  | 2020-04-14 16:16:22 | -        |
	| student_24 | 2.2  | 2020-05-11 12:28:49 | 27       |
	| student_24 | 2.4  | 2020-05-13 12:20:39 | 2        |
	| student_27 | 1.2  | 2020-08-12 10:18:47 | -        |
	| student_27 | 2.2  | 2020-08-14 17:14:51 | 3        |
	| student_27 | 2.4  | 2020-08-20 12:23:34 | 6        |
	| student_30 | 1.2  | 2020-08-10 08:38:49 | -        |
	| student_30 | 2.2  | 2020-08-16 12:53:39 | 7        |
	| student_30 | 2.4  | 2020-08-19 11:41:49 | 3        |
	| student_31 | 1.2  | 2020-06-13 09:03:39 | -        |
	| student_31 | 2.2  | 2020-07-02 16:43:36 | 20       |
	| student_31 | 2.4  | 2020-07-05 17:18:56 | 4        |
	| student_36 | 1.2  | 2020-08-04 07:25:30 | -        |
	| student_36 | 2.2  | 2020-08-07 11:39:12 | 4        |
	| student_36 | 2.4  | 2020-08-07 20:33:02 | 1        |
	| student_39 | 1.2  | 2020-05-31 12:35:10 | -        |
	| student_39 | 2.2  | 2020-06-02 09:47:15 | 2        |
	| student_39 | 2.4  | 2020-06-02 17:06:41 | 1        |
	| student_4  | 1.2  | 2020-05-31 17:46:27 | -        |
	| student_4  | 2.2  | 2020-07-27 17:12:45 | 57       |
	| student_4  | 2.4  | 2020-07-29 09:21:24 | 2        |
	| student_43 | 1.2  | 2020-07-16 21:19:13 | -        |
	| student_43 | 2.4  | 2020-08-06 13:02:44 | 21       |
	| student_43 | 2.2  | 2020-08-08 20:11:52 | 3        |
	| student_44 | 1.2  | 2020-05-26 14:23:39 | -        |
	| student_44 | 2.2  | 2020-06-02 11:07:52 | 7        |
	| student_44 | 2.4  | 2020-06-06 21:57:20 | 5        |
	| student_46 | 1.2  | 2020-05-26 13:02:10 | -        |
	| student_46 | 2.4  | 2020-06-03 20:30:01 | 9        |
	| student_46 | 2.2  | 2020-06-03 20:54:34 | 1        |
	| student_49 | 1.2  | 2020-07-11 16:31:12 | -        |
	| student_49 | 2.2  | 2020-07-15 05:00:03 | 4        |
	| student_49 | 2.4  | 2020-07-16 04:57:51 | 1        |
	| student_50 | 1.2  | 2020-07-01 08:16:41 | -        |
	| student_50 | 2.2  | 2020-08-10 08:26:49 | 41       |
	| student_50 | 2.4  | 2020-09-09 12:44:00 | 31       |
	| student_51 | 1.2  | 2020-09-03 07:24:26 | -        |
	| student_51 | 2.2  | 2020-09-07 19:31:01 | 5        |
	| student_51 | 2.4  | 2020-09-10 13:12:11 | 3        |
	| student_52 | 1.2  | 2020-08-24 18:30:55 | -        |
	| student_52 | 2.2  | 2020-09-07 13:51:02 | 14       |
	| student_52 | 2.4  | 2020-09-07 22:16:19 | 1        |
	| student_53 | 1.2  | 2020-07-11 09:32:33 | -        |
	| student_53 | 2.2  | 2020-07-17 12:34:54 | 7        |
	| student_53 | 2.4  | 2020-07-19 05:09:32 | 2        |
	| student_56 | 1.2  | 2020-07-15 12:20:48 | -        |
	| student_56 | 2.2  | 2020-08-06 10:22:13 | 22       |
	| student_56 | 2.4  | 2020-08-20 09:18:46 | 14       |
	| student_59 | 1.2  | 2020-08-17 19:29:09 | -        |
	| student_59 | 2.2  | 2020-08-21 10:35:18 | 4        |
	| student_59 | 2.4  | 2020-08-22 10:39:29 | 2        |
	| student_60 | 1.2  | 2020-09-01 12:54:58 | -        |
	| student_60 | 2.2  | 2020-09-02 15:34:45 | 2        |
	| student_60 | 2.4  | 2020-09-03 10:53:13 | 1        |
	| student_9  | 1.2  | 2020-05-01 05:40:11 | -        |
	| student_9  | 2.2  | 2020-05-05 09:29:20 | 5        |
	| student_9  | 2.4  | 2020-05-06 10:52:38 | 2        |
	+------------+------+---------------------+----------+
	Affected rows: 69
	Task:
	Для студента с именем student_59 вывести следующую информацию по всем его попыткам:
	        информация о шаге: номер модуля, символ '.', позиция урока в модуле, символ '.', позиция шага в модуле;
	        порядковый номер попытки для каждого шага - определяется по возрастанию времени отправки попытки;
	        результат попытки;
	        время попытки (преобразованное к формату времени) - определяется как разность между временем отправки попытки и времени ее начала, в случае если попытка длилась  более 1 часа, то время попытки заменить на среднее время всех попыток пользователя по всем шагам без учета тех, которые длились больше 1 часа;
	        относительное время попытки  - определяется как отношение времени попытки (с учетом замены времени попытки) к суммарному времени всех попыток  шага, округленное до двух знаков после запятой  .
	Столбцы назвать  Студент,  Шаг, Номер_попытки, Результат, Время_попытки и Относительное_время. Информацию отсортировать сначала по возрастанию id шага, а затем по возрастанию номера попытки (определяется по времени отправки попытки).
	Decision:
	MariaDB [Analitics]> SET @avg_time := (SELECT CEIL(AVG(submission_time - attempt_time))
	    ->     FROM step_student
	    ->     INNER JOIN student USING(student_id)
	    ->     WHERE student_name = "student_59"
	    ->         AND (submission_time - attempt_time) < 3600);
	Query OK, 0 rows affected (0.002 sec)
	MariaDB [Analitics]>     WITH get_stat
	    ->     AS( SELECT student_name,
	    ->        CONCAT(module_id,
	    ->            ".",
	    ->            lesson_position,
	    ->            ".",
	    ->            step_position) AS less,
	    ->        step_id,
	    ->        RANK() OVER (PARTITION BY CONCAT(module_id,
	    ->            ".",
	    ->            lesson_position,
	    ->            ".",
	    ->            step_position)
	    ->        ORDER BY submission_time) AS rang,
	    ->        result,
	    ->        CASE
	    ->            WHEN (submission_time - attempt_time) > 3600
	    ->               THEN @avg_time
	    ->            ELSE (submission_time - attempt_time)
	    ->        END AS qr
	    ->     FROM student
	    ->     INNER JOIN step_student USING(student_id)
	    ->     INNER JOIN step USING(step_id)
	    ->     INNER JOIN lesson USING(lesson_id)
	    ->     WHERE student_name = "student_59")
	    -> SELECT student_name AS Студент,
	    ->     less AS Шаг,
	    ->     rang AS Номер_попытки,
	    ->     result AS Результат,
	    ->     SEC_TO_TIME(CEIL(qr)) AS Время_попытки,
	    ->     ROUND((qr / (SUM(qr) OVER (PARTITION BY less ORDER BY less)) * 100), 2) AS Относительное_время
	    -> FROM get_stat
	    -> ORDER BY step_id, 3;
	Affected rows: 0
	Query result:
	+------------+--------+---------------+-----------+---------------+---------------------+
	| Студент    | Шаг    | Номер_попытки | Результат | Время_попытки | Относительное_время |
	+------------+--------+---------------+-----------+---------------+---------------------+
	| student_59 | 1.2.2  | 1             | correct   | 0:00:28       | 100.00              |
	| student_59 | 1.2.3  | 1             | correct   | 0:01:11       | 100.00              |
	| student_59 | 1.2.4  | 1             | correct   | 0:06:09       | 100.00              |
	| student_59 | 1.2.5  | 1             | correct   | 0:02:24       | 100.00              |
	| student_59 | 1.2.6  | 1             | wrong     | 0:09:42       | 90.37               |
	| student_59 | 1.2.6  | 2             | wrong     | 0:00:05       | 0.78                |
	| student_59 | 1.2.6  | 3             | wrong     | 0:00:23       | 3.57                |
	| student_59 | 1.2.6  | 4             | wrong     | 0:00:10       | 1.55                |
	| student_59 | 1.2.6  | 5             | correct   | 0:00:20       | 3.11                |
	| student_59 | 1.2.6  | 6             | correct   | 0:00:04       | 0.62                |
	| student_59 | 1.2.7  | 1             | wrong     | 0:11:44       | 98.88               |
	| student_59 | 1.2.7  | 2             | correct   | 0:00:08       | 1.12                |
	| student_59 | 1.2.8  | 1             | correct   | 0:02:23       | 100.00              |
	| student_59 | 1.2.9  | 1             | wrong     | 0:04:53       | 92.72               |
	| student_59 | 1.2.9  | 2             | correct   | 0:00:23       | 7.28                |
	| student_59 | 1.2.10 | 1             | wrong     | 0:03:19       | 76.83               |
	| student_59 | 1.2.10 | 2             | wrong     | 0:00:07       | 2.70                |
	| student_59 | 1.2.10 | 3             | correct   | 0:00:53       | 20.46               |
	| student_59 | 1.2.11 | 1             | wrong     | 0:15:50       | 79.56               |
	| student_59 | 1.2.11 | 2             | wrong     | 0:00:06       | 0.50                |
	| student_59 | 1.2.11 | 3             | wrong     | 0:00:10       | 0.84                |
	| student_59 | 1.2.11 | 4             | wrong     | 0:00:29       | 2.43                |
	| student_59 | 1.2.11 | 5             | wrong     | 0:00:07       | 0.59                |
	| student_59 | 1.2.11 | 6             | wrong     | 0:00:08       | 0.67                |
	| student_59 | 1.2.11 | 7             | wrong     | 0:00:04       | 0.34                |
	| student_59 | 1.2.11 | 8             | wrong     | 0:00:24       | 2.01                |
	| student_59 | 1.2.11 | 9             | wrong     | 0:00:07       | 0.59                |
	| student_59 | 1.2.11 | 10            | wrong     | 0:00:10       | 0.84                |
	| student_59 | 1.2.11 | 11            | wrong     | 0:02:11       | 10.97               |
	| student_59 | 1.2.11 | 12            | correct   | 0:00:08       | 0.67                |
	| student_59 | 1.2.12 | 1             | correct   | 0:07:10       | 100.00              |
	| student_59 | 2.2.2  | 1             | correct   | 0:08:52       | 100.00              |
	| student_59 | 2.2.3  | 1             | wrong     | 0:11:31       | 98.86               |
	| student_59 | 2.2.3  | 2             | correct   | 0:00:08       | 1.14                |
	| student_59 | 2.2.4  | 1             | wrong     | 0:17:46       | 93.18               |
	| student_59 | 2.2.4  | 2             | wrong     | 0:00:51       | 4.46                |
	| student_59 | 2.2.4  | 3             | wrong     | 0:00:15       | 1.31                |
	| student_59 | 2.2.4  | 4             | wrong     | 0:00:08       | 0.70                |
	| student_59 | 2.2.4  | 5             | wrong     | 0:00:04       | 0.35                |
	| student_59 | 2.2.5  | 1             | correct   | 0:07:10       | 100.00              |
	| student_59 | 2.2.6  | 1             | correct   | 0:24:35       | 100.00              |
	| student_59 | 2.2.7  | 1             | wrong     | 0:53:14       | 99.29               |
	| student_59 | 2.2.7  | 2             | correct   | 0:00:23       | 0.71                |
	| student_59 | 2.2.8  | 1             | wrong     | 0:07:10       | 48.31               |
	| student_59 | 2.2.8  | 2             | correct   | 0:07:40       | 51.69               |
	| student_59 | 2.2.9  | 1             | correct   | 0:31:13       | 100.00              |
	| student_59 | 2.4.2  | 1             | correct   | 0:03:31       | 100.00              |
	| student_59 | 2.4.3  | 1             | correct   | 0:08:21       | 100.00              |
	| student_59 | 2.4.5  | 1             | correct   | 0:07:10       | 100.00              |
	| student_59 | 2.4.6  | 1             | correct   | 0:13:38       | 100.00              |
	| student_59 | 2.4.7  | 1             | correct   | 0:21:18       | 100.00              |
	| student_59 | 2.4.8  | 1             | correct   | 0:33:02       | 100.00              |
	| student_59 | 2.4.9  | 1             | wrong     | 0:18:12       | 71.75               |
	| student_59 | 2.4.9  | 2             | correct   | 0:07:10       | 28.25               |
	| student_59 | 2.4.10 | 1             | correct   | 0:05:32       | 100.00              |
	| student_59 | 2.4.11 | 1             | correct   | 0:40:27       | 100.00              |
	| student_59 | 2.4.12 | 1             | correct   | 0:07:10       | 100.00              |
	| student_59 | 2.4.13 | 1             | correct   | 0:07:15       | 100.00              |
	+------------+--------+---------------+-----------+---------------+---------------------+
	Affected rows: 58
	Task:
	Online курс обучающиеся могут проходить по различным траекториям, проследить за которыми можно по способу решения ими заданий шагов курса. Большинство обучающихся за несколько попыток  получают правильный ответ
	и переходят к следующему шагу. Но есть такие, что остаются на шаге, выполняя несколько верных попыток, или переходят к следующему, оставив нерешенные шаги.
	Выделив эти "необычные" действия обучающихся, можно проследить их траекторию работы с курсом и проанализировать задания, для которых эти действия выполнялись, а затем их как-то изменить.
	Для этой цели необходимо выделить группы обучающихся по способу прохождения шагов:
	        I группа - это те пользователи, которые после верной попытки решения шага делают неверную (скорее всего для того, чтобы поэкспериментировать или проверить, как работают примеры);
	        II группа - это те пользователи, которые делают больше одной верной попытки для одного шага (возможно, улучшают свое решение или пробуют другой вариант);
	        III группа - это те пользователи, которые не смогли решить задание какого-то шага (у них все попытки по этому шагу - неверные).
	Вывести группу (I, II, III), имя пользователя, количество шагов, которые пользователь выполнил по соответствующему способу. Столбцы назвать Группа, Студент, Количество_шагов. Отсортировать информацию по возрастанию номеров групп, потом по убыванию количества шагов и, наконец, по имени студента в алфавитном порядке.
	Decision:
	MariaDB [Analitics]> WITH qr
	    -> AS(SELECT student_name,
	    ->     step_id,
	    ->     count(result) AS sm
	    ->     FROM step_student
	    ->     INNER JOIN student
	    ->         USING(student_id)
	    ->     WHERE result = "correct"
	    ->     GROUP BY 1, 2
	    ->     HAVING count(result) > 1)
	    -> SELECT "I" AS Группа,
	    ->     student_name AS Студент,
	    ->     count(step_id) AS Количество_шагов
	    -> FROM (SELECT student_name,
	    ->     step_id,
	    ->     IF(result = "correct"
	    ->        AND submission_time < MAX(submission_time) OVER (PARTITION BY student_name, step_id),
	    ->        IF(LEAD(result) OVER (PARTITION BY student_id, step_id ORDER BY submission_time) = "wrong",
	    ->            1,
	    ->            0),
	    ->        0) AS change_res
	    -> FROM step_student INNER JOIN student USING(student_id))qr1
	    -> WHERE change_res = 1
	    -> GROUP BY 1, 2
	    -> UNION
	    -> SELECT "II" AS Группа,
	    ->     student_name AS Студент,
	    ->     count(step_id) AS Количество_шагов
	    -> FROM qr
	    -> GROUP BY 1, 2
	    -> UNION
	    -> SELECT "III" AS Группа,
	    ->     student_name AS Студент,
	    ->     count(DISTINCT step_id) AS Количество_шагов
	    -> FROM (SELECT student_id,
	    ->     step_id,
	    ->     SUM(new_result) OVER (PARTITION BY student_id, step_id) AS sum_result
	    ->     FROM (SELECT student_id,
	    ->         step_id,
	    ->         IF(result = "wrong",
	    ->             0,
	    ->             1) AS new_result
	    ->         FROM step_student)qr_1)qr_2
	    ->         INNER JOIN student
	    ->             USING(student_id)
	    -> WHERE sum_result = 0
	    -> GROUP BY student_id
	    -> ORDER BY Группа, Количество_шагов DESC, Студент;
	Query result:
	+--------+------------+------------------+
	| Группа | Студент    | Количество_шагов |
	+--------+------------+------------------+
	| I      | student_15 | 2                |
	| I      | student_53 | 2                |
	| I      | student_11 | 1                |
	| I      | student_34 | 1                |
	| I      | student_35 | 1                |
	| I      | student_40 | 1                |
	| I      | student_57 | 1                |
	| I      | student_62 | 1                |
	| I      | student_9  | 1                |
	| II     | student_53 | 4                |
	| II     | student_62 | 4                |
	| II     | student_34 | 3                |
	| II     | student_60 | 3                |
	| II     | student_20 | 2                |
	| II     | student_35 | 2                |
	| II     | student_9  | 2                |
	| II     | student_11 | 1                |
	| II     | student_15 | 1                |
	| II     | student_30 | 1                |
	| II     | student_36 | 1                |
	| II     | student_39 | 1                |
	| II     | student_40 | 1                |
	| II     | student_46 | 1                |
	| II     | student_57 | 1                |
	| II     | student_59 | 1                |
	| III    | student_24 | 3                |
	| III    | student_33 | 1                |
	| III    | student_42 | 1                |
	| III    | student_50 | 1                |
	| III    | student_51 | 1                |
	| III    | student_59 | 1                |
	| III    | student_64 | 1                |
	+--------+------------+------------------+
	Affected rows: 32
	Task:
	Разработать базу "Склад Книг"
	Известны название книги, ее автор, количество экземпляров в наличии и ее цена. Вся эта информация может быть представлена в виде таблицы, состоящей из 4 столбцов (приведены только 4 записи, на самом деле их гораздо больше).:
	Название            Автор               Цена, руб   Количество
	Мастер и Маргарита  Булгаков М.А.       670.99      3
	Белая гвардия       Булгаков М.А.       540.50      5
	Идиот               Достоевский Ф.М.    460         10
	Братья Карамазовы   Достоевский Ф.М.    799.01      2
	Task:
	Сформулируйте SQL запрос для создания таблицы book
	Структура таблицы book:
	Поле        Тип, описание
	book_id     INT PRIMARY KEY AUTO_INCREMENT
	title       VARCHAR(50)
	author      VARCHAR(30)
	price       DECIMAL(8, 2)
	amount      INT
	Decision:
	mysql> CREATE TABLE book(
	    -> book_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> title VARCHAR(50),
	    -> author VARCHAR(30),
	    -> price DECIMAL(8, 2),
	    -> amount INT
	    -> );  
	    Query OK, 0 rows affected (0.16 sec)
	Task:
	Занесите новую строку в таблицу book.
	текстовые значения (тип VARCHAR) заключать либо в двойные, либо в одинарные кавычки:
	book_id                         title               author          price           amount
	INT PRIMARY KEY AUTO_INCREMENT  VARCHAR(50)         VARCHAR(30)     DECIMAL(8,2)    INT
	1                               Мастер и Маргарита  Булгаков М.А.   670.99          3
	Decision:
	mysql> INSERT INTO book (title, author, price, amount)
	    -> VALUES ('Мастер и Маргарита', 'Булгаков М.А.', '670.99', '3');
	    Query OK, 1 row affected (0.09 sec)
	mysql> SELECT * FROM book;
	    +---------+------------------------------------+-------------------------+--------+--------+
	    | book_id | title                              | author                  | price  | amount |
	    +---------+------------------------------------+-------------------------+--------+--------+
	    |       1 | Мастер и Маргарита                 | Булгаков М.А.           | 670.99 |      3 |
	    +---------+------------------------------------+-------------------------+--------+--------+
	    1 row in set (0.00 sec)
	Task:
	Занесите три последние записи в таблицу book.
	book_id                         title   author  price   amount
	INT PRIMARY KEY AUTO_INCREMENT  VARCHAR(50)             VARCHAR(30)         DECIMAL(8,2)    INT
	1                               Мастер и Маргарита      Булгаков М.А.       670.99          3
	2                               Белая гвардия           Булгаков М.А.       540.50          5
	3                               Идиот                   Достоевский Ф.М.    460.00          10
	4                               Братья Карамазовы       Достоевский Ф.М.    799.01          2
	Decision:
	mysql> INSERT INTO book (title, author, price, amount) VALUES ('Белая гвардия', 'Булгаков М.А.', 540.50, 5),
	    -> ('Идиот', 'Достоевский Ф.М.', 460.00, 10),
	    -> ('Братья Карамазовы', 'Достоевский Ф.М.', 799.01, 2);
	    Query OK, 3 rows affected (0.14 sec)
	    Records: 3  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM book;
	    +---------+------------------------------------+-------------------------------+--------+--------+
	    | book_id | title                              | author                        | price  | amount |
	    +---------+------------------------------------+-------------------------------+--------+--------+
	    |       1 | Мастер и Маргарита                 | Булгаков М.А.                 | 670.99 |      3 |
	    |       2 | Белая гвардия                      | Булгаков М.А.                 | 540.50 |      5 |
	    |       3 | Идиот                              | Достоевский Ф.М.              | 460.00 |     10 |
	    |       4 | Братья Карамазовы                  | Достоевский Ф.М.              | 799.01 |      2 |
	    +---------+------------------------------------+-------------------------------+--------+--------+
	    4 rows in set (0.00 sec)
	Task:
	Вывести информацию о всех книгах, хранящихся на складе.
	Decision:
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    | book_id | title                                    | author                        | price  | amount |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    |       1 | Мастер и Маргарита                       | Булгаков М.А.                 | 670.99 |      3 |
	    |       2 | Белая гвардия                            | Булгаков М.А.                 | 540.50 |      5 |
	    |       3 | Идиот                                    | Достоевский Ф.М.              | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        | Достоевский Ф.М.              | 799.01 |      2 |
	    |       5 | Стихотворение и поэмы                    | Есенин С.А.                   | 650.00 |     15 |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    5 rows in set (0.01 sec)
	Task:
	Выбрать авторов, название книг и их цену из таблицы book.
	Decision:
	mysql> SELECT author, title, price FROM book;
	    +-------------------------------+------------------------------------------+--------+
	    | author                        | title                                    | price  |
	    +-------------------------------+------------------------------------------+--------+
	    | Булгаков М.А.                 | Мастер и Маргарита                       | 670.99 |
	    | Булгаков М.А.                 | Белая гвардия                            | 540.50 |
	    | Достоевский Ф.М.              | Идиот                                    | 460.00 |
	    | Достоевский Ф.М.              | Братья Карамазовы                        | 799.01 |
	    | Есенин С.А.                   | Стихотворение и поэмы                    | 650.00 |
	    +-------------------------------+------------------------------------------+--------+
	    5 rows in set (0.00 sec)
	Task:
	Выбрать названия книг и авторов из таблицы book, для поля title задать имя(псевдоним) Название, для поля author –  Автор.
	Decision:
	mysql> SELECT title AS Название, author AS Автор FROM book;
	    +------------------------------------------+-------------------------------+
	    | Название                                 | Автор                         |
	    +------------------------------------------+-------------------------------+
	    | Мастер и Маргарита                       | Булгаков М.А.                 |
	    | Белая гвардия                            | Булгаков М.А.                 |
	    | Идиот                                    | Достоевский Ф.М.              |
	    | Братья Карамазовы                        | Достоевский Ф.М.              |
	    | Стихотворение и поэмы                    | Есенин С.А.                   |
	    +------------------------------------------+-------------------------------+
	    5 rows in set (0.00 sec)
	Task:
	Для упаковки каждой книги требуется один лист бумаги, цена которого 1 рубль 65 копеек. Посчитать стоимость упаковки для каждой книги (сколько денег потребуется, чтобы упаковать все экземпляры книги). В запросе вывести название книги, ее количество и стоимость упаковки, последний столбец назвать pack.
	Decision:
	mysql> SELECT title, amount, amount*1.65 AS pack FROM book;
	    +------------------------------------------+--------+-------+
	    | title                                    | amount | pack  |
	    +------------------------------------------+--------+-------+
	    | Мастер и Маргарита                       |      3 |  4.95 |
	    | Белая гвардия                            |      5 |  8.25 |
	    | Идиот                                    |     10 | 16.50 |
	    | Братья Карамазовы                        |      2 |  3.30 |
	    | Стихотворение и поэмы                    |     15 | 24.75 |
	    +------------------------------------------+--------+-------+
	    5 rows in set (0.00 sec)
	Task:
	В конце года цену всех книг на складе пересчитывают – снижают ее на 30%. Написать SQL запрос, который из таблицы book выбирает названия, авторов, количества и вычисляет новые цены книг. Столбец с новой ценой назвать new_price, цену округлить до 2-х знаков после запятой.
	Decision:
	mysql> SELECT title, author, amount, ROUND(price*0.7,2) AS new_price FROM book;
	    +------------------------------------------+-------------------------------+--------+-----------+
	    | title                                    | author                        | amount | new_price |
	    +------------------------------------------+-------------------------------+--------+-----------+
	    | Мастер и Маргарита                       | Булгаков М.А.                 |      3 |    469.69 |
	    | Белая гвардия                            | Булгаков М.А.                 |      5 |    378.35 |
	    | Идиот                                    | Достоевский Ф.М.              |     10 |    322.00 |
	    | Братья Карамазовы                        | Достоевский Ф.М.              |      2 |    559.31 |
	    | Стихотворение и поэмы                    | Есенин С.А.                   |     15 |    455.00 |
	    +------------------------------------------+-------------------------------+--------+-----------+
	    5 rows in set (0.01 sec)
	Task:
	Для каждой книги из таблицы book установим скидку следующим образом: если количество книг меньше 4, то скидка будет составлять 50% от цены, в противном случае 30%.
	Decision:
	SELECT title, amount, price,
	    IF(amount<4, price*0.5, price*0.7) AS sale
	FROM book;
	+-----------------------+--------+--------+---------+
	| title                 | amount | price  | sale    |
	+-----------------------+--------+--------+---------+
	| Мастер и Маргарита    | 3      | 670.99 | 335.495 |
	| Белая гвардия         | 5      | 540.50 | 378.350 |
	| Идиот                 | 10     | 460.00 | 322.000 |
	| Братья Карамазовы     | 2      | 799.01 | 399.505 |
	| Стихотворения и поэмы | 15     | 650.00 | 455.000 |
	+-----------------------+--------+--------+---------+
	Task:
	Цена по скидке должна отображаться с двумя знаками после запятой, добавим в запрос округление:
	Decision:
	SELECT title, amount, price,
	    ROUND(IF(amount<4, price*0.5, price*0.7),2) AS sale
	FROM book;
	+-----------------------+--------+--------+--------+
	| title                 | amount | price  | sale   |
	+-----------------------+--------+--------+--------+
	| Мастер и Маргарита    | 3      | 670.99 | 335.50 |
	| Белая гвардия         | 5      | 540.50 | 378.35 |
	| Идиот                 | 10     | 460.00 | 322.00 |
	| Братья Карамазовы     | 2      | 799.01 | 399.51 |
	| Стихотворения и поэмы | 15     | 650.00 | 455.00 |
	+-----------------------+--------+--------+--------+
	Task:
	При анализе продаж книг выяснилось, что наибольшей популярностью пользуются книги Михаила Булгакова, на втором месте книги Сергея Есенина. Исходя из этого решили поднять цену книг Булгакова на 10%, а цену книг Есенина - на 5%. Написать запрос, куда включить автора, название книги и новую цену, последний столбец назвать new_price. Значение округлить до двух знаков после запятой.
	Decision:
	mysql> SELECT author, title,
	    -> ROUND(
	    -> IF(author='Булгаков М.А.', price*1.1,
	    -> IF(author='Есенин С.А.', price*1.05, price)
	    -> ),2) AS new_price
	    -> FROM book;
	    +-------------------------------+------------------------------------------+-----------+
	    | author                        | title                                    | new_price |
	    +-------------------------------+------------------------------------------+-----------+
	    | Булгаков М.А.                 | Мастер и Маргарита                       |    738.09 |
	    | Булгаков М.А.                 | Белая гвардия                            |    594.55 |
	    | Достоевский Ф.М.              | Идиот                                    |    460.00 |
	    | Достоевский Ф.М.              | Братья Карамазовы                        |    799.01 |
	    | Есенин С.А.                   | Стихотворение и поэмы                    |    682.50 |
	    +-------------------------------+------------------------------------------+-----------+
	    5 rows in set (0.00 sec)
	mysql> SELECT author, title,
	    -> ROUND
	    ->     (CASE
	    ->         WHEN author = 'Булгаков М.А.' THEN price*1.1
	    ->         WHEN author = 'Есенин С.А.' THEN price*1.05
	    ->             ELSE price END,2)
	    ->     AS new_price
	    -> FROM book;
	    +-------------------------------+------------------------------------------+-----------+
	    | author                        | title                                    | new_price |
	    +-------------------------------+------------------------------------------+-----------+
	    | Булгаков М.А.                 | Мастер и Маргарита                       |    738.09 |
	    | Булгаков М.А.                 | Белая гвардия                            |    594.55 |
	    | Достоевский Ф.М.              | Идиот                                    |    460.00 |
	    | Достоевский Ф.М.              | Братья Карамазовы                        |    799.01 |
	    | Есенин С.А.                   | Стихотворение и поэмы                    |    682.50 |
	    +-------------------------------+------------------------------------------+-----------+
	    5 rows in set (0.00 sec)
	Task:
	Вывести автора, название  и цены тех книг, количество которых меньше 10.
	Decision:
	mysql> SELECT author, title, price FROM book WHERE amount<10;
	    +-------------------------------+------------------------------------+--------+
	    | author                        | title                              | price  |
	    +-------------------------------+------------------------------------+--------+
	    | Булгаков М.А.                 | Мастер и Маргарита                 | 670.99 |
	    | Булгаков М.А.                 | Белая гвардия                      | 540.50 |
	    | Достоевский Ф.М.              | Братья Карамазовы                  | 799.01 |
	    +-------------------------------+------------------------------------+--------+
	    3 rows in set (0.00 sec)
	Task:
	Вывести название, автора,  цену  и количество всех книг, цена которых меньше 500 или больше 600, а стоимость всех экземпляров этих книг больше или равна 5000.
	Decision:
	mysql> SELECT title, author, price, amount FROM book
	    -> WHERE (price<500 OR price>600) AND (price*amount >= 5000);
	    +------------------------------------------+---------------------+--------+--------+
	    | title                                    | author              | price  | amount |
	    +------------------------------------------+---------------------+--------+--------+
	    | Стихотворение и поэмы                    | Есенин С.А.         | 650.00 |     15 |
	    +------------------------------------------+---------------------+--------+--------+
	    1 row in set (0.00 sec)
	Task:
	Вывести название и авторов тех книг, цены которых принадлежат интервалу от 540.50 до 800 (включая границы),  а количество или 2, или 3, или 5, или 7
	Decision:
	mysql> SELECT title, author
	    -> FROM book
	    -> WHERE (price BETWEEN 540.50 AND 800) AND (amount IN (2,3,5,7));
	    +------------------------------------+-------------------------------+
	    | title                              | author                        |
	    +------------------------------------+-------------------------------+
	    | Мастер и Маргарита                 | Булгаков М.А.                 |
	    | Белая гвардия                      | Булгаков М.А.                 |
	    | Братья Карамазовы                  | Достоевский Ф.М.              |
	    +------------------------------------+-------------------------------+
	    3 rows in set (0.00 sec)
	Task:
	Вывести  автора и название  книг, количество которых принадлежит интервалу от 2 до 14 (включая границы). Информацию  отсортировать сначала по авторам (в обратном алфавитном порядке), а затем по названиям книг (по алфавиту).
	Decision:
	mysql> SELECT author, title  FROM book WHERE amount BETWEEN 2 AND 14 ORDER BY author DESC, title;
	    +-------------------------------+------------------------------------+
	    | author                        | title                              |
	    +-------------------------------+------------------------------------+
	    | Достоевский Ф.М.              | Братья Карамазовы                  |
	    | Достоевский Ф.М.              | Идиот                              |
	    | Булгаков М.А.                 | Белая гвардия                      |
	    | Булгаков М.А.                 | Мастер и Маргарита                 |
	    +-------------------------------+------------------------------------+
	    4 rows in set (0.00 sec)
	Task:
	Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания, между фамилией автора и инициалами обязателен пробел, инициалы записываются без пробела в формате: буква, точка, буква, точка. Информацию отсортировать по названию книги в алфавитном порядке.
	Decision:
	mysql> INSERT INTO book (title, author, price, amount) VALUES ('', 'Иванов С.С.', 50.00, 10),
	    -> ('Дети полуночи', 'Рушди Салман', 950.00, 5),
	    -> ('Лирика', 'Гумилев Н.С.', 460.00, 10),
	    -> ('Поэмы', 'Бехтерев С.С.', 460.00, 10),
	    -> ('Капитанская дочка', 'Пушкин А.С.', 520.50, 7);
	    Query OK, 5 rows affected (0.05 sec)
	    Records: 5  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    | book_id | title                                    | author                        | price  | amount |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    |       1 | Мастер и Маргарита                       | Булгаков М.А.                 | 670.99 |      3 |
	    |       2 | Белая гвардия                            | Булгаков М.А.                 | 540.50 |      5 |
	    |       3 | Идиот                                    | Достоевский Ф.М.              | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        | Достоевский Ф.М.              | 799.01 |      2 |
	    |       5 | Стихотворение и поэмы                    | Есенин С.А.                   | 650.00 |     15 |
	    |       6 |                                          | Иванов С.С.                   |  50.00 |     10 |
	    |       7 | Дети полуночи                            | Рушди Салман                  | 950.00 |      5 |
	    |       8 | Лирика                                   | Гумилев Н.С.                  | 460.00 |     10 |
	    |       9 | Поэмы                                    | Бехтерев С.С.                 | 460.00 |     10 |
	    |      10 | Капитанская дочка                        | Пушкин А.С.                   | 520.50 |      7 |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    10 rows in set (0.00 sec)
	mysql> SELECT title, author
	    -> FROM book
	    -> WHERE title LtuserE "%_ %"
	    -> AND author LtuserE "%С.%"
	    -> ORDER BY title;
	    +------------------------------------------+---------------------+
	    | title                                    | author              |
	    +------------------------------------------+---------------------+
	    | Капитанская дочка                        | Пушкин А.С.         |
	    | Стихотворение и поэмы                    | Есенин С.А.         |
	    +------------------------------------------+---------------------+
	    2 rows in set (0.00 sec)
	    +------------------------------------------+---------------------+
	    | title                                    | author              |
	    +------------------------------------------+---------------------+
	    | Капитанская дочка                        | Пушкин А.С.         |
	    | Стихотворение и поэмы                    | Есенин С.А.         |
	    +------------------------------------------+---------------------+
	    2 rows in set (0.00 sec)
	Task:
	Отобрать различные (уникальные) элементы столбца amount таблицы book.
	Decision:
	mysql> SELECT DISTINCT amount
	    -> FROM book;
	    +--------+
	    | amount |
	    +--------+
	    |      3 |
	    |      5 |
	    |     10 |
	    |      2 |
	    |     15 |
	    +--------+
	    5 rows in set (0.00 sec)
	Task:
	Посчитать, количество различных книг и количество экземпляров книг каждого автора , хранящихся на складе.  Столбцы назвать Автор, Различных_книг и Количество_экземпляров соответственно.
	Decision:
	mysql> SELECT  author AS Автор,  COUNT(title) AS Различных_книг,  SUM(amount) AS Количество_экземпляров  FROM book  GROUP BY author;
	    +-------------------------------+-----------------------------+---------------------------------------------+
	    | Автор                         | Различных_книг              | Количество_экземпляров                      |
	    +-------------------------------+-----------------------------+---------------------------------------------+
	    | Булгаков М.А.                 |                           2 |                                           8 |
	    | Достоевский Ф.М.              |                           3 |                                          22 |
	    | Есенин С.А.                   |                           1 |                                          15 |
	    +-------------------------------+-----------------------------+---------------------------------------------+
	    3 rows in set (0.00 sec)
	Task:
	Вывести фамилию автора, минимальную, максимальную и среднюю цену книг каждого автора . Вычисляемые столбцы назвать Минимальная_цена, Максимальная_цена и Средняя_цена соответственно.
	Decision:
	mysql> SELECT author, MIN(price) AS Минимальная_цена, MAX(price) AS Максимальная_цена, AVG(price) AS Средняя_цена
	    -> FROM book
	    -> GROUP BY author;
	    +-------------------------------+---------------------------------+-----------------------------------+-------------------------+
	    | author                        | Минимальная_цена                | Максимальная_цена                 | Средняя_цена            |
	    +-------------------------------+---------------------------------+-----------------------------------+-------------------------+
	    | Булгаков М.А.                 |                          540.50 |                            670.99 |              605.745000 |
	    | Достоевский Ф.М.              |                          460.00 |                            799.01 |              579.836667 |
	    | Есенин С.А.                   |                          650.00 |                            650.00 |              650.000000 |
	    +-------------------------------+---------------------------------+-----------------------------------+-------------------------+
	    3 rows in set (0.01 sec)
	Task:
	Для каждого автора вычислить суммарную стоимость книг S (имя столбца Стоимость), а также вычислить налог на добавленную стоимость  для полученных сумм (имя столбца НДС ) , который включен в стоимость и составляет k = 18%,  а также стоимость книг  (Стоимость_без_НДС) без него. Значения округлить до двух знаков после запятой.
	Decision:
	mysql> SELECT
	    -> author,
	    -> ROUND(SUM(price * amount),2) AS Стоимость,
	    -> ROUND(SUM(price * amount*18/100)/(1+18/100),2) AS НДС,
	    -> ROUND(SUM(price * amount/(1+18/100)),2) AS Стоимость_без_НДС
	    -> FROM book
	    -> GROUP BY author;
	    +-------------------------------+--------------------+---------+----------------------------------+
	    | author                        | Стоимость          | НДС     | Стоимость_без_НДС                |
	    +-------------------------------+--------------------+---------+----------------------------------+
	    | Булгаков М.А.                 |            4715.47 |  719.31 |                          3996.16 |
	    | Достоевский Ф.М.              |           11003.02 | 1678.43 |                          9324.59 |
	    | Есенин С.А.                   |            9750.00 | 1487.29 |                          8262.71 |
	    +-------------------------------+--------------------+---------+----------------------------------+
	    3 rows in set (0.01 sec)
	Task:
	Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену книг на складе. Названия столбцов Минимальная_цена, Максимальная_цена, Средняя_цена соответственно. Среднюю цену округлить до двух знаков после запятой.
	Decision:
	mysql> SELECT MIN(price) AS Минимальная_цена, MAX(price) AS Максимальная_цена, ROUND(AVG(price),2) AS Средняя_цена FROM book;
	    +---------------------------------+-----------------------------------+-------------------------+
	    | Минимальная_цена                | Максимальная_цена                 | Средняя_цена            |
	    +---------------------------------+-----------------------------------+-------------------------+
	    |                          460.00 |                            799.01 |                  600.17 |
	    +---------------------------------+-----------------------------------+-------------------------+
	    1 row in set (0.00 sec)   
	Task:
	Вычислить среднюю цену и суммарную стоимость тех книг, количество экземпляров которых принадлежит интервалу от 5 до 14, включительно. Столбцы назвать Средняя_цена и Стоимость, значения округлить до 2-х знаков после запятой.
	Decision:
	mysql> SELECT
	    -> ROUND(AVG(price), 2) AS Средняя_цена,
	    -> ROUND(SUM(price * amount), 2) AS Стоимость
	    -> FROM book
	    -> WHERE amount BETWEEN 5 AND 14
	    -> HAVING SUM(price * amount);
	    +-------------------------+--------------------+
	    | Средняя_цена            | Стоимость          |
	    +-------------------------+--------------------+
	    |                  493.67 |           12107.50 |
	    +-------------------------+--------------------+
	    1 row in set (0.01 sec)
	Task:
	Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». В результат включить только тех авторов, у которых суммарная стоимость книг более 5000 руб. Вычисляемый столбец назвать Стоимость. Результат отсортировать по убыванию стоимости.
	Decision:
	mysql> SELECT author, SUM(amount*price) AS Стоимость
	    -> FROM book
	    -> WHERE title <> 'Идиот' AND title <> 'Белая гвардия'
	    -> GROUP BY author
	    -> HAVING SUM(amount*price) > 5000
	    -> ORDER BY 2 DESC;
	    +-------------------------------+--------------------+
	    | author                        | Стоимость          |
	    +-------------------------------+--------------------+
	    | Есенин С.А.                   |            9750.00 |
	    | Достоевский Ф.М.              |            6403.02 |
	    +-------------------------------+--------------------+
	    2 rows in set (0.00 sec)
	Task:
	Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги.
	Decision:
	SELECT author, title, price
	FROM book
	WHERE price<=(
	    SELECT AVG(price)
	    FROM book
	) ORDER BY price DESC;
	    +------------------+---------------+--------+
	    | author           | title         | price  |
	    +------------------+---------------+--------+
	    | Булгаков М.А.    | Белая гвардия | 540.50 |
	    | Достоевский Ф.М. | Игрок         | 480.50 |
	    | Достоевский Ф.М. | Идиот         | 460.00 |
	    +------------------+---------------+--------+
	Task:
	Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.
	Decision:
	SELECT author, title, price
	FROM book
	WHERE price<=(
	    SELECT MIN(price)
	    FROM book
	) +150 ORDER BY price ASC;
	    +------------------+----------------+--------+
	    | author           | title          | price  |
	    +------------------+----------------+--------+
	    | Достоевский Ф.М. | Идиот          | 460.00 |
	    | Достоевский Ф.М. | Игрок          | 480.50 |
	    | Булгаков М.А.    | Белая гвардия  | 540.50 |
	    | Пушкин А.С.      | Евгений Онегин | 610.00 |
	    +------------------+----------------+--------+
	Task:
	Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется.
	Decision:
	SELECT author, title, amount
	FROM book
	WHERE amount IN(
	    SELECT amount
	    FROM book
	    GROUP BY amount
	    HAVING count(amount) = 1
	);
	    +---------------+-----------------------+--------+
	    | author        | title                 | amount |
	    +---------------+-----------------------+--------+
	    | Булгаков М.А. | Белая гвардия         | 5      |
	    | Есенин С.А.   | Стихотворения и поэмы | 15     |
	    +---------------+-----------------------+--------+
	Task:
	Вывести информацию о книгах(автор, название, цена), цена которых меньше самой большой из минимальных цен, вычисленных для каждого автора
	Decision:
	SELECT author, title, price
	FROM book
	WHERE price < ANY(
	    SELECT MIN(price)
	    FROM book
	    GROUP BY author
	);
	    +------------------+---------------+--------+
	    | author           | title         | price  |
	    +------------------+---------------+--------+
	    | Булгаков М.А.    | Белая гвардия | 540.50 |
	    | Достоевский Ф.М. | Идиот         | 460.00 |
	    | Достоевский Ф.М. | Игрок         | 480.50 |
	    +------------------+---------------+--------+
	Task:
	Посчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров каждой книги, равное значению самого большего количества экземпляров одной книги на складе. Вывести название книги, ее автора, текущее количество экземпляров на складе и количество заказываемых экземпляров книг. Последнему столбцу присвоить имя Заказ.
	Decision:
	SELECT title, author, amount,
	      ABS(((SELECT MAX(amount) FROM book)-amount)) AS 'Заказ'
	FROM book
	WHERE amount  NOT IN (SELECT MAX(amount) FROM book);
	    +-----------------------+------------------+--------+--------------------+
	    | title                 | author           | amount | Среднее_количество |
	    +-----------------------+------------------+--------+--------------------+
	    | Мастер и Маргарита    | Булгаков М.А.    | 3      | 7                  |
	    | Братья Карамазовы     | Достоевский Ф.М. | 3      | 7                  |
	    | Стихотворения и поэмы | Есенин С.А.      | 15     | 7                  |
	    +-----------------------+------------------+--------+--------------------+
	Task:
	Создать таблицу поставка (supply), которая имеет структуру:
	Поле    Тип, описание
	supply_id   INT PRIMARY KEY AUTO_INCREMENT
	title   VARCHAR(50)
	author  VARCHAR(30)
	price   DECIMAL(8, 2)
	amount  INT
	Decision:
	mysql> CREATE TABLE supply (
	    -> supply_id INT PRIMARY KEY AUTO_INCREMENT,
	    -> title VARCHAR(50),
	    -> author VARCHAR(30),
	    -> price DECIMAL(8,2),
	    -> amount INT
	    -> );
	    Query OK, 0 rows affected (0.42 sec)
	mysql> SELECT * FROM supply;
	    Empty set (0.00 sec)
	Task:
	Занесите в таблицу supply четыре записи, чтобы получилась следующая таблица
	supply_id   title   author  price   amount
	1   Лирика  Пастернак Б.Л.  518.99  2
	2   Черный человек      Есенин С.А.     570.20  6
	3   Белая гвардия   Булгаков М.А.   540.50  7
	4   Идиот   Достоевский Ф.М.    360.80  3
	Decision:
	mysql> INSERT INTO supply (title, author, price, amount)  VALUES ('Лирика', 'Пастернак Б.Л.', 518.99, 2), ('Черный человек', 'Есенин С.А.', 570.20, 6), ('Белая гвардия', 'Булгаков М.А.', 540.50, 7),
	    -> ('Идиот', 'Достоевский Ф.М.', 360.80, 3);
	    Query OK, 4 rows affected (0.18 sec)
	    Records: 4  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM supply;
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    | supply_id | title                       | author                        | price  | amount |
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    |         1 | Лирика                      | Пастернак Б.Л.                | 518.99 |      2 |
	    |         2 | Черный человек              | Есенин С.А.                   | 570.20 |      6 |
	    |         3 | Белая гвардия               | Булгаков М.А.                 | 540.50 |      7 |
	    |         4 | Идиот                       | Достоевский Ф.М.              | 360.80 |      3 |
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    4 rows in set (0.00 sec)
	Task:
	Добавить из таблицы supply в таблицу book, все книги, кроме книг, написанных Булгаковым М.А. и Достоевским Ф.М.
	Decision:
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    | book_id | title                                    | author                        | price  | amount |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    |       1 | Мастер и Маргарита                       | Булгаков М.А.                 | 670.99 |      3 |
	    |       2 | Белая гвардия                            | Булгаков М.А.                 | 540.50 |      5 |
	    |       3 | Идиот                                    | Достоевский Ф.М.              | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        | Достоевский Ф.М.              | 799.01 |      2 |
	    |       5 | Игрок                                    | Достоевский Ф.М.              | 480.50 |     10 |
	    |       6 | Стихотворения и поэмы                    | Есенин С.А.                   | 650.00 |     15 |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    6 rows in set (0.00 sec)
	mysql> SELECT * FROM supply;
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    | supply_id | title                       | author                        | price  | amount |
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    |         1 | Лирика                      | Пастернак Б.Л.                | 518.99 |      2 |
	    |         2 | Черный человек              | Есенин С.А.                   | 570.20 |      6 |
	    |         3 | Белая гвардия               | Булгаков М.А.                 | 540.50 |      7 |
	    |         4 | Идиот                       | Достоевский Ф.М.              | 360.80 |      3 |
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    4 rows in set (0.00 sec)
	mysql> INSERT INTO book (title, author, price, amount)
	    -> SELECT title, author, price, amount
	    -> FROM supply
	    -> where (author != 'Булгаков М.А.') and (author !='Достоевский Ф.М.');
	    Query OK, 2 rows affected (0.12 sec)
	    Records: 2  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    | book_id | title                                    | author                        | price  | amount |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    |       1 | Мастер и Маргарита                       | Булгаков М.А.                 | 670.99 |      3 |
	    |       2 | Белая гвардия                            | Булгаков М.А.                 | 540.50 |      5 |
	    |       3 | Идиот                                    | Достоевский Ф.М.              | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        | Достоевский Ф.М.              | 799.01 |      2 |
	    |       5 | Игрок                                    | Достоевский Ф.М.              | 480.50 |     10 |
	    |       6 | Стихотворения и поэмы                    | Есенин С.А.                   | 650.00 |     15 |
	    |      17 | Лирика                                   | Пастернак Б.Л.                | 518.99 |      2 |
	    |      18 | Черный человек                           | Есенин С.А.                   | 570.20 |      6 |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    8 rows in set (0.01 sec)
	Task:
	Занести из таблицы supply в таблицу book только те книги, авторов которых нет в book.
	Decision:
	mysql> INSERT INTO book (title, author, price, amount)
	    -> SELECT title, author, price, amount
	    -> FROM supply
	    -> WHERE author NOT IN (
	    -> SELECT author
	    -> FROM book
	    -> );
	    Query OK, 0 rows affected (0.02 sec)
	    Records: 0  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    | book_id | title                                    | author                        | price  | amount |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    |       1 | Мастер и Маргарита                       | Булгаков М.А.                 | 670.99 |      3 |
	    |       2 | Белая гвардия                            | Булгаков М.А.                 | 540.50 |      5 |
	    |       3 | Идиот                                    | Достоевский Ф.М.              | 460.00 |     10 |
	    |       4 | Братья Карамазовы                        | Достоевский Ф.М.              | 799.01 |      2 |
	    |       5 | Игрок                                    | Достоевский Ф.М.              | 480.50 |     10 |
	    |       6 | Стихотворения и поэмы                    | Есенин С.А.                   | 650.00 |     15 |
	    |      17 | Лирика                                   | Пастернак Б.Л.                | 518.99 |      2 |
	    |      18 | Черный человек                           | Есенин С.А.                   | 570.20 |      6 |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    8 rows in set (0.00 sec)
	Task:
	Уменьшить на 10% цену тех книг в таблице book, количество которых принадлежит интервалу от 5 до 10, включая границы.
	Decision:
	mysql> UPDATE book  SET price = 0.9 * price  WHERE amount BETWEEN 5 AND 10;
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    | book_id | title                                    | author                        | price  | amount |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    |       1 | Мастер и Маргарита                       | Булгаков М.А.                 | 670.99 |      3 |
	    |       2 | Белая гвардия                            | Булгаков М.А.                 | 486.45 |      5 |
	    |       3 | Идиот                                    | Достоевский Ф.М.              | 414.00 |     10 |
	    |       4 | Братья Карамазовы                        | Достоевский Ф.М.              | 799.01 |      2 |
	    |       5 | Игрок                                    | Достоевский Ф.М.              | 432.45 |     10 |
	    |       6 | Стихотворения и поэмы                    | Есенин С.А.                   | 650.00 |     15 |
	    |      17 | Лирика                                   | Пастернак Б.Л.                | 518.99 |      2 |
	    |      18 | Черный человек                           | Есенин С.А.                   | 513.18 |      6 |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    8 rows in set (0.00 sec)
	Task:
	В таблице book необходимо скорректировать значение для покупателя в столбце buy таким образом, чтобы оно не превышало количество экземпляров книг, указанных в столбце amount. А цену тех книг, которые покупатель не заказывал, снизить на 10%.
	Decision:
	mysql> update book
	set buy = if(buy>amount,amount,buy),
	price = if(buy=0, price * 0.9, price);
	mysql> SELECT * FROM book;
	    +---------+-----------------------+------------------+--------+--------+-----+
	    | book_id | title                 | author           | price  | amount | buy |
	    +---------+-----------------------+------------------+--------+--------+-----+
	    | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      | 0   |
	    | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      | 3   |
	    | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     | 8   |
	    | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      | 0   |
	    | 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     | 18  |
	    +---------+-----------------------+------------------+--------+--------+-----+
	Task:
	Для тех книг в таблице book , которые есть в таблице supply, не только увеличить их количество в таблице book ( увеличить их количество на значение столбца amount таблицы supply), но и пересчитать их цену (для каждой книги найти сумму цен из таблиц book и supply и разделить на 2).
	Decision:
	mysql> UPDATE book, supply
	    -> SET book.price = (book.price + supply.price)/2, book.amount = book.amount + supply.amount
	    -> WHERE book.title = supply.title AND book.author = supply.author;
	    Query OK, 4 rows affected, 1 warning (0.05 sec)
	    Rows matched: 4  Changed: 4  Warnings: 1
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    | book_id | title                                    | author                        | price  | amount |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    |       1 | Мастер и Маргарита                       | Булгаков М.А.                 | 670.99 |      3 |
	    |       2 | Белая гвардия                            | Булгаков М.А.                 | 513.48 |     12 |
	    |       3 | Идиот                                    | Достоевский Ф.М.              | 387.40 |     13 |
	    |       4 | Братья Карамазовы                        | Достоевский Ф.М.              | 799.01 |      2 |
	    |       5 | Игрок                                    | Достоевский Ф.М.              | 432.45 |     10 |
	    |       6 | Стихотворения и поэмы                    | Есенин С.А.                   | 650.00 |     15 |
	    |      17 | Лирика                                   | Пастернак Б.Л.                | 518.99 |      4 |
	    |      18 | Черный человек                           | Есенин С.А.                   | 541.69 |     12 |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    8 rows in set (0.00 sec)
	Task:
	Удалить из таблицы supply книги тех авторов, общее количество экземпляров книг которых в таблице book превышает 10.
	Decision:
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    | book_id | title                                    | author                        | price  | amount |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    |       1 | Мастер и Маргарита                       | Булгаков М.А.                 | 670.99 |      3 |
	    |       2 | Белая гвардия                            | Булгаков М.А.                 | 513.48 |     12 |
	    |       3 | Идиот                                    | Достоевский Ф.М.              | 387.40 |     13 |
	    |       4 | Братья Карамазовы                        | Достоевский Ф.М.              | 799.01 |      2 |
	    |       5 | Игрок                                    | Достоевский Ф.М.              | 432.45 |     10 |
	    |       6 | Стихотворения и поэмы                    | Есенин С.А.                   | 650.00 |     15 |
	    |      17 | Лирика                                   | Пастернак Б.Л.                | 518.99 |      4 |
	    |      18 | Черный человек                           | Есенин С.А.                   | 541.69 |     12 |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT * FROM supply;
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    | supply_id | title                       | author                        | price  | amount |
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    |         1 | Лирика                      | Пастернак Б.Л.                | 518.99 |      2 |
	    |         2 | Черный человек              | Есенин С.А.                   | 570.20 |      6 |
	    |         3 | Белая гвардия               | Булгаков М.А.                 | 540.50 |      7 |
	    |         4 | Идиот                       | Достоевский Ф.М.              | 360.80 |      3 |
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    4 rows in set (0.00 sec)
	mysql> DELETE FROM supply
	    -> WHERE author IN(SELECT author FROM book
	    -> GROUP BY author HAVING SUM(amount)>10);
	    Query OK, 3 rows affected (0.02 sec)
	mysql> SELECT * FROM supply;
	    +-----------+--------------+---------------------------+--------+--------+
	    | supply_id | title        | author                    | price  | amount |
	    +-----------+--------------+---------------------------+--------+--------+
	    |         1 | Лирика       | Пастернак Б.Л.            | 518.99 |      2 |
	    +-----------+--------------+---------------------------+--------+--------+
	    1 row in set (0.00 sec)
	Task:
	Создать таблицу заказ (ordering), куда включить авторов и названия тех книг, количество экземпляров которых в таблице book меньше среднего количества экземпляров книг в таблице book. В таблицу включить столбец   amount, в котором для всех книг указать одинаковое значение - среднее количество экземпляров книг в таблице book.
	Decision:
	mysql> Select * from supply;
	    +-----------+--------------+---------------------------+--------+--------+
	    | supply_id | title        | author                    | price  | amount |
	    +-----------+--------------+---------------------------+--------+--------+
	    |         1 | Лирика       | Пастернак Б.Л.            | 518.99 |      2 |
	    +-----------+--------------+---------------------------+--------+--------+
	    1 row in set (0.00 sec)
	mysql> SELECT * FROM book;
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    | book_id | title                                    | author                        | price  | amount |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    |       1 | Мастер и Маргарита                       | Булгаков М.А.                 | 670.99 |      3 |
	    |       2 | Белая гвардия                            | Булгаков М.А.                 | 513.48 |     12 |
	    |       3 | Идиот                                    | Достоевский Ф.М.              | 387.40 |     13 |
	    |       4 | Братья Карамазовы                        | Достоевский Ф.М.              | 799.01 |      2 |
	    |       5 | Игрок                                    | Достоевский Ф.М.              | 432.45 |     10 |
	    |       6 | Стихотворения и поэмы                    | Есенин С.А.                   | 650.00 |     15 |
	    |      17 | Лирика                                   | Пастернак Б.Л.                | 518.99 |      4 |
	    |      18 | Черный человек                           | Есенин С.А.                   | 541.69 |     12 |
	    +---------+------------------------------------------+-------------------------------+--------+--------+
	    8 rows in set (0.01 sec)
	mysql> CREATE TABLE ordering AS
	    -> SELECT author, title,
	    -> (
	    -> SELECT ROUND(AVG(amount))
	    -> FROM book
	    -> ) AS amount
	    -> FROM book
	    -> WHERE amount < (SELECT AVG(amount) FROM book) ;
	    Query OK, 3 rows affected (0.23 sec)
	    Records: 3  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM ordering;
	    +-------------------------------+------------------------------------+--------+
	    | author                        | title                              | amount |
	    +-------------------------------+------------------------------------+--------+
	    | Булгаков М.А.                 | Мастер и Маргарита                 |      9 |
	    | Достоевский Ф.М.              | Братья Карамазовы                  |      9 |
	    | Пастернак Б.Л.                | Лирика                             |      9 |
	    +-------------------------------+------------------------------------+--------+
	    3 rows in set (0.00 sec)
	Task:
	Создать таблицу author следующей структуры:
	Поле            Тип, описание
	author_id       INT PRIMARY KEY AUTO_INCREMENT
	name_author     VARCHAR(50)
	Decision:
	mysql> CREATE TABLE author (
	author_id INT PRIMARY KEY AUTO_INCREMENT,
	name_author VARCHAR(50)
	);
	    Query OK, 0 rows affected (0.92 sec)
	Task:
	Заполнить таблицу author. В нее включить следующих авторов:
	Булгаков М.А.
	Достоевский Ф.М.
	Есенин С.А.
	Пастернак Б.Л
	Decision:
	mysql> INSERT INTO author (name_author)  VALUES ('Булгаков М.А.'),
	('Достоевский Ф.М.'),
	('Есенин С.А.'),
	('Пастернак Б.Л.');
	    Query OK, 4 rows affected (1.08 sec)
	    Records: 4  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    +-----------+-------------------------------+
	    4 rows in set (0.01 sec)
	Task:
	Создадим таблицу genre следующей структуры.
	Поле        Тип, описание
	genre_id    INT PRIMARY KEY AUTO_INCREMENT
	name_genre  VARCHAR(30)
	Decision:
	mysql> CREATE TABLE genre(     genre_id INT PRIMARY KEY AUTO_INCREMENT,      name_genre VARCHAR(30) );
	    Query OK, 0 rows affected (0.23 sec)
	Task:
	Вставим новую запись в таблицу genre
	В первых двух строках показана структура таблицы, далее - ее содержимое:
	genre_id                        name_genre
	INT PRIMARY KEY AUTO_INCREMENT  VARCHAR(30)
	1                               Роман
	Decision
	mysql> INSERT INTO genre (name_genre)
	    -> VALUES ('Роман');
	    Query OK, 1 row affected (0.06 sec)
	mysql> SELECT * FROM genre;
	    +----------+------------+
	    | genre_id | name_genre |
	    +----------+------------+
	    |        1 | Роман      |
	    +----------+------------+
	    1 row in set (0.00 sec)
	Task:
	Перепишите запрос на создание таблицы book , чтобы ее структура соответствовала структуре, показанной на логической схеме (таблица genre уже создана, порядок следования столбцов - как на логической схеме в таблице book, genre_id  - внешний ключ) . Для genre_id ограничение о недопустимости пустых значений не задавать. В качестве главной таблицы для описания поля  genre_idиспользовать таблицу genre следующей структуры:
	Поле        Тип, описание
	genre_id    INT PRIMARY KEY AUTO_INCREMENT
	name_genre  VARCHAR(30)
	Decision:
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    +-----------+-------------------------------+
	    4 rows in set (0.00 sec)
	mysql> SELECT * FROM genre;
	    +----------+------------+
	    | genre_id | name_genre |
	    +----------+------------+
	    |        1 | Роман      |
	    +----------+------------+
	    1 row in set (0.11 sec)
	mysql> CREATE TABLE book1 (
	book_id INT PRIMARY KEY AUTO_INCREMENT,
	title VARCHAR(50),
	author_id INT NOT NULL,
	genre_id INT,
	price DECIMAL(8,2),
	amount INT,
	FOREIGN KEY (author_id)  REFERENCES author (author_id),
	FOREIGN KEY (genre_id)  REFERENCES genre (genre_id)
	);
	    Query OK, 0 rows affected (0.33 sec)
	mysql> DESCRIBE book1;
	    +-----------+--------------+------+-----+---------+----------------+
	    | Field     | Type         | Null | Key | Default | Extra          |
	    +-----------+--------------+------+-----+---------+----------------+
	    | book_id   | int          | NO   | PRI | NULL    | auto_increment |
	    | title     | varchar(50)  | YES  |     | NULL    |                |
	    | author_id | int          | NO   | MUL | NULL    |                |
	    | genre_id  | int          | YES  | MUL | NULL    |                |
	    | price     | decimal(8,2) | YES  |     | NULL    |                |
	    | amount    | int          | YES  |     | NULL    |                |
	    +-----------+--------------+------+-----+---------+----------------+
	    6 rows in set (0.01 sec)
	mysql> SHOW COLUMNS FROM book1;
	    +-----------+--------------+------+-----+---------+----------------+
	    | Field     | Type         | Null | Key | Default | Extra          |
	    +-----------+--------------+------+-----+---------+----------------+
	    | book_id   | int          | NO   | PRI | NULL    | auto_increment |
	    | title     | varchar(50)  | YES  |     | NULL    |                |
	    | author_id | int          | NO   | MUL | NULL    |                |
	    | genre_id  | int          | YES  | MUL | NULL    |                |
	    | price     | decimal(8,2) | YES  |     | NULL    |                |
	    | amount    | int          | YES  |     | NULL    |                |
	    +-----------+--------------+------+-----+---------+----------------+
	    6 rows in set (0.01 sec)
	Task:
	Создать таблицу book той же структуры, что и на предыдущем шаге. Будем считать, что при удалении автора из таблицы author, должны удаляться все записи о книгах из таблицы book, написанные этим автором. А при удалении жанра из таблицы genre для соответствующей записи book установить значение Null в столбце genre_id.
	Decision:
	mysql> CREATE TABLE book2 (
	book_id INT PRIMARY KEY AUTO_INCREMENT,
	title VARCHAR(50),
	author_id INT NOT NULL,
	genre_id INT,
	price DECIMAL(8,2),
	amount INT,
	FOREIGN KEY (author_id)  REFERENCES author (author_id) ON DELETE CASCADE,
	FOREIGN KEY (genre_id)  REFERENCES genre (genre_id) ON DELETE SET NULL
	);
	    Query OK, 0 rows affected (0.28 sec)
	mysql> SHOW COLUMNS FROM book2;
	    +-----------+--------------+------+-----+---------+----------------+
	    | Field     | Type         | Null | Key | Default | Extra          |
	    +-----------+--------------+------+-----+---------+----------------+
	    | book_id   | int          | NO   | PRI | NULL    | auto_increment |
	    | title     | varchar(50)  | YES  |     | NULL    |                |
	    | author_id | int          | NO   | MUL | NULL    |                |
	    | genre_id  | int          | YES  | MUL | NULL    |                |
	    | price     | decimal(8,2) | YES  |     | NULL    |                |
	    | amount    | int          | YES  |     | NULL    |                |
	    +-----------+--------------+------+-----+---------+----------------+
	    6 rows in set (0.01 sec)
	Task:
	На предыдущих шагах были созданы и заполнены таблицы author:
	author_id   name_author
	1   Булгаков М.А.
	2   Достоевский Ф.М.
	3   Есенин С.А.
	4   Пастернак Б.Л.
	и  genre:
	genre_id    name_genre
	1   Роман
	2   Поэзия
	Добавьте три последние записи (с ключевыми значениями 6, 7, 8) в таблицу book:
	book_id     title           author_id   genre_id    price   amount
	1   Мастер и Маргарита      1           1   670.99  3
	2   Белая гвардия           1           1   540.50  5
	3   Идиот                   2           1   460.00  10
	4   Братья Карамазовы       2           1   799.01  3
	5   Игрок                   2           1   480.50  10
	6   Стихотворения и поэмы   3           2   650.00  15
	7   Черный человек          3           2   570.20  6
	8   Лирика                  4           2   518.99  2
	Decision:
	mysql> SELECT * FROM genre;
	    +----------+------------+
	    | genre_id | name_genre |
	    +----------+------------+
	    |        1 | Роман      |
	    +----------+------------+
	    1 row in set (0.00 sec)
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    +-----------+-------------------------------+
	    4 rows in set (0.00 sec)
	mysql> SHOW COLUMNS FROM book2;
	    +-----------+--------------+------+-----+---------+----------------+
	    | Field     | Type         | Null | Key | Default | Extra          |
	    +-----------+--------------+------+-----+---------+----------------+
	    | book_id   | int          | NO   | PRI | NULL    | auto_increment |
	    | title     | varchar(50)  | YES  |     | NULL    |                |
	    | author_id | int          | NO   | MUL | NULL    |                |
	    | genre_id  | int          | YES  | MUL | NULL    |                |
	    | price     | decimal(8,2) | YES  |     | NULL    |                |
	    | amount    | int          | YES  |     | NULL    |                |
	    +-----------+--------------+------+-----+---------+----------------+
	    6 rows in set (0.00 sec)
	mysql> INSERT INTO book2 (title, author_id, genre_id, price, amount) VALUES ('Мастер и Маргарита', 1, 1, 670.99, 3),('Белая гвардия', 1, 1, 540.50, 5),('Идиот', 2, 1, 460.00, 10),('Братья Карамазовы', 2, 1, 799.01, 3),('Игрок', 2, 1, 480.50, 10);
	    Query OK, 5 rows affected (0.12 sec)
	    Records: 5  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                              | author_id | genre_id | price  | amount |
	    +---------+------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                 |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                      |         1 |        1 | 540.50 |      5 |
	    |      11 | Идиот                              |         2 |        1 | 460.00 |     10 |
	    |      12 | Братья Карамазовы                  |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                              |         2 |        1 | 480.50 |     10 |
	    +---------+------------------------------------+-----------+----------+--------+--------+
	    5 rows in set (0.00 sec)
	mysql> INSERT INTO genre (name_genre) VALUES ('Поэзия');
	    Query OK, 1 row affected (0.08 sec)
	mysql> SELECT * FROM genre;
	    +----------+--------------+
	    | genre_id | name_genre   |
	    +----------+--------------+
	    |        1 | Роман        |
	    |        2 | Поэзия       |
	    +----------+--------------+
	    2 rows in set (0.00 sec)
	mysql> INSERT INTO book2 (title, author_id, genre_id, price, amount) VALUES ('Стихотворения и поэмы', 3, 2, 650.00, 15);
	    Query OK, 1 row affected (0.08 sec)
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        1 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    6 rows in set (0.00 sec)
	mysql> INSERT INTO book2 (title, author_id, genre_id, price, amount) VALUES ('Черный человек', 3, 2, 570.20, 6), ('Лирика', 4, 2, 518.99, 2);
	    Query OK, 2 rows affected (0.12 sec)
	    Records: 2  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        1 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	Task:
	Вывести название, жанр и цену тех книг, количество которых больше 8, в отсортированном по убыванию цены виде.
	Decision:
	mysql> SELECT * FROM genre;
	    +----------+--------------+
	    | genre_id | name_genre   |
	    +----------+--------------+
	    |        1 | Роман        |
	    |        2 | Поэзия       |
	    +----------+--------------+
	    2 rows in set (0.27 sec)
	mysql> INSERT INTO genre (name_genre)
	VALUES ('Приключения');
	    Query OK, 1 row affected (0.75 sec)
	mysql> SELECT * FROM genre;
	    +----------+------------------------+
	    | genre_id | name_genre             |
	    +----------+------------------------+
	    |        1 | Роман                  |
	    |        2 | Поэзия                 |
	    |        3 | Приключения            |
	    +----------+------------------------+
	    3 rows in set (0.01 sec)
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    +-----------+-------------------------------+
	    4 rows in set (0.23 sec)
	mysql> INSERT INTO author (name_author) VALUES ('Лермонтов М.Ю.');
	    Query OK, 1 row affected (0.02 sec)
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    |         5 | Лермонтов М.Ю.                |
	    +-----------+-------------------------------+
	    5 rows in set (0.00 sec)
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        1 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.05 sec)
	mysql> SELECT title, name_genre, price
	FROM genre INNER JOIN book2
	ON book2.genre_id = genre.genre_id
	WHERE amount>8
	ORDER BY price DESC;
	    +------------------------------------------+--------------+--------+
	    | title                                    | name_genre   | price  |
	    +------------------------------------------+--------------+--------+
	    | Стихотворения и поэмы                    | Поэзия       | 650.00 |
	    | Игрок                                    | Роман        | 480.50 |
	    | Идиот                                    | Роман        | 460.00 |
	    +------------------------------------------+--------------+--------+
	    3 rows in set (0.00 sec)
	Task:
	Вывести все жанры, которые не представлены в книгах на складе.
	Decision:
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        1 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    |         5 | Лермонтов М.Ю.                |
	    +-----------+-------------------------------+
	    5 rows in set (0.00 sec)
	mysql> SELECT * FROM genre;
	    +----------+------------------------+
	    | genre_id | name_genre             |
	    +----------+------------------------+
	    |        1 | Роман                  |
	    |        2 | Поэзия                 |
	    |        3 | Приключения            |
	    +----------+------------------------+
	    3 rows in set (0.00 sec)
	mysql> SELECT name_genre
	FROM genre LEFT JOIN  book2
	ON book2.genre_id=genre.genre_id
	WHERE book2.genre_id IS NULL;
	    +------------------------+
	    | name_genre             |
	    +------------------------+
	    | Приключения            |
	    +------------------------+
	    1 row in set (0.00 sec)
	Task:
	Есть список городов, хранящийся в таблице city:
	city_id     name_city
	1   Москва
	2   Санкт-Петербург
	3   Владивосток
	Необходимо в каждом городе провести выставку книг каждого автора в течение 2020 года. Дату проведения выставки выбрать случайным образом. Создать запрос, который выведет город, автора и дату проведения выставки. Последний столбец назвать Дата. Информацию вывести, отсортировав сначала в алфавитном порядке по названиям городов, а потом по убыванию дат проведения выставок.
	Decision:
	mysql> SELECT * FROM city;
	    ERROR 1146 (42S02): Table 'testbdserver.city' doesn't exist
	mysql> CREATE TABLE city(
	    book_id SERIAL PRIMARY KEY,
	    name_city VARCHAR(30)
	);
	    Query OK, 0 rows affected (0.54 sec)
	mysql> INSERT INTO city (name_city) VALUES ('Москва'), ('Санкт-Петербург'), ('Владивосток');
	    Query OK, 3 rows affected (0.33 sec)
	    Records: 3  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM city;
	    +---------+-------------------------------+
	    | book_id | name_city                     |
	    +---------+-------------------------------+
	    |       1 | Москва                        |
	    |       2 | Санкт-Петербург               |
	    |       3 | Владивосток                   |
	    +---------+-------------------------------+
	    3 rows in set (0.01 sec)
	mysql> SELECT * FROM genre;
	    +----------+------------------------+
	    | genre_id | name_genre             |
	    +----------+------------------------+
	    |        1 | Роман                  |
	    |        2 | Поэзия                 |
	    |        3 | Приключения            |
	    +----------+------------------------+
	    3 rows in set (0.00 sec)
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    |         5 | Лермонтов М.Ю.                |
	    +-----------+-------------------------------+
	    5 rows in set (0.00 sec)
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        1 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT name_city, name_author, DATE_ADD('2020-01-01', INTERVAL FLOOR(RAND()*365) DAY) AS Дата
	FROM city CROSS JOIN author
	ORDER BY name_city ASC, Дата DESC;
	    +-------------------------------+-------------------------------+------------+
	    | name_city                     | name_author                   | Дата       |
	    +-------------------------------+-------------------------------+------------+
	    | Владивосток                   | Булгаков М.А.                 | 2020-10-23 |
	    | Владивосток                   | Есенин С.А.                   | 2020-06-19 |
	    | Владивосток                   | Пастернак Б.Л.                | 2020-05-29 |
	    | Владивосток                   | Достоевский Ф.М.              | 2020-04-30 |
	    | Владивосток                   | Лермонтов М.Ю.                | 2020-01-30 |
	    | Москва                        | Достоевский Ф.М.              | 2020-12-02 |
	    | Москва                        | Пастернак Б.Л.                | 2020-09-07 |
	    | Москва                        | Лермонтов М.Ю.                | 2020-06-30 |
	    | Москва                        | Есенин С.А.                   | 2020-06-02 |
	    | Москва                        | Булгаков М.А.                 | 2020-02-02 |
	    | Санкт-Петербург               | Пастернак Б.Л.                | 2020-10-12 |
	    | Санкт-Петербург               | Булгаков М.А.                 | 2020-09-14 |
	    | Санкт-Петербург               | Есенин С.А.                   | 2020-07-24 |
	    | Санкт-Петербург               | Достоевский Ф.М.              | 2020-05-19 |
	    | Санкт-Петербург               | Лермонтов М.Ю.                | 2020-05-07 |
	    +-------------------------------+-------------------------------+------------+
	    15 rows in set (0.03 sec)
	Task:
	Вывести информацию о книгах (жанр, книга, автор), относящихся к жанру, включающему слово роман» в отсортированном по названиям книг виде.
	Decision:
	mysql> SELECT name_genre, title, name_author
	FROM genre
	INNER JOIN book2 ON genre.genre_id = book2.genre_id
	INNER JOIN author ON author.author_id = book2.author_id
	WHERE name_genre="роман"
	ORDER BY title;
	    +------------+------------------------------------+-------------------------------+
	    | name_genre | title                              | name_author                   |
	    +------------+------------------------------------+-------------------------------+
	    | Роман      | Белая гвардия                      | Булгаков М.А.                 |
	    | Роман      | Братья Карамазовы                  | Достоевский Ф.М.              |
	    | Роман      | Игрок                              | Достоевский Ф.М.              |
	    | Роман      | Идиот                              | Достоевский Ф.М.              |
	    | Роман      | Мастер и Маргарита                 | Булгаков М.А.                 |
	    +------------+------------------------------------+-------------------------------+
	    5 rows in set (0.00 sec)
	Task:
	Посчитать количество экземпляров  книг каждого автора из таблицы author.  Вывести тех авторов,  количество книг которых меньше 10, в отсортированном по возрастанию количества виде. Последний столбец назвать Количество.
	Decision:
	mysql> SELECT name_author, IF(SUM(amount) IS NULL, NULL, SUM(amount)) AS Количество
	FROM
	author LEFT JOIN book2
	ON author.author_id = book2.author_id
	GROUP BY name_author
	HAVING  Количество < 10 or COUNT(title) = 0
	ORDER BY Количество;
	    +---------------------------+----------------------+
	    | name_author               | Количество           |
	    +---------------------------+----------------------+
	    | Лермонтов М.Ю.            |                 NULL |
	    | Пастернак Б.Л.            |                    2 |
	    | Булгаков М.А.             |                    8 |
	    +---------------------------+----------------------+
	    3 rows in set (0.00 sec)
	Task:
	Вывести в алфавитном порядке всех авторов, которые пишут только в одном жанре. Поскольку у нас в таблицах так занесены данные, что у каждого автора книги только в одном жанре,  для этого запроса внесем изменения в таблицу book. Пусть у нас  книга Есенина Черный человек» относится к жанру Роман», а книга Булгакова Белая гвардия» к Приключениям» (эти изменения в таблицы уже внесены).
	Decision:
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        1 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        2 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    |         5 | Лермонтов М.Ю.                |
	    +-----------+-------------------------------+
	    5 rows in set (0.00 sec)
	mysql> SELECT * FROM genre;
	    +----------+------------------------+
	    | genre_id | name_genre             |
	    +----------+------------------------+
	    |        1 | Роман                  |
	    |        2 | Поэзия                 |
	    |        3 | Приключения            |
	    +----------+------------------------+
	    3 rows in set (0.00 sec)
	mysql> UPDATE book2 SET genre_id=1 WHERE book_id=15;
	    Query OK, 1 row affected (0.17 sec)
	    Rows matched: 1  Changed: 1  Warnings: 0
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        1 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        1 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> UPDATE book2 SET genre_id=3 WHERE book_id=10;
	    Query OK, 1 row affected (0.12 sec)
	    Rows matched: 1  Changed: 1  Warnings: 0
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        3 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        1 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT DISTINCT author_id, genre_id
	FROM book2;
	    +-----------+----------+
	    | author_id | genre_id |
	    +-----------+----------+
	    |         1 |        1 |
	    |         1 |        3 |
	    |         2 |        1 |
	    |         3 |        2 |
	    |         3 |        1 |
	    |         4 |        2 |
	    +-----------+----------+
	    6 rows in set (0.00 sec)
	mysql> SELECT author_id, COUNT(genre_id) AS genre_count
	FROM (
	SELECT DISTINCT author_id, genre_id
	FROM book2
	) q1
	GROUP BY author_id
	HAVING genre_count = 1;
	    +-----------+-------------+
	    | author_id | genre_count |
	    +-----------+-------------+
	    |         2 |           1 |
	    |         4 |           1 |
	    +-----------+-------------+
	    2 rows in set (0.00 sec)
	mysql> SELECT name_author
	FROM author INNER JOIN (
	SELECT author_id, COUNT(genre_id) AS genre_count
	FROM (
	SELECT DISTINCT author_id, genre_id
	FROM book2
	) q1
	GROUP BY author_id
	HAVING genre_count = 1) q2
	ON author.author_id = q2.author_id;
	    +-------------------------------+
	    | name_author                   |
	    +-------------------------------+
	    | Достоевский Ф.М.              |
	    | Пастернак Б.Л.                |
	    +-------------------------------+
	    2 rows in set (0.00 sec)
	Task:
	Вывести информацию о книгах (название книги, фамилию и инициалы автора, название жанра, цену и количество экземпляров книги), написанных в самых популярных жанрах, в отсортированном в алфавитном порядке по названию книг виде. Самым популярным считать жанр, общее количество экземпляров книг которого на складе максимально.
	Decision:
	mysql> SELECT genre_id, SUM(amount) AS sum_amount
	FROM book2
	GROUP BY genre_id;
	    +----------+------------+
	    | genre_id | sum_amount |
	    +----------+------------+
	    |        1 |         32 |
	    |        2 |         17 |
	    |        3 |          5 |
	    +----------+------------+
	    3 rows in set (0.00 sec)
	mysql> SELECT genre_id, SUM(amount) AS sum_amount
	FROM book2
	GROUP BY genre_id
	ORDER BY sum_amount DESC
	LIMIT 1;
	    +----------+------------+
	    | genre_id | sum_amount |
	    +----------+------------+
	    |        1 |         32 |
	    +----------+------------+
	    1 row in set (0.00 sec)
	mysql> SELECT query_in_1.genre_id
	FROM (
	SELECT genre_id, SUM(amount) AS sum_amount
	FROM book2
	GROUP BY genre_id
	)query_in_1 INNER JOIN (
	SELECT genre_id, SUM(amount) AS sum_amount
	FROM book2
	GROUP BY genre_id
	ORDER BY sum_amount DESC
	LIMIT 1
	)
	query_in_2
	ON query_in_1.sum_amount= query_in_2.sum_amount;
	    +----------+
	    | genre_id |
	    +----------+
	    |        1 |
	    +----------+
	    1 row in set (0.00 sec)
	mysql> SELECT  title, name_author, name_genre, price, amount
	FROM
	author
	INNER JOIN book2 ON author.author_id = book2.author_id
	INNER JOIN genre ON  book2.genre_id = genre.genre_id
	WHERE genre.genre_id IN(
	SELECT query_in_1.genre_id
	FROM (
	SELECT genre_id, SUM(amount) AS sum_amount
	FROM book2
	GROUP BY genre_id
	)query_in_1 INNER JOIN (
	SELECT genre_id, SUM(amount) AS sum_amount
	FROM book2
	GROUP BY genre_id
	ORDER BY sum_amount DESC
	LIMIT 1
	)
	query_in_2 ON query_in_1.sum_amount= query_in_2.sum_amount)
	ORDER BY title ASC;
	    +------------------------------------+-------------------------------+------------+--------+--------+
	    | title                              | name_author                   | name_genre | price  | amount |
	    +------------------------------------+-------------------------------+------------+--------+--------+
	    | Братья Карамазовы                  | Достоевский Ф.М.              | Роман      | 799.01 |      3 |
	    | Игрок                              | Достоевский Ф.М.              | Роман      | 480.50 |     10 |
	    | Идиот                              | Достоевский Ф.М.              | Роман      | 460.00 |     10 |
	    | Мастер и Маргарита                 | Булгаков М.А.                 | Роман      | 670.99 |      3 |
	    | Черный человек                     | Есенин С.А.                   | Роман      | 570.20 |      6 |
	    +------------------------------------+-------------------------------+------------+--------+--------+
	    5 rows in set (0.11 sec)
	Task:
	Если в таблицах supply  и book есть одинаковые книги, которые имеют равную цену,  вывести их название и автора, а также посчитать общее количество экземпляров книг в таблицах supply и book,  столбцы назвать Название, Автор  и Количество.
	Decision:
	mysql> SELECT * FROM supply;
	    +-----------+--------------+---------------------------+--------+--------+
	    | supply_id | title        | author                    | price  | amount |
	    +-----------+--------------+---------------------------+--------+--------+
	    |         1 | Лирика       | Пастернак Б.Л.            | 518.99 |      2 |
	    +-----------+--------------+---------------------------+--------+--------+
	    1 row in set (0.10 sec)
	mysql> DELETE FROM supply
	WHERE title='Лирика';
	    Query OK, 1 row affected (0.03 sec)
	mysql> INSERT INTO supply (title, author, price, amount)VALUES
	('Доктор Живаго', 'Пастернак Б.Л.', 618.99, 3),
	('Черный человек', 'Есенин С.А.', 570.20, 6),
	('Евгений Онегин', 'Пушкин А.С.', 440.80, 5),
	('Идиот', 'Достоевский Ф.М.', 360.80, 3);
	    Query OK, 4 rows affected (0.03 sec)
	    Records: 4  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM supply;
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    | supply_id | title                       | author                        | price  | amount |
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    |         5 | Доктор Живаго               | Пастернак Б.Л.                | 618.99 |      3 |
	    |         6 | Черный человек              | Есенин С.А.                   | 570.20 |      6 |
	    |         7 | Евгений Онегин              | Пушкин А.С.                   | 440.80 |      5 |
	    |         8 | Идиот                       | Достоевский Ф.М.              | 360.80 |      3 |
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    4 rows in set (0.00 sec)
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    |         5 | Лермонтов М.Ю.                |
	    +-----------+-------------------------------+
	    5 rows in set (0.00 sec)
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        3 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        1 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT book2.title as Название, name_author as Автор, sum(book2.amount + supply.amount) as Количество
	FROM
	author
	INNER JOIN book2 USING (author_id)
	INNER JOIN supply ON book2.title = supply.title AND author.name_author = supply.author
	WHERE book2.price = supply.price
	GROUP BY book2.title, name_author;
	    +-----------------------------+---------------------+----------------------+
	    | Название                    | Автор               | Количество           |
	    +-----------------------------+---------------------+----------------------+
	    | Черный человек              | Есенин С.А.         |                   12 |
	    +-----------------------------+---------------------+----------------------+
	    1 row in set (0.00 sec)
	Task:
	Для книг, которые уже есть на складе (в таблице book), но по другой цене, чем в поставке (supply),  необходимо в таблице book увеличить количество на значение, указанное в поставке,  и пересчитать цену. А в таблице  supply обнулить количество этих книг. Формула для пересчета цены:
	    price=(p1∗k1+p2∗k2)/(k1+k2)
	где  p1, p2 - цена книги в таблицах book и supply;
	k1, k2 - количество книг в таблицах book и supply.
	Decision:
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        3 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 460.00 |     10 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        1 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT * FROM supply;
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    | supply_id | title                       | author                        | price  | amount |
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    |         5 | Доктор Живаго               | Пастернак Б.Л.                | 618.99 |      3 |
	    |         6 | Черный человек              | Есенин С.А.                   | 570.20 |      6 |
	    |         7 | Евгений Онегин              | Пушкин А.С.                   | 440.80 |      5 |
	    |         8 | Идиот                       | Достоевский Ф.М.              | 360.80 |      3 |
	    +-----------+-----------------------------+-------------------------------+--------+--------+
	    4 rows in set (0.00 sec)
	mysql> INSERT INTO supply (title, author, price, amount) VALUES ('Стихотворения и поэмы', 'Лермонтов М.Ю.', 255.90, 4),('Остров сокровищ', 'Стивенсон Р.Л.', 599.99, 5);
	    Query OK, 2 rows affected (0.09 sec)
	    Records: 2  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM supply;
	    +-----------+------------------------------------------+-------------------------------+--------+--------+
	    | supply_id | title                                    | author                        | price  | amount |
	    +-----------+------------------------------------------+-------------------------------+--------+--------+
	    |         5 | Доктор Живаго                            | Пастернак Б.Л.                | 618.99 |      3 |
	    |         6 | Черный человек                           | Есенин С.А.                   | 570.20 |      6 |
	    |         7 | Евгений Онегин                           | Пушкин А.С.                   | 440.80 |      5 |
	    |         8 | Идиот                                    | Достоевский Ф.М.              | 360.80 |      3 |
	    |       100 | Стихотворения и поэмы                    | Лермонтов М.Ю.                | 255.90 |      4 |
	    |       101 | Остров сокровищ                          | Стивенсон Р.Л.                | 599.99 |      5 |
	    +-----------+------------------------------------------+-------------------------------+--------+--------+
	    6 rows in set (0.00 sec)
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    |         5 | Лермонтов М.Ю.                |
	    |         6 | Булгаков М.А.                 |
	    |         7 | Достоевский Ф.М.              |
	    |         8 | Есенин С.А.                   |
	    |         9 | Пастернак Б.Л.                |
	    |        10 | Лермонтов М.Ю.                |
	    +-----------+-------------------------------+
	    10 rows in set (0.01 sec)
	mysql> SELECT * FROM genre;
	    +----------+------------------------+
	    | genre_id | name_genre             |
	    +----------+------------------------+
	    |        1 | Роман                  |
	    |        2 | Поэзия                 |
	    |        3 | Приключения            |
	    +----------+------------------------+
	    3 rows in set (0.01 sec)
	mysql> UPDATE book
	     INNER JOIN author
	     ON author.author_id = book.author_id
	     INNER JOIN supply
	     ON book.title = supply.title
	        AND supply.author = author.name_author
	SET
	    book.price = (book.amount * book.price + supply.amount*supply.price) / (book.amount + supply.amount),
	    book.amount = book.amount + supply.amount,
	    supply.amount = 0   
	WHERE book.price <> supply.price;
	    Query OK, 2 rows affected, 1 warning (1.72 sec)
	    Rows matched: 2  Changed: 2  Warnings: 1
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        3 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 437.11 |     13 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        1 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.00 sec)
	mysql> SELECT * FROM supply;
	    +-----------+------------------------------------------+-------------------------------+--------+--------+
	    | supply_id | title                                    | author                        | price  | amount |
	    +-----------+------------------------------------------+-------------------------------+--------+--------+
	    |         5 | Доктор Живаго                            | Пастернак Б.Л.                | 618.99 |      3 |
	    |         6 | Черный человек                           | Есенин С.А.                   | 570.20 |      6 |
	    |         7 | Евгений Онегин                           | Пушкин А.С.                   | 440.80 |      5 |
	    |         8 | Идиот                                    | Достоевский Ф.М.              | 360.80 |      0 |
	    |       100 | Стихотворения и поэмы                    | Лермонтов М.Ю.                | 255.90 |      4 |
	    |       101 | Остров сокровищ                          | Стивенсон Р.Л.                | 599.99 |      5 |
	    +-----------+------------------------------------------+-------------------------------+--------+--------+
	    6 rows in set (0.00 sec)
	Task:
	Включить новых авторов в таблицу author с помощью запроса на добавление, а затем вывести все данные из таблицы author.  Новыми считаются авторы, которые есть в таблице supply, но нет в таблице author.
	Decision:
	mysql> INSERT INTO author (name_author)
	SELECT supply.author
	FROM
	    author
	    RIGHT JOIN supply ON author.name_author = supply.author
	WHERE name_author IS NULL;
	    Query OK, 0 rows affected (0.00 sec)
	    Records: 0  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM author;
	    +-----------+-------------------------------+
	    | author_id | name_author                   |
	    +-----------+-------------------------------+
	    |         1 | Булгаков М.А.                 |
	    |         2 | Достоевский Ф.М.              |
	    |         3 | Есенин С.А.                   |
	    |         4 | Пастернак Б.Л.                |
	    |         5 | Лермонтов М.Ю.                |
	    |         6 | Булгаков М.А.                 |
	    |         7 | Достоевский Ф.М.              |
	    |         8 | Есенин С.А.                   |
	    |         9 | Пастернак Б.Л.                |
	    |        10 | Лермонтов М.Ю.                |
	    |        11 | Пушкин А.С.                   |
	    |        12 | Стивенсон Р.Л.                |
	    +-----------+-------------------------------+
	    12 rows in set (0.00 sec)
	Task:
	Добавить новые книги из таблицы supply в таблицу book на основе сформированного выше запроса. Затем вывести для просмотра таблицу book.
	Decision:
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        3 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 437.11 |     13 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        1 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    8 rows in set (0.01 sec)
	mysql> INSERT INTO book2 (title, author_id, price, amount)
	SELECT title, author_id, price, amount
	FROM
	    author
	    INNER JOIN supply ON author.name_author = supply.author
	WHERE amount <> 0;
	    Query OK, 8 rows affected (0.14 sec)
	    Records: 8  Duplicates: 0  Warnings: 0
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        3 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 437.11 |     13 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        1 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    |      17 | Черный человек                           |         3 |     NULL | 570.20 |      6 |
	    |      18 | Доктор Живаго                            |         4 |     NULL | 618.99 |      3 |
	    |      19 | Стихотворения и поэмы                    |         5 |     NULL | 255.90 |      4 |
	    |      20 | Черный человек                           |         8 |     NULL | 570.20 |      6 |
	    |      21 | Доктор Живаго                            |         9 |     NULL | 618.99 |      3 |
	    |      22 | Стихотворения и поэмы                    |        10 |     NULL | 255.90 |      4 |
	    |      23 | Евгений Онегин                           |        11 |     NULL | 440.80 |      5 |
	    |      24 | Остров сокровищ                          |        12 |     NULL | 599.99 |      5 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    16 rows in set (0.00 sec)
	Task:
	Занести для книги Стихотворения и поэмы» Лермонтова жанр Поэзия», а для книги Остров сокровищ» Стивенсона - Приключения». (Использовать два запроса).
	Decision:
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        3 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 437.11 |     13 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        1 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    |      17 | Черный человек                           |         3 |     NULL | 570.20 |      6 |
	    |      18 | Доктор Живаго                            |         4 |     NULL | 618.99 |      3 |
	    |      19 | Стихотворения и поэмы                    |         5 |     NULL | 255.90 |      4 |
	    |      20 | Черный человек                           |         8 |     NULL | 570.20 |      6 |
	    |      21 | Доктор Живаго                            |         9 |     NULL | 618.99 |      3 |
	    |      22 | Стихотворения и поэмы                    |        10 |     NULL | 255.90 |      4 |
	    |      23 | Евгений Онегин                           |        11 |     NULL | 440.80 |      5 |
	    |      24 | Остров сокровищ                          |        12 |     NULL | 599.99 |      5 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    16 rows in set (0.00 sec)
	mysql> SELECT * FROM genre;
	    +----------+------------------------+
	    | genre_id | name_genre             |
	    +----------+------------------------+
	    |        1 | Роман                  |
	    |        2 | Поэзия                 |
	    |        3 | Приключения            |
	    +----------+------------------------+
	    3 rows in set (0.00 sec)
	mysql> UPDATE book2
	SET genre_id = (SELECT genre_id
	    FROM genre
	    WHERE name_genre = 'Поэзия')
	WHERE book_id = 19;
	    Query OK, 1 row affected (0.21 sec)
	    Rows matched: 1  Changed: 1  Warnings: 0
	mysql> UPDATE book2
	SET genre_id = (SELECT genre_id
	    FROM genre
	    WHERE name_genre = 'Приключения')
	WHERE book_id = 24;
	    Query OK, 1 row affected (0.05 sec)
	    Rows matched: 1  Changed: 1  Warnings: 0
	mysql> SELECT * FROM book2;
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    | book_id | title                                    | author_id | genre_id | price  | amount |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    |       9 | Мастер и Маргарита                       |         1 |        1 | 670.99 |      3 |
	    |      10 | Белая гвардия                            |         1 |        3 | 540.50 |      5 |
	    |      11 | Идиот                                    |         2 |        1 | 437.11 |     13 |
	    |      12 | Братья Карамазовы                        |         2 |        1 | 799.01 |      3 |
	    |      13 | Игрок                                    |         2 |        1 | 480.50 |     10 |
	    |      14 | Стихотворения и поэмы                    |         3 |        2 | 650.00 |     15 |
	    |      15 | Черный человек                           |         3 |        1 | 570.20 |      6 |
	    |      16 | Лирика                                   |         4 |        2 | 518.99 |      2 |
	    |      17 | Черный человек                           |         3 |     NULL | 570.20 |      6 |
	    |      18 | Доктор Живаго                            |         4 |     NULL | 618.99 |      3 |
	    |      19 | Стихотворения и поэмы                    |         5 |        2 | 255.90 |      4 |
	    |      20 | Черный человек                           |         8 |     NULL | 570.20 |      6 |
	    |      21 | Доктор Живаго                            |         9 |     NULL | 618.99 |      3 |
	    |      22 | Стихотворения и поэмы                    |        10 |     NULL | 255.90 |      4 |
	    |      23 | Евгений Онегин                           |        11 |     NULL | 440.80 |      5 |
	    |      24 | Остров сокровищ                          |        12 |        3 | 599.99 |      5 |
	    +---------+------------------------------------------+-----------+----------+--------+--------+
	    16 rows in set (0.01 sec)
	Task:
	Удалить всех авторов и все их книги, общее количество книг которых меньше 20.
	Decision:
	SELECT * FROM author;
	SELECT * FROM book;
	DELETE FROM author
	WHERE author_id IN (SELECT author_id
	    FROM book
	    GROUP BY author_id
	    HAVING SUM(amount)<20);
	SELECT * FROM author;
	SELECT * FROM book;
	    Query result:
	    +-----------+------------------+
	    | author_id | name_author      |
	    +-----------+------------------+
	    | 1         | Булгаков М.А.    |
	    | 2         | Достоевский Ф.М. |
	    | 3         | Есенин С.А.      |
	    | 4         | Пастернак Б.Л.   |
	    | 5         | Лермонтов М.Ю.   |
	    | 6         | Стивенсон Р.Л.   |
	    +-----------+------------------+
	    Affected rows: 6
	    Query result:
	    +---------+-----------------------+-----------+----------+--------+--------+
	    | book_id | title                 | author_id | genre_id | price  | amount |
	    +---------+-----------------------+-----------+----------+--------+--------+
	    | 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |
	    | 2       | Белая гвардия         | 1         | 1        | 540.50 | 12     |
	    | 3       | Идиот                 | 2         | 1        | 437.11 | 13     |
	    | 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |
	    | 5       | Игрок                 | 2         | 1        | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |
	    | 7       | Черный человек        | 3         | 2        | 570.20 | 12     |
	    | 8       | Лирика                | 4         | 2        | 518.99 | 2      |
	    | 9       | Доктор Живаго         | 4         | 1        | 380.80 | 4      |
	    | 10      | Стихотворения и поэмы | 5         | 2        | 255.90 | 4      |
	    | 11      | Остров сокровищ       | 6         | 3        | 599.99 | 5      |
	    +---------+-----------------------+-----------+----------+--------+--------+
	    Affected rows: 11
	    Affected rows: 4
	    Query result:
	    +-----------+------------------+
	    | author_id | name_author      |
	    +-----------+------------------+
	    | 2         | Достоевский Ф.М. |
	    | 3         | Есенин С.А.      |
	    +-----------+------------------+
	    Affected rows: 2
	    Query result:
	    +---------+-----------------------+-----------+----------+--------+--------+
	    | book_id | title                 | author_id | genre_id | price  | amount |
	    +---------+-----------------------+-----------+----------+--------+--------+
	    | 3       | Идиот                 | 2         | 1        | 437.11 | 13     |
	    | 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |
	    | 5       | Игрок                 | 2         | 1        | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |
	    | 7       | Черный человек        | 3         | 2        | 570.20 | 12     |
	    +---------+-----------------------+-----------+----------+--------+--------+
	    Affected rows: 5
	Task:
	Удалить все жанры, к которым относится меньше 4-х книг. В таблице book для этих жанров установить значение Null.
	Decision:
	SELECT * FROM genre;
	SELECT * FROM book;
	DELETE FROM genre
	WHERE genre_id IN (SELECT genre_id
	    FROM book
	    GROUP BY genre_id
	    HAVING count(title)<4);
	SELECT * FROM genre;
	SELECT * FROM book;
	Query result:
	    +----------+-------------+
	    | genre_id | name_genre  |
	    +----------+-------------+
	    | 1        | Роман       |
	    | 2        | Поэзия      |
	    | 3        | Приключения |
	    +----------+-------------+
	    Affected rows: 3
	    Query result:
	    +---------+-----------------------+-----------+----------+--------+--------+
	    | book_id | title                 | author_id | genre_id | price  | amount |
	    +---------+-----------------------+-----------+----------+--------+--------+
	    | 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |
	    | 2       | Белая гвардия         | 1         | 1        | 540.50 | 12     |
	    | 3       | Идиот                 | 2         | 1        | 437.11 | 13     |
	    | 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |
	    | 5       | Игрок                 | 2         | 1        | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |
	    | 7       | Черный человек        | 3         | 2        | 570.20 | 12     |
	    | 8       | Лирика                | 4         | 2        | 518.99 | 2      |
	    | 9       | Доктор Живаго         | 4         | 1        | 380.80 | 4      |
	    | 10      | Стихотворения и поэмы | 5         | 2        | 255.90 | 4      |
	    | 11      | Остров сокровищ       | 6         | 3        | 599.99 | 5      |
	    +---------+-----------------------+-----------+----------+--------+--------+
	    Affected rows: 11
	    Affected rows: 1
	    Query result:
	    +----------+------------+
	    | genre_id | name_genre |
	    +----------+------------+
	    | 1        | Роман      |
	    | 2        | Поэзия     |
	    +----------+------------+
	    Affected rows: 2
	    Query result:
	    +---------+-----------------------+-----------+----------+--------+--------+
	    | book_id | title                 | author_id | genre_id | price  | amount |
	    +---------+-----------------------+-----------+----------+--------+--------+
	    | 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |
	    | 2       | Белая гвардия         | 1         | 1        | 540.50 | 12     |
	    | 3       | Идиот                 | 2         | 1        | 437.11 | 13     |
	    | 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |
	    | 5       | Игрок                 | 2         | 1        | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |
	    | 7       | Черный человек        | 3         | 2        | 570.20 | 12     |
	    | 8       | Лирика                | 4         | 2        | 518.99 | 2      |
	    | 9       | Доктор Живаго         | 4         | 1        | 380.80 | 4      |
	    | 10      | Стихотворения и поэмы | 5         | 2        | 255.90 | 4      |
	    | 11      | Остров сокровищ       | 6         | NULL     | 599.99 | 5      |
	    +---------+-----------------------+-----------+----------+--------+--------+
	    Affected rows: 11
	Task:
	Удалить всех авторов, которые пишут в жанре "Поэзия". Из таблицы book удалить все книги этих авторов. В запросе для отбора авторов использовать полное название жанра, а не его id.
	Decision:
	SELECT * FROM author;
	SELECT * FROM book;
	DELETE FROM author
	USING
	    book
	    INNER JOIN author ON author.author_id = book.author_id
	    INNER JOIN genre ON book.genre_id = genre.genre_id
	WHERE genre.name_genre = 'Поэзия';
	SELECT * FROM author;
	SELECT * FROM book;
	    Query result:
	    +-----------+------------------+
	    | author_id | name_author      |
	    +-----------+------------------+
	    | 1         | Булгаков М.А.    |
	    | 2         | Достоевский Ф.М. |
	    | 3         | Есенин С.А.      |
	    | 4         | Пастернак Б.Л.   |
	    | 5         | Лермонтов М.Ю.   |
	    | 6         | Стивенсон Р.Л.   |
	    +-----------+------------------+
	    Affected rows: 6
	    Query result:
	    +---------+-----------------------+-----------+----------+--------+--------+
	    | book_id | title                 | author_id | genre_id | price  | amount |
	    +---------+-----------------------+-----------+----------+--------+--------+
	    | 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |
	    | 2       | Белая гвардия         | 1         | 1        | 540.50 | 12     |
	    | 3       | Идиот                 | 2         | 1        | 437.11 | 13     |
	    | 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |
	    | 5       | Игрок                 | 2         | 1        | 480.50 | 10     |
	    | 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |
	    | 7       | Черный человек        | 3         | 2        | 570.20 | 12     |
	    | 8       | Лирика                | 4         | 2        | 518.99 | 2      |
	    | 9       | Доктор Живаго         | 4         | 1        | 380.80 | 4      |
	    | 10      | Стихотворения и поэмы | 5         | 2        | 255.90 | 4      |
	    | 11      | Остров сокровищ       | 6         | 3        | 599.99 | 5      |
	    +---------+-----------------------+-----------+----------+--------+--------+
	    Affected rows: 11
	    Affected rows: 3
	    Query result:
	    +-----------+------------------+
	    | author_id | name_author      |
	    +-----------+------------------+
	    | 1         | Булгаков М.А.    |
	    | 2         | Достоевский Ф.М. |
	    | 6         | Стивенсон Р.Л.   |
	    +-----------+------------------+
	    Affected rows: 3
	    Query result:
	    +---------+--------------------+-----------+----------+--------+--------+
	    | book_id | title              | author_id | genre_id | price  | amount |
	    +---------+--------------------+-----------+----------+--------+--------+
	    | 1       | Мастер и Маргарита | 1         | 1        | 670.99 | 3      |
	    | 2       | Белая гвардия      | 1         | 1        | 540.50 | 12     |
	    | 3       | Идиот              | 2         | 1        | 437.11 | 13     |
	    | 4       | Братья Карамазовы  | 2         | 1        | 799.01 | 3      |
	    | 5       | Игрок              | 2         | 1        | 480.50 | 10     |
	    | 11      | Остров сокровищ    | 6         | 3        | 599.99 | 5      |
	    +---------+--------------------+-----------+----------+--------+--------+
	    Affected rows: 6
	Source:
	https://steptuser.org/course/63054/syllabus

Разработка мини-программ на двух языках C++ и Python (C++, Python)
	Task:
	Мне нужно написать программу, которая считывает возраст человека. Программа сначала запрашивает год рождения.
	Decision:
	https://github.com/David138it/Engineer-MyFirstMiniProjects
	$ cat Cpp-AgeDetermination.cpp
	#include <iostream>
	using namespace std;
	int age(int current_date, int current_month, int current_year, int birth_date, int birth_month, int birth_year)
	{
		//если дата рождения больше текущей даты рождения тогда не считайте в этом месяце и добавьте 30 к дате так как вычесть дату и получить оставшиеся дни
		int month[]={31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
		if (birth_date > current_date)
		{
			current_month = current_month - 1;
			current_date = current_date + month[birth_month-1];
		}
		//если месяц рождения превышает текущий месяц, то  Не считайте в этом году и добавьте 12 к месяц, чтобы мы могли вычесть и выяснить различия
		if (birth_month > current_month)
		{
			current_year = current_year - 1;
	        current_month = current_month + 12;
		}
	    // вычислить дату, месяц, год
	    int calculated_date = current_date - birth_date;
	    int calculated_month = current_month - birth_month;
	    int calculated_year = current_year - birth_year;
		// печать нынешнего возраста
	    cout<<"Present Age:"<<endl;
	    cout<<"Years: "<<calculated_year<<" Months: "<<calculated_month<<" Days: "<<calculated_date<<endl;
		return 0;
	}
	int main()
	{
		int current_date, current_month, current_year, birth_date, birth_month, birth_year;
		//код пользователя
		cout<<"Today:"<<endl;
		cout<<"DD: ";
		cin>>current_date;
		cout<<"MM: ";
		cin>>current_month;
		cout<<"YYYY: ";
		cin>>current_year;
		//рождение дд // мм // гггг
		cout<<"You'r Birthday:"<<endl;
		cout<<"DD: ";
		cin>>birth_date;
	    cout<<"MM: ";
		cin>>birth_month;
	    cout<<"YYYY:";
		cin>>birth_year;
		age(current_date, current_month, current_year, birth_date, birth_month, birth_year);
		system("pause");
		return 0;
	}
	$ cat Py-AgeDetermination.py
	def age(current_date, current_month, current_year, birth_date, birth_month, birth_year):
	    #если дата рождения больше текущей даты рождения тогда не считайте в этом месяце и добавьте 30 к дате так как вычесть дату и получить оставшиеся дни
	    month =[31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
	    if (birth_date > current_date):
	        current_month = current_month - 1
	        current_date = current_date + month[birth_month-1]
	    #если месяц рождения превышает текущий месяц, то Не считайте в этом году и добавьте 12 к месяц, чтобы мы могли вычесть и выяснить различия
	    if (birth_month > current_month):
	        current_year = current_year - 1;
	        current_month = current_month + 12;
	    # вычислить дату, месяц, год
	    calculated_date = current_date - birth_date;
	    calculated_month = current_month - birth_month;
	    calculated_year = current_year - birth_year;
	    # печать нынешнего возраста
	    print("Present Age:")
	    print("Years:", calculated_year, "Months:", calculated_month, "Days:", calculated_date)
	print("Today:")
	# код пользователя
	current_date = int(input("DD: "))
	current_month = int(input("MM: "))
	current_year = int(input("YYYY: "))
	# рождение дд // мм // гггг
	print("You'r Birthday:")
	birth_date = int(input("DD: "))
	birth_month = int(input("MM: "))
	birth_year = int(input("YYYY: "))
	age(current_date, current_month, current_year, birth_date, birth_month, birth_year)
	$ python3 Py-AgeDetermination.py
	Today:
	DD: 18
	MM: 07
	YYYY: 2022
	You'r Birthday:
	DD: 23
	MM: 09
	YYYY: 1992
	Present Age:
	Years: 29 Months: 9 Days: 25
	$ g++ Cpp-AgeDetermination.cpp -o output
	$ ./output
	Today:
	DD: 18
	MM: 07
	YYYY: 2022
	You'r Birthday:
	DD: 23
	MM: 09
	YYYY:1992
	Present Age:
	Years: 29 Months: 9 Days: 25
	https://github.com/David138it/MyFirstMiniProjects
	Task:
	Создайте конвертер валют, который получает данные из национального банка с помощью json и выводит данные о стоимости рубля к доллару, евро и юаню. Запустите программу через терминал.
	Decision:
	$ cat Cpp-CurrencyConverter.cpp
	#include <iostream>
	using namespace std;
	int main()
	{
		float dollar, euro, yuan;
		cout<<"current dollar data: ";
		cin>>dollar;
	        cout<<"current euro data: ";
		cin>>euro;
	        cout<<"current yuan data: ";
		cin>>yuan;
		//cout<<dollar<<" "<<euro<<" "<<yuan<<" "<<endl;
		cout<<"1) Convert to dollars, Euros, yuan"<<endl<<"2) Transfer from dollars, Euros, yuan"<<endl<<"Choose your actions: ";
		int choise;
		cin>>choise;
		//cout<<choise; 
		if (choise==1){
			float ruble, resultDollar, resultEuro, resultYuan;
			cout<<"Enter the number of rubles: ";
			cin>>ruble;
			resultDollar=ruble/dollar;
			resultEuro=ruble/euro;
			resultYuan=ruble/yuan;
			cout<<"The result of your transfer = "<<resultDollar<<endl<<"The result of your transfer = "<<resultEuro<<endl<<"The result of your transfer = "<<resultYuan<<endl;
		} else if (choise==2) {
			float d, e, y, resultDollar, resultEuro, resultYuan;
			cout<<"Enter the number of dollars: ";
			cin>>d;
			cout<<"Enter the number of euroes: ";
			cin>>e;
			cout<<"Enter the number of yuans: ";
			cin>>y;
			resultDollar=d*dollar;
			resultEuro=e*euro;
			resultYuan=y*yuan;
			cout<<"The result of your transfer = "<<resultDollar<<endl<<"The result of your transfer = "<<resultEuro<<endl<<"The result of your transfer = "<<resultYuan<<endl;
		} else {
			cout<<"Error! Enter only 1 or 2: "<<endl;
			exit(0);
		}
		//system("pause");
		return 0;
	}
	$ cat Py-CurrencyConverter.py 
	from pprint import pprint
	import requests
	data = requests.get('https://www.cbr-xml-daily.ru/daily_json.js').json()
	dictionaryU=data['Valute']['USD']
	dictionaryE=data['Valute']['EUR']
	dictionaryC=data['Valute']['CNY']
	'''
	lists=[dictionaryU, dictionaryE, dictionaryC]
	for index in lists:
		print(index)
	'''
	'''
	print(dictionaryU['Value'],dictionaryU['Name'])
	print(dictionaryE['Value'],dictionaryE['Name'])
	print(dictionaryC['Value'],dictionaryC['Name'])
	'''
	'''
	dollar=float(input("Enter the dollar rate: "))
	euro=float(input("Enter the euro exchange rate: "))
	yuan=float(input("Enter the yuan exchange rate: "))
	'''
	dollar=dictionaryU['Value']
	euro=dictionaryE['Value']
	yuan=dictionaryC['Value']
	print("Dollar exchange rate: ",dollar)
	print("Euro exchange rate: ",euro)
	print("Yuan exchange rate: ",yuan)
	print("1) Convert to dollars, Euros, yuan\n2) Transfer from dollars, Euros, yuan\n")
	choise=int(input("Choose your actions:\n"))
	if choise==1:
		ruble=float(input("Enter the number of rubles: "))
		resultDollar=ruble/dollar
		resultEuro=ruble/euro
		resultYuan=ruble/yuan
		print("The result of your transfer = ", '{:.2f}'.format(resultDollar))
		print("The result of your transfer = ", '{:.2f}'.format(resultEuro))
		print("The result of your transfer = ", '{:.2f}'.format(resultYuan))
	elif choise==2:
		d=float(input("Enter the number of dollars: "))
		e=float(input("Enter the number of euroes: "))	
		y=float(input("Enter the number of yuans: "))
		resultDollar=d*dollar
		resultEuro=e*euro
		resultYuan=y*yuan
		print("The result of your transfer = ", '{:.2f}'.format(resultDollar))
		print("The result of your transfer = ", '{:.2f}'.format(resultEuro))
		print("The result of your transfer = ", '{:.2f}'.format(resultYuan))
	else:
		print("Error! Enter only 1 or 2")
		exit(0)
	$ python3 Py-CurrencyConverter.py
	Dollar exchange rate:  61.3101
	Euro exchange rate:  62.5695
	Yuan exchange rate:  92.1636
	1) Convert to dollars, Euros, yuan
	2) Transfer from dollars, Euros, yuan
	Choose your actions:
	1
	Enter the number of rubles: 500
	The result of your transfer =  8.16
	The result of your transfer =  7.99
	The result of your transfer =  5.43
	$ python3 Py-CurrencyConverter.py
	Dollar exchange rate:  61.3101
	Euro exchange rate:  62.5695
	Yuan exchange rate:  92.1636
	1) Convert to dollars, Euros, yuan
	2) Transfer from dollars, Euros, yuan
	Choose your actions:
	2
	Enter the number of dollars: 1000
	Enter the number of euroes: 900
	Enter the number of yuans: 100
	The result of your transfer =  61310.10
	The result of your transfer =  56312.55
	The result of your transfer =  9216.36
	$ python3 Py-CurrencyConverter.py
	Dollar exchange rate:  61.3101
	Euro exchange rate:  62.5695
	Yuan exchange rate:  92.1636
	1) Convert to dollars, Euros, yuan
	2) Transfer from dollars, Euros, yuan
	Choose your actions:
	3
	Error! Enter only 1 or 2
	$ g++ Cpp-CurrencyConverter.cpp -o output
	$ ./output
	current dollar data: 61.3101
	current euro data: 62.5695
	current yuan data: 92.1636
	1) Convert to dollars, Euros, yuan
	2) Transfer from dollars, Euros, yuan
	Choose your actions: 1
	Enter the number of rubles: 500
	The result of your transfer = 8.15526
	The result of your transfer = 7.99111
	The result of your transfer = 5.42514
	$ ./output
	current dollar data: 61.3101
	current euro data: 62.5695
	current yuan data: 92.1636
	1) Convert to dollars, Euros, yuan
	2) Transfer from dollars, Euros, yuan
	Choose your actions: 2
	Enter the number of dollars: 1000
	Enter the number of euroes: 900
	Enter the number of yuans: 100
	The result of your transfer = 61310.1
	The result of your transfer = 56312.6
	The result of your transfer = 9216.36
	$ ./output
	current dollar data: 61.3101
	current euro data: 62.5695
	current yuan data: 92.1636
	1) Convert to dollars, Euros, yuan
	2) Transfer from dollars, Euros, yuan
	Choose your actions: 3
	Error! Enter only 1 or 2:
	https://github.com/David138it/MyFirstMiniProjects
	Task:
	Создайте простой калькулятор, который запускается через терминал.
	Decision:
	$ cat Cpp-Calculator.cpp
	#include <iostream>
	using namespace std;
	int main()
	{
		string repeat="y";
		while (repeat == "y"){
		    int numb1, numb2;
		    cout<<("Enter number1: ");
		    cin>>numb1;
		    cout<<("Enter number2: ");
		    cin>>numb2;
		    char operation;
		    cout<<("Enter the operation: ");
		    cin>>operation;
		    if (operation == '+')
		        cout<<(numb1 + numb2)<<endl;
		    else if (operation == '-')
		        cout<<(numb1 - numb2)<<endl;
		    else if (operation == '*')
		        cout<<(numb1 * numb2)<<endl;
		    else if (operation == '/'){
		        if (numb2 == 0)
		            cout<<("You cant divide by zero!")<<endl;
		        else
		            cout<<(numb1 / numb2)<<endl;
		    }else{
		        cout<<("Invalid operation")<<endl;
		    }
		    cout<<("Do you want to continue? (y/n): ");
		    cin>>repeat;
		    if (repeat == "n"){
		        break;
		    }
		    while (repeat!="y" && repeat!="n"){
		        cout<<("Please enter the correct answer (y/n): ");
		        cin>>repeat;
		    }
		}
		return 0;
	}
	$ cat Py-Calculator.py
	repeat="y"
	while repeat == "y":
	    numb1, numb2 = int(input("Enter number1: ")), int(input("Enter number2: "))
	    operation = input("Enter the operation: ")
	    if operation == '+':
	        print(numb1 + numb2)
	    elif operation == '-':
	        print(numb1 - numb2)
	    elif operation == '*':
	        print(numb1 * numb2)
	    elif operation == '/':
	        if numb2 == 0:
	            print('You cant divide by zero!')
	        else:
	            print(numb1 / numb2)
	    else:
	        print('Invalid operation')
	    repeat = input("Do you want to continue? (y/n): ")
	    if repeat == "n":
	        break
	    while (repeat!="y" and repeat!="n"):
	        repeat = input("Please enter the correct answer (y/n): ")
	$ python3 Py-Calculator.py
	Enter number1: 16
	Enter number2: 0
	Enter the operation: /
	You cant divide by zero!
	Do you want to continue? (y/n): t
	Please enter the correct answer (y/n): t
	Please enter the correct answer (y/n): y
	Enter number1: 16
	Enter number2: 1
	Enter the operation: t
	Invalid operation
	Do you want to continue? (y/n): y
	Enter number1: 16
	Enter number2: 1
	Enter the operation: -
	15
	Do you want to continue? (y/n): n
	$ g++ Cpp-Calculator.cpp -o output
	$ ./output
	Enter number1: 16
	Enter number2: 0
	Enter the operation: /
	You cant divide by zero!
	Do you want to continue? (y/n): t
	Please enter the correct answer (y/n): t
	Please enter the correct answer (y/n): y
	Enter number1: 16
	Enter number2: 1
	Enter the operation: t
	Invalid operation
	Do you want to continue? (y/n): y
	Enter number1: 16
	Enter number2: 1
	Enter the operation: -
	15
	Do you want to continue? (y/n): n

Аналитика сайта (Python, Web, Linux)
	Task:
	проверить все страницы на сайте, чтоб не было pdf файлов больше 15 Мб. Решал я данную задачу через командную строку в линукс двумя командами wget и find. thost.ru это наш сайт и нужно проверить например страницу - https://thost.ru/sveden/document
	Decision:
	$ wget -r -l 1 -A pdf https://thost.ru/sveden/document
	$ ls
	    thost.ru
	$ ls thost.ru/
	    Media  robots.txt.tmp  sveden
	$ ls thost.ru/Media/
	    irk
	$ ls thost.ru/Media/irk
	     А            Н             'Р з'
	    'Д и'  'П к'
	$ find /home/u/thost.ru/Media/irk -size +15M
	    /home/u/thost.ru/Media/irk/Д и/Документ 1.pdf
	    /home/u/thost.ru/Media/irk/Д и/Update/Документ 2.pdf
	    /home/u/thost.ru/Media/irk/Д и/Update/Документ 3.pdf
	$ ls -l irk.rpa-mu.ru/Media/irk/Д\ и/Update/
	    итого 84500
	    -rw-rw-r-- 1 u u  5000118 Okt  6  2016 'Документ 10.pdf'
	    -rw-rw-r-- 1 u u 10851743 Okt  6  2016 'Документ 9.pdf'
	    -rw-rw-r-- 1 u u 11842285 Okt  6  2016 'Документ 8.pdf'
	    -rw-rw-r-- 1 u u   816802 Okt  6  2016 'Документ 7.pdf'
	    -rw-rw-r-- 1 u u  3057757 Okt  6  2016 'Документ 6.pdf'
	    -rw-rw-r-- 1 u u 10681421 Okt  6  2016 'Документ 5.pdf'
	    -rw-rw-r-- 1 u u  3499499 Okt 17  2017 'Документ 4.pdf'
	    -rw-rw-r-- 1 u u 20055320 Jun 14  2018 'Документ 3.pdf'
	    -rw-rw-r-- 1 u u 20704036 Jun 14  2018 'Документ 2.pdf'
	Вот, пожалуйста, тут мы видим 2 документа в папке Update и 1 документ в папке "Д и" больше 15 Мб.

Добавил виртуальные машины, настроил виртуальные сети, распределил нагрузку между компонентами своей облачной системы и настроил автоматическое масштабирование веб-сервиса при неравномерной нагрузке
	Task:
	Set up SSH connection and file transfer using SCP.
	Decision:
	$ ls .ssh
	$ ssh-keygen -t rsa
	Generating publi-c/private rsa key pair.
	Enter file in whi-ch to save the key (/home/u/.ssh/id_rsa): ubalt
	Enter passphrase (empty for no passphrase):
	Enter same passphrase again:
	Your identifi-cation has been saved in ubalt
	Your publi-c key has been saved in ubalt.pub
	The key fingerprint is:
	SHA256:H tuser@thost1
	The key's randomart image is:
	+---[RSA 3072]----+
	|  .==..+.=*++ .o |
	...
	|   .o            |
	+----[SHA256]-----+
	$ ls
	 snap       'VirtualBox VMs'   Загрузки      Общедоступные
	 ubalt       Видео             Изображения  'Рабочий стол'
	 ubalt.pub   Документы         Музыка        Шаблоны
	$ ssh-copy-id -i ubalt.pub tuser@taddress
	/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "ubalt.pub"
	The authenti-city of host '1.-.9 (1.-.9)' can't be established.
	ED25519 key fingerprint is SHA256:v.
	This key is not known by any other names
	Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
	/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
	/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
	tuser@taddress's password:
	Number of key(s) added: 1
	Now try logging into the machine, with:   "ssh 'tuser@taddress'"
	and check to make sure that only the key(s) you wanted were added.
	$ cat ubalt.pub
	ssh-rsa A0/l/E/l/J= tuser@thost1
	$ ssh-agent bash
	$ ssh-add ubalt
	Enter passphrase for ubalt:
	Identity added: ubalt (tuser@thost1)
	$ ssh tuser@taddress
	$ cat .ssh/authorized_keys
	# OpenSSH authorized_keys file for-tat is described in sshd(8) manual page.
	ssh-rsa A0/l/E/l/J= tuser@thost1
	Decision:
	$ sudo ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key
	Generating publi-c/private dsa key pair.
	Enter passphrase (empty for no passphrase):
	Enter same passphrase again:
	Your identifi-cation has been saved in /etc/ssh/ssh_host_dsa_key
	Your publi-c key has been saved in /etc/ssh/ssh_host_dsa_key.pub
	The key fingerprint is:
	SHA256:lu4Mlc9dcmKNPriYzDMyGQsaG0/+c5+iyN9aEPL+/RQ root@i
	The key's randomart image is:
	+---[DSA 1024]----+
	|                 |
	...
	|    oo=BX==..    |
	+----[SHA256]-----+
	$ ls -l /etc/ssh/ssh_host_dsa*
	-rw------- 1 root root 1434 авг  9 13:14 /etc/ssh/ssh_host_dsa_key
	-rw-r--r-- 1 root root  607 авг  9 13:14 /etc/ssh/ssh_host_dsa_key.pub
	$ ssh tuser@taddress
	$ exit
	Decision:
	$ ssh -X tuser@taddress
	$ nautilus
	-bash: nautilus: команда не найдена
	$ firefox
	Decision:
	$ touch test.txt
	$ scp test.txt tuser@taddress:/home/u
	test.txt                                      100%    0     0.0KB/s   00:00    
	$ ssh tuser@taddress
	$ ls -l te*
	-rw-r--r-- 1 user user 0 авг  9 13:26 test.txt
	$ exit
	Decision:
	$ ping ya.ru
	PING ya.ru (87.250.250.242) 56(84) bytes of data.
	64 bytes from ya.ru (87.250.250.242): i-cmp_seq=1 ttl=245 time=61.6 ms
	64 bytes from ya.ru (87.250.250.242): i-cmp_seq=2 ttl=245 time=61.5 ms
	64 bytes from ya.ru (87.250.250.242): i-cmp_seq=3 ttl=245 time=61.3 ms
	^C
	--- ya.ru ping statisti-cs ---
	3 packets transmitted, 3 received, 0% packet loss, time 2002ms
	rtt min/avg/max/mdev = 61.325/61.461/61.602/0.113 ms
	$ ssh tuser@taddress -N -L 12345:87.250.250.242:80

	web - http://localhost:12345/
	Source:
	1.https://www.youtube.com/playlist?list=PLmxB7JSpraieH3aScuPs7h77cSEQvPi2A

Настройка локальной DNS-сети (Windows)
	Task:
	Установить DHCP и DNS сервера, добавить в домен клиентского компьютера, и проверить их работоспособность. Делать это все мы будем в виртуальной машине KVM с установленными операционными системами Windows Server 2019 и Windows 10. В KVM когда настраиваем сеть операционных систем, нужно подключить внутреннюю сеть и в неразборчивом режиме разрешить все. После чего для настройки сервера запускаем Windows Server 2019
	Decision:
	1. Диспетчер серверов - Локальная сеть - ipv4 - уберем галочку ipv6 - нажмем на ipv4 - настроить - прописать адреса: 
	ip-адрес 192.168.0.1
	маска подсети 255.255.255.0
	Основной шлюз 192.168.0.1
	Предпочитаемый Днс-сервер 8.8.8.8
	диспетчер серверов - Локальная сеть - имя компьютера - изменить (например, Server) - перезагрузиться
	2. Диспетчер серверов - Локальная сеть - управление - добавить роли и компоненты - тип установки - установка ролей и компонентов - выбор сервера - видим наш сервер (Server) и выбираем его - роли сервера ставим флажок на DNS-сервер и доменные службы Activity Directory - компоненты - Windows Powershell - подтверждаем - ставим галочку на автоматический перезапуск - устанавливаем - Диспетчер серверов - Локальная сеть - видим восклицательный знак - Выбираем повысить роли и компоненты -  в конфигурации развертывания - добавить новый лес - даем имя корневого раздела (на моем примере - server.local) - придумываем пароль, имя домена - устанавливаем
	3. Диспетчер серверов - Локальная сеть - Средства - DNS - в зоне обратного просмотра правой кнопкой мыши создаем новую зону -  добавляем идентификатор сети. 
	4. Сеть и интернет - центр управления сетями - дополнительные параметры - оставляем флажки на "включить сетевые обнаружения" и "включить общий доступ к файлам и принтерам" - После сохранения, вернемся обратно и снова зайдем в дополнительные парметры - увидиим что сохранения не изменинились. Для этого нужно зайти в диспетчер задач - службы - находим Публикация ресурсов обнаружения функции, Обнаружение SSDP - тип запуска у всех Автоматически - запускаем - Сеть и интернет - центр управления сетями - дополнительные параметры - оставляем флажки на "включить сетевые обнаружения" и "включить общий доступ к файлам и принтерам"
	5. Диспетчер серверов - Локальная сеть - Управление - добавить роли и компоненты - тип установки - установка ролей и компонентов - роли сервера - добавим флажок на DHCP-сервер - подтверждаем - ставим галочку на автоматический перезапуск - устанавливаем - Также по восклицательному знаку в разделе Локальная сеть - настраиваем DHCP - имя пользователя - добавляем то самое имя учетной записи, с которой мы все это настраиваем (в моем случае - Администратор) - фиксируем - Диспетчер серверов - Локальная сеть - средства - DHCP - IPv4 правой кнопкой мыши создаем область - пишем имя области (в моем случае - Server) - добавляем диапозон айпи адресов и маску:
	Начальный IP адрес 192.168.0.10
	Конечный IP адрес 192.168.0.20
	Длина 24
	маска подсети 255.255.255.0
	срок действия аренды я выбрал 1 день - добавляем айпи адрес маршрутизатора 192.168.0.1.
	В DHCP - IPv4 - область 192.168.0.0 - пул ардесов - должна появиться инфа по DHCP
	6. панельуправлени - система безопасности - брандмауер - включение и отключение брандмауера
	7. У клиента Windows 10 свойства компьютера - изменить настройки,изменить - ставим флажок на добавление домена - вводим в домен (в моем случае это server.local) - вводим данные сервера (имя и пароль учетки сервера) - После перезагрузки можем спокойно работать в домене.
	8. Вернемся к серверу - меню пуск - администрирование - DHCP-сервер - IPv4 - область - арендованные адреса видим наш клиентский компьютер
	Source:
	1. https://www.youtube.com/playlist?list=PL90TRL5CLgV68UQJZIWU_aoQhQGSXZJiS

Установка и настройка дистрибутива Linux на второй диск рядом с Windows и программы qemu-kvm, в которой подключил дополнительные системы Windows 10, Server 2012 r2, Ubuntu, Centos, Kali, Alt (Linux, Windows, Devops)
	Task:
	Установить Centos рядом с Windows
	Decision:
	1. Скачиваем iso-файл с официального сайта Centos - Запускаем Rufus - Выбираем скаченный ISO файл дистрибутива и схему раздела (Если на старые компьютеры, то нужно выбрать MBR и целевую систему Bios, Файловую систему — Fat32, а размер кластера — 4068 байт, а если же компьютеры по новее и поддерживают Uefi, тогда выбираем в схеме раздела GPT и целевую систему Uefi)
	2. После успешной установки, загрузимся с флешки - в биосе настроиваем приоритет загрузчика, чтоб первая запускалась загрузочная флешка 
	3. Перейдём к установке операционной системы - выбираем Install - выбрать размер разделов - поменяем систему разметки LVM на Standart Portition - нажимаем на click here to create them autmaticaly - установщик автоматически разделит диск - уменьшить размер корневого раздела / и раздел /home - Меняю у них размеры - Done - интернет настроить в Network & Host Name - Ethernet переключаем тумблер - Done - software Slection - minmal install- Done - запуск
	Task:
	После установки Linux на Windows, Windows показывает неправильное время
	Decision:
	Win+R ->regedit -> HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInfor-tation -> Щелкаем правой кнопкой мыши в правой части окна -> новый параметр DWORD(32) -> имя — RealTimeIsUniversal -> щелкаем по новому параметру два раза -> значение 1 -> Перезагружаемся
	Task:
	Для воспроизведения видео вам может потребоваться установить необходимые видеокодеки
	Decision:
	$ sudo dnf update -y
	$ sudo dnf config-manager --set-enabled crb
	$ sudo dnf install -y epel-release epel-next-release
	$ dnf repolist
	$ sudo dnf install -y https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-9.noarch.rpm
	$ sudo dnf install -y https://mirrors.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-9.noarch.rpm
	$ sudo dnf install -y ffmpeg ffmpeg-devel
	$ ffmpeg -version
	Source:
	1. https://setiwik.ru/kak-vklyuchit-repozitoriy-epel-v-centos-9-stream/
	2. https://setiwik.ru/kak-ustanovit-ffmpeg-na-centos-9-stream/?ysclid=lkordttfyw687770645
	Task:
	Установить программу Qemu-Kvm для виртуализации систем
	Decision:
	$ egrep -c '(vmx|svm)' /proc/cpuinfo
	8
	$ sudo dnf install qemu-kvm qemu-img libvirt virt-install libvirt-client virt-manager
	$ lsmod | grep kvm
	kvm_intel             409600  0
	kvm                  1138688  1 kvm_intel
	irqbypass              16384  1 kvm
	$ sudo systemctl enable --now libvirtd
	$ systemctl status libvirtd
	$ sudo virt-host-validate
		QEMU: проверка для аппаратной виртуализации      : OK
	    QEMU: проверка if device /dev/kvm exists                                   : OK
	    QEMU: проверка if device /dev/kvm is accessible                            : OK
	    QEMU: проверка if device /dev/vhost-net exists                             : OK
	    QEMU: проверка if device /dev/net/tun exists                               : OK
	    QEMU: проверка for cgroup 'cpu' controller support                         : OK
	    QEMU: проверка for cgroup 'cpuacct' controller support                     : OK
	    QEMU: проверка for cgroup 'cpuset' controller support                      : OK
	    QEMU: проверка for cgroup 'memory' controller support                      : OK
	    QEMU: проверка for cgroup 'devices' controller support                     : OK
	    QEMU: проверка for cgroup 'blkio' controller support                       : OK
	    QEMU: проверка для поддержки сопоставления устройств IOMMU: OK
	    QEMU: проверка если блок IOMMU включён в ядре          : ПРЕДУПРЕЖДЕНИЕ (IOMMU appears to be disabled in kernel. Add intel_iommu=on to kernel cmdline arguments)
	    QEMU: проверка для поддержки безопасных гостевых систем: ПРЕДУПРЕЖДЕНИЕ (Unknown if this platform has Secure Guest support)
	Source:
	https://technixleo.com/install-kvm-on-centos-alma-rhel-9/
	Task:
	Подключить системы Windows, Ubuntu, Centos в KVM
	Decision:
	1. Запустить KVM - Создать виртуальную машину - обычная установка загрузочной флешки - ставим флешку в компьютер, который нужно установить винду - В биосе нужно настроить приоритет загрузчика, чтобы запускалась первая флешка. - выбрать язык и формат времени - тип установки - выборочная установка для опытных пользователей - создать раздел в свободное место - выделить размер для создания диска - Установка сама автоматически разделит выделенный вами диск - Соглашаемся - Запустится процесс установки, происходящий в полностью автоматическом режиме.
	2. Локальный Iso - Выбрать образ и название операционной системы - Выбираем оперативнаяпамять и процессор - Задать объем хранения - начать - дальше идет обычная установка ОС
	3. Для Windows 10 выбрать язык и формат времени - тип установки - выборочная установка для опытных пользователей - создать раздел в свободное место - выделить размер для создания диска - Установка сама автоматически разделит выделенный вами диск - Соглашаемся - Запустится процесс установки, происходящий в полностью автоматическом режиме.
	4. Для Kali в меню выбираем Install - Указываем язык, на котором будет работать установщик и саму систему - Выбираем имя компьютера - Указываем имя домена, если это нужно - Если нужна установка Kali Linux на домашний компьютер, то можно просто поставить local - Вводим пароль пользователя root - Вы можете использовать весь диск, просто применив автоматическую разметку, но мы рассмотрим ручной вариант, поэтому в этом меню выбираем вручную - Затем выбираем наш жёсткий диск, например sda - Если вы устанавливаете Kali Linux на чистый диск, то нужно создать новую таблицу разделов, поэтому выберите пункт Да с помощью Tab - Выбираем свободное место - создаем новый раздел - вводим размер раздела для корня минимальный размер -тип раздела первичный -расположение в начале -В последнем окне мастера ничего ни настраивать, ни менять не нужно. Но тут вы можете выбрать файловую систему, количество места, зарезервированного под root, и метку раздела - Нажимаем Настройка раздела закончена - Точно так же создаем раздел подкачки - на последнем шаге мастера выберите Использовать как раздел подкачки - затем снова настройка закончена - По такому же алгоритму создаётся домашний раздел - Закончить разметку и записать изменения на диск.
	5. Для Ubuntu выбрать способ, которым будет выполнена разметка жёсткого диска - выполним разметку диска для Ubuntu вручную "Свой вариант"- У меня установлена ОС - для создания раздела выберите пункт свободное пространство - нажмите кнопку со знаком плюс - выбрать размер раздела не менее 300 мегабайт - качестве файловой системы берём самую простую поддерживаемую ext2 - B корневом разделе сделать больше — 20-30 Гб, чтобы вам было достаточно для установки программ - Файловая система может быть zfs, btrfs, ext4 или reiserfs - Точка монтирования / - Для создании домашнего раздела выберите всё оставшееся свободное пространство - файловые системы желательно взять ext4 -Точка монтирования /home
	6. Для Centos и Redos та же самая процедура, что мы делали выше

Утилита сетевого сканирования Nmap и настройка правил iptables и утилиты антируткит (Linux)
	Decision:
	https://github.com/David138it/MyPortfolio/tree/main/TaskDecision/Engineer-Isu
	Task:
	разрешить ip 10.0.0.1 доступ к любым портам сервера. в iptables на INPUT все запрещено.
	Decision:
	# iptables -I INPUT -s 10.0.0.1 -j ACCEPT
	Task:
	Разрешаем пакеты на 80‐й порт.
	Decision:
	# iptables -A INPUT -p tcp --dport 80 -j ACCEPT
	Task:
	Напишем скрипт, где разрешим доступ к нашим службам, все остальное запретим. В наборе правил iptables мы разрешим все исходящие соединения и строго ограничиваем входящие. Доступ будет возможен по портам TCP: 21, 22, 25, 53, 80, 143, 443, по портам UDP: 20, 21, 53, также мы пропускаем пакеты для уже установленных соединений. Но сначала отключим firewalld
	Decision:
	# ifconfig
	    enp0s3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST> mtu 1500
	    inet 192.168.0.104 netmask 255.255.255.0 broadcast 192.168.0.255
	    inet6 fe80::8d4f:7215:fad0:e632 prefixlen 64 scopeid 0x20<link>
	    ether 08:00:27:77:a2:2c txqueuelen 1000 (Ethernet)
	    RX packets 26123 bytes 34182876 (32.5 MiB)
	    RX errors 0 dropped 0 overruns 0 frame 0
	    TX packets 8486 bytes 1077840 (1.0 MiB)
	    TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0
	    # systemctl status firewalld
	    ● firewalld.service - firewalld - dynamic firewall daemon
	    Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor p>
	    Active: active (running) since Sun 2020-04-12 00:33:34 EDT; 5min ago
	    Docs: man:firewalld(1)
	    Main PID: 1063 (firewalld)
	    Tasks: 2 (limit: 23980)
	    Memory: 31.1M
	    CGroup: /system.slice/firewalld.service
	    └─1063 /usr/libexec/platform-python -s /usr/sbin/firewalld --nofork >
	    апр 12 00:33:27 linux.centos systemd[1]: Starting firewalld - dynamic firewall >
	    апр 12 00:33:34 linux.centos systemd[1]: Started firewalld - dynamic firewall d>
	# systemctl stop firewalld
	# systemctl disable firewalld
	    Removed /etc/systemd/system/multi-user.target.wants/firewalld.service.
	    Removed /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.
	    # systemctl status firewalld
	    ● firewalld.service - firewalld - dynamic firewall daemon
	    Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor >
	    Active: inactive (dead)
	    Docs: man:firewalld(1)
	    апр 12 00:33:27 linux.centos systemd[1]: Starting firewalld - dynamic firewall >
	    апр 12 00:33:34 linux.centos systemd[1]: Started firewalld - dynamic firewall d>
	    апр 12 00:38:47 linux.centos systemd[1]: Stopping firewalld - dynamic firewall >
	    апр 12 00:38:48 linux.centos systemd[1]: Stopped firewalld - dynamic firewall d>
	Task:
	Проверяем наличие пакета iptables и Выводим список текущих правил iptables
	Decision:
	# rpm -q iptables
	    iptables-1.8.2-16.el8.x86_64
	# systemctl status iptables.service
	    Unit iptables.service could not be found.
	# systemctl status iptables.service
	# yum -y install iptables-services
	# systemctl status iptables.service
	    ● iptables.service - IPv4 firewall with iptables
	    Loaded: loaded (/usr/lib/systemd/system/iptables.service; disabled; vendor p>
	    Active: inactive (dead)
	# systemctl enable iptables.service
	    Created symlink /etc/systemd/system/basic.target.wants/iptables.service → /usr/lib/systemd/system/iptables.service.
	# systemctl start iptables.service
	# systemctl status iptables.service
	    ● iptables.service - IPv4 firewall with iptables
	    Loaded: loaded (/usr/lib/systemd/system/iptables.service; enabled; vendor pr>
	    Active: active (exited) since Sun 2020-04-12 00:41:29 EDT; 2s ago
	    Process: 5513 ExecStart=/usr/libexec/iptables/iptables.init start (code=exite>
	    Main PID: 5513 (code=exited, status=0/SUCCESS)
	    апр 12 00:41:29 linux.centos systemd[1]: Starting IPv4 firewall with iptables...
	    апр 12 00:41:29 linux.centos iptables.init[5513]: iptables: Applying firewall r>
	    апр 12 00:41:29 linux.centos systemd[1]: Started IPv4 firewall with iptables.
	# iptables -L
	    Chain INPUT (policy ACCEPT)
	    target prot opt source destination
	    Chain FORWARD (policy ACCEPT)
	    target prot opt source destination
	    Chain OUTPUT (policy ACCEPT)
	    target prot opt source destination
	Task:
	Политика по умолчанию сейчас Accept. Сейчас принимаются все пакеты и никакой фильтрации не происходит, значит система полностью открыта для вторжения. С удаленной машины просканируем порты на нашем сервере, какие открыты. И напишем простой скрипт для iptables.
	Decision:
	# nmap 192.168.0.104
	    Starting Nmap 7.60 ( https://nmap.org ) at 2020-04-12 05:17 MSK
	    Nmap scan report for 192.168.0.104
	    Host is up (0.0011s latency).
	    Not shown: 999 filtered ports
	    PORT STATE SERVICE
	    22/tcp open ssh
	    MAC Address: 08:00:27:77:A2:2C (Oracle VirtualBox virtual NIC)
	    Nmap done: 1 IP address (1 host up) scanned in 5.97 seconds
	# vim /etc/iptables.sh
	# cat /etc/iptables.sh
	    #!/bin/bash
	    #переназначить переменные
	    export IPT="iptables"
	    #Перед применением новых правил, очищаем все цепочки:
	    $IPT -F
	    $IPT -X
	    #Блокируем весь трафик, который не соответствует ни одному из правил
	    $IPT -P INPUT DROP
	    $IPT -P FORWARD DROP
	    $IPT -P OUTPUT DROP
	    # Разрешаем пакеты для интерфейса обратной петли. Это нужно для нормальной работы в операционной системе
	    $IPT -A INPUT -i lo -j ACCEPT
	    $IPT -A OUTPUT -o lo -j ACCEPT
	    # Дальше разрешаем пакеты для установленных соединений.
	    $IPT -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
	    # Разрешаем исходящие соединения.
	    $IPT -A OUTPUT -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
	    # Разрешаем доступ к портам TCP и UDP.
	    $IPT -A INPUT -p tcp -m multiport --dport 21 -j ACCEPT
	    $IPT -A INPUT -p tcp -m multiport --dport 22 -j ACCEPT
	    $IPT -A INPUT -p tcp -m multiport --dport 25 -j ACCEPT
	    $IPT -A INPUT -p tcp -m multiport --dport 53 -j ACCEPT
	    $IPT -A INPUT -p tcp -m multiport --dport 80 -j ACCEPT
	    $IPT -A INPUT -p tcp -m multiport --dport 143 -j ACCEPT
	    $IPT -A INPUT -p tcp -m multiport --dport 443 -j ACCEPT
	    $IPT -A INPUT -p udp -m multiport --dport 53 -j ACCEPT
	    $IPT -A INPUT -p udp -m multiport --dport 21 -j ACCEPT
	    $IPT -A INPUT -p udp -m multiport --dport 20 -j ACCEPT
	    # Разрешаем исходящий ping.
	    $IPT -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
	# ls -l /etc/iptables.sh
	    -rw-r--r--. 1 root root 1334 апр 11 21:17 iptables.sh
	# chmod +x /etc/iptables.sh
	# ls -l /etc/iptables.sh
	    -rwxr-xr-x. 1 root root 1898 апр 12 01:10 /etc/iptables.sh
	# cd /etc/
	# ./iptables.sh
	# iptables -L
	    Chain INPUT (policy DROP)
	    target prot opt source destination
	    ACCEPT all -- anywhere anywhere
	    ACCEPT all -- anywhere anywhere state RELATED,ESTABLISHED
	    ACCEPT tcp -- anywhere anywhere multiport dports ftp
	    ACCEPT tcp -- anywhere anywhere multiport dports ssh
	    ACCEPT tcp -- anywhere anywhere multiport dports smtp
	    ACCEPT tcp -- anywhere anywhere multiport dports domain
	    ACCEPT tcp -- anywhere anywhere multiport dports http
	    ACCEPT tcp -- anywhere anywhere multiport dports imap
	    ACCEPT tcp -- anywhere anywhere multiport dports https
	    ACCEPT udp -- anywhere anywhere multiport dports domain
	    ACCEPT udp -- anywhere anywhere multiport dports ftp
	    ACCEPT udp -- anywhere anywhere multiport dports ftp-data
	    ACCEPT icmp -- anywhere anywhere icmp echo-reply
	    Chain FORWARD (policy DROP)
	    target prot opt source destination
	    Chain OUTPUT (policy DROP)
	    target prot opt source destination
	    ACCEPT all -- anywhere anywhere
	    ACCEPT all -- anywhere anywhere state NEW,RELATED,ESTABLISHED
	Task:
	С удаленной машины просканируем порты на нашем сервере, какие открыты увидим
	Decision:
	# nmap 192.168.0.104
	    Starting Nmap 7.60 ( https://nmap.org ) at 2020-04-12 08:31 MSK
	    Nmap scan report for 192.168.0.104
	    Host is up (0.0010s latency).
	    Not shown: 993 filtered ports
	    PORT STATE SERVICE
	    21/tcp closed ftp
	    22/tcp open ssh
	    25/tcp closed smtp
	    53/tcp closed domain
	    80/tcp closed http
	    143/tcp closed imap
	    443/tcp closed https
	    MAC Address: 08:00:27:77:A2:2C (Oracle VirtualBox virtual NIC)
	    Nmap done: 1 IP address (1 host up) scanned in 21.15 seconds
	# service iptables save
	    iptables: Saving firewall rules to /etc/sysconfig/iptables:[ OK ]
	Task:
	Чтобы сбросить правила
	Decision:
	# rm -f /etc/sysconfig/iptables
	Task:
	Если сетевых интерфейсов два или более, то необходимо включить перенаправление трафика. Для этого в файле /etc/sysctl.conf строку net.ipv4.ip_forward = 0 меняем на net.ipv4.ip_forward = 1.тут мы включаем ip-forward.
	Decision:
	# ifconfig
	    enp0s3:...
	    enp0s8:...
	    lo: ...
	# vim /etc/sysctl.conf
	# cat /etc/sysctl.conf
	    ...
	    # Uncomment the next line to enable packet forwarding for IPv4
	    net.ipv4.ip_forward=1
	    ...
	# sysctl -p /etc/sysctl.conf
	    net.ipv4.ip_forward = 1
	Настройка firewall (ufw)
	Task:
	Посмотрим наcтройку файрвола в убунту. Разрешаем подключения на 22 порт(ssh) и 443 порт(https). Разрешаем подключения на 80 порт(http) с сети 192.168.0.99 на любой any адрес сервера, from-отккуда приходит пакет, to - куда.
	Decision:
	# sudo ufw allow 22
	    Правила обновлены
	    Правила обновлены (v6)
	# sudo ufw allow 443
	    Правила обновлены
	    Правила обновлены (v6)
	# sudo ufw allow from 192.168.0.99 to any port 80
	    Правила обновлены
	# sudo ufw allow from 192.168.0.99 to any port 80 proto tcp
	    Правила обновлены
	# sudo ufw allow from 192.168.0.99/24 to any port 80 proto tcp
	    WARN: Правило изменено после нормализации
	    Правила обновлены
	# sudo ufw status verbose
	    Состояние: неактивен
	# sudo ufw enable
	    Межсетевой экран включён и будет запускаться при запуске системы
	# sudo ufw status verbose
	    Состояние: активен
	    Журналирование: on (low)
	    По умолчанию: deny (входящие), allow (исходящие), disabled (маршрутизированные)
	    Новые профили: skip
	    В Действие Из
	    - -------- --
	    22 ALLOW IN Anywhere
	    443 ALLOW IN Anywhere
	    80 ALLOW IN 192.168.0.99
	    80/tcp ALLOW IN 192.168.0.99
	    80/tcp ALLOW IN 192.168.0.0/24
	    22 (v6) ALLOW IN Anywhere (v6)
	    443 (v6) ALLOW IN Anywhere (v6)
	Task:
	Видим что логирование у нас включено, по умолчанию low. деволтные поведения входящие трафик запрещают deny, исходящий - разрешают allow и отключены. видим наши правила.
	Нумерованный список правил
	Decision:
	# sudo ufw status numbered
	    Состояние: активен
	    В Действие Из
	    - -------- --
	    [ 1] 22 ALLOW IN Anywhere
	    [ 2] 443 ALLOW IN Anywhere
	    [ 3] 80 ALLOW IN 192.168.0.99
	    [ 4] 80/tcp ALLOW IN 192.168.0.99
	    [ 5] 80/tcp ALLOW IN 192.168.0.0/24
	    [ 6] 22 (v6) ALLOW IN Anywhere (v6)
	    [ 7] 443 (v6) ALLOW IN Anywhere (v6)
	# sudo ufw allow 443/tcp
	    Правило добавлено
	    Правило добавлено (v6)
	# sudo ufw status numbered
	    Состояние: активен
	    В Действие Из
	    - -------- --
	    [ 1] 22 ALLOW IN Anywhere
	    [ 2] 443 ALLOW IN Anywhere
	    [ 3] 80 ALLOW IN 192.168.0.99
	    [ 4] 80/tcp ALLOW IN 192.168.0.99
	    [ 5] 80/tcp ALLOW IN 192.168.0.0/24
	    [ 6] 443/tcp ALLOW IN Anywhere
	    [ 7] 22 (v6) ALLOW IN Anywhere (v6)
	    [ 8] 443 (v6) ALLOW IN Anywhere (v6)
	    [ 9] 443/tcp (v6) ALLOW IN Anywhere (v6)
	Task:
	Удаляем правило allow 443
	Decision:
	# sudo ufw delete allow 443
	    Правило удалено
	    Правило удалено (v6)
	# sudo ufw status numbered
	    Состояние: активен
	    В Действие Из
	    - -------- --
	    [ 1] 22 ALLOW IN Anywhere
	    [ 2] 80 ALLOW IN 192.168.0.99
	    [ 3] 80/tcp ALLOW IN 192.168.0.99
	    [ 4] 80/tcp ALLOW IN 192.168.0.0/24
	    [ 5] 443/tcp ALLOW IN Anywhere
	    [ 6] 22 (v6) ALLOW IN Anywhere (v6)
	    [ 7] 443/tcp (v6) ALLOW IN Anywhere (v6)
	Task:
	Добавляем правило на разрешение для сервиса ssh
	Decision:
	# sudo ufw allow ssh
	    Правило добавлено
	    Правило добавлено (v6)
	# sudo ufw status numbered
	    Состояние: активен
	    В Действие Из
	    - -------- --
	    [ 1] 22 ALLOW IN Anywhere
	    [ 2] 80 ALLOW IN 192.168.0.99
	    [ 3] 80/tcp ALLOW IN 192.168.0.99
	    [ 4] 80/tcp ALLOW IN 192.168.0.0/24
	    [ 5] 443/tcp ALLOW IN Anywhere
	    [ 6] 22/tcp ALLOW IN Anywhere
	    [ 7] 22 (v6) ALLOW IN Anywhere (v6)
	    [ 8] 443/tcp (v6) ALLOW IN Anywhere (v6)
	    [ 9] 22/tcp (v6) ALLOW IN Anywhere (v6)
	# sudo ufw allow mysql
	    Правило добавлено
	    Правило добавлено (v6)
	# sudo ufw status numbered
	    Состояние: активен
	    В Действие Из
	    - -------- --
	    [ 1] 22 ALLOW IN Anywhere
	    [ 2] 80 ALLOW IN 192.168.0.99
	    [ 3] 80/tcp ALLOW IN 192.168.0.99
	    [ 4] 80/tcp ALLOW IN 192.168.0.0/24
	    [ 5] 443/tcp ALLOW IN Anywhere
	    [ 6] 22/tcp ALLOW IN Anywhere
	    [ 7] 3306 ALLOW IN Anywhere
	    [ 8] 22 (v6) ALLOW IN Anywhere (v6)
	    [ 9] 443/tcp (v6) ALLOW IN Anywhere (v6)
	    [10] 22/tcp (v6) ALLOW IN Anywhere (v6)
	    [11] 3306 (v6) ALLOW IN Anywhere (v6)
	Task:
	Удалить запись №7
	Decision:
	# sudo ufw delete 7
	    Удаление:
	    allow 3306
	    Продолжить операцию (y|n)? y
	    Правило удалено
	# sudo ufw delete 10
	    Удаление:
	    allow 3306
	    Продолжить операцию (y|n)? y
	    Правило удалено (v6)
	# sudo ufw status numbered
	    Состояние: активен
	    В Действие Из
	    - -------- --
	    [ 1] 22 ALLOW IN Anywhere
	    [ 2] 80 ALLOW IN 192.168.0.99
	    [ 3] 80/tcp ALLOW IN 192.168.0.99
	    [ 4] 80/tcp ALLOW IN 192.168.0.0/24
	    [ 5] 443/tcp ALLOW IN Anywhere
	    [ 6] 22/tcp ALLOW IN Anywhere
	    [ 7] 22 (v6) ALLOW IN Anywhere (v6)
	    [ 8] 443/tcp (v6) ALLOW IN Anywhere (v6)
	    [ 9] 22/tcp (v6) ALLOW IN Anywhere (v6)
	# sudo ufw delete 2
	    Удаление:
	    allow from 192.168.0.99 to any port 80
	    Продолжить операцию (y|n)? y
	    Правило удалено
	Task:
	Вставить в запись №2 - Разрешаем подключения на 80 порт(http) с подсети 192.168.0.99 на любой адрес сервера
	Decision:
	# sudo ufw insert 2 allow from 192.168.0.99/24 to any port 80
	    WARN: Правило изменено после нормализации
	    Правило вставлено
	# sudo ufw status numbered
	    Состояние: активен
	    В Действие Из
	    - -------- --
	    [ 1] 22 ALLOW IN Anywhere
	    [ 2] 80 ALLOW IN 192.168.0.0/24
	    [ 3] 80/tcp ALLOW IN 192.168.0.99
	    [ 4] 80/tcp ALLOW IN 192.168.0.0/24
	    [ 5] 443/tcp ALLOW IN Anywhere
	    [ 6] 22/tcp ALLOW IN Anywhere
	    [ 7] 22 (v6) ALLOW IN Anywhere (v6)
	    [ 8] 443/tcp (v6) ALLOW IN Anywhere (v6)
	    [ 9] 22/tcp (v6) ALLOW IN Anywhere (v6)
	Task:
	Выключить и включить лог (записывается в /var/log/ufw.log). Устанавливаем подробность лога в medium. Пробуем к нему подключиться черезз putty другом компе портом 21. и нас не пустят.
	Decision:
	# sudo ufw logging off
	    Журналирование отключено
	# sudo ufw logging on
	    Журналирование включено
	# sudo ufw logging medium
	    Журналирование включено
	Task:
	Поиск и вывод логов UFW в syslog.
	    Где SRC - ip нашей машины;
	    DST - ip сервера;
	    IN - на какой интерфейс пришел;
	    UFW - дейтвия,
	    BLOCK - блокирование;
	    PROTO - протокол;
	    SPT - исходящий порт;
	    DPT - входящий порт.
	Decision:
	# grep UFW /var/log/syslog
	    Mar 3 09:20:34 VirtualBox kernel: [ 2823.975294] [UFW BLOCK] IN=enp0s3 OUT= MAC=01:00:5e:00:00:01:1c:7e:e5:dc:92:1a:08:00 SRC=192.168.0.1 DST=224.0.0.1 LEN=28 TOS=0x00 PREC=0xC0 TTL=1 ID=28822 PROTO=2
	    ...
	    Mar 3 09:53:10 VirtualBox kernel: [ 4780.241816] [UFW AUDIT] IN=enp0s3 OUT= MAC=33:33:00:00:00:fb:f4:31:c3:4f:d1:78:86:dd SRC=fe80:0000:0000:0000:04e0:141f:6053:8700 DST=ff02:0000:0000:0000:0000:0000:0000:00fb LEN=121 TC=0 HOPLIMIT=255 FLOWLBL=671786 PROTO=UDP SPT=5353 DPT=5353 LEN=81
	Task:
	Просканируем удаленный хост Ubuntu VirtualBox. Ho cначала узнаем его адрес
	Decision:
	# yum -y install nmap
	# ifconfig
	    enp0s3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST> mtu 1500
	    inet 10.0.2.15 netmask 255.255.255.0 broadcast 10.0.2.255
	    inet6 fe80::3f30:7b04:904b:eb02 prefixlen 64 scopeid 0x20<link>
	    ether 08:00:27:49:c9:e9 txqueuelen 1000 (Ethernet)
	    RX packets 124 bytes 8440 (8.4 KB)
	    RX errors 0 dropped 0 overruns 0 frame 0
	    TX packets 552 bytes 48413 (48.4 KB)
	    TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0
	    enp0s8: flags=4163<UP,BROADCAST,RUNNING,MULTICAST> mtu 1500
	    inet 12.18.0.104 netmask 255.255.255.0 broadcast 12.18.0.255
	    inet6 fe80::25f1:ad4f:8afc:2f43 prefixlen 64 scopeid 0x20<link>
	    ether 08:00:27:b3:5f:f4 txqueuelen 1000 (Ethernet)
	    RX packets 37769 bytes 53691740 (53.6 MB)
	    RX errors 0 dropped 0 overruns 0 frame 0
	    TX packets 4774 bytes 449196 (449.1 KB)
	    TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0
	    lo: flags=73<UP,LOOPBACK,RUNNING> mtu 65536
	    inet 127.0.0.1 netmask 255.0.0.0
	    inet6 ::1 prefixlen 128 scopeid 0x10<host>
	    loop txqueuelen 1000 (Локальная петля (Loopback))
	    RX packets 445 bytes 47613 (47.6 KB)
	    RX errors 0 dropped 0 overruns 0 frame 0
	    TX packets 445 bytes 47613 (47.6 KB)
	    TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0
	# nmap -A -T5 12.18.0.104
	    Starting Nmap 7.70 ( https://nmap.org ) at 2020-04-01 01:48 EDT
	    Warning: 12.18.0.104 giving up on port because retransmission cap hit (2).
	    Nmap scan report for 12.18.0.104
	    Host is up (0.0027s latency).
	    Not shown: 998 closed ports
	    PORT STATE SERVICE VERSION
	    22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
	    | ssh-hostkey:
	    | 2048 d3:52:85:87:ac:9f:40:70:5f:4c:bd:b1:35:c3:2e:56 (RSA)
	    | 256 3b:01:52:02:de:ca:73:f3:07:98:10:31:81:7f:20:3d (ECDSA)
	    |_ 256 c9:b7:c2:c1:59:f9:64:5d:4a:4a:dd:6f:22:5c:52:b2 (ED25519)
	    80/tcp open http nginx 1.14.0 (Ubuntu)
	    |_http-s-header: nginx/1.14.0 (Ubuntu)
	    |_http-title: phpinfo()
	    MAC Address: 08:00:27:B3:5F:F4 (Oracle VirtualBox virtual NIC)
	    Aggressive OS guesses: Linux 2.6.32 (96%), Linux 3.2 - 4.9 (96%), Linux 2.6.32 - 3.10 (96%), Linux 3.4 - 3.10
	    (95%), Linux 3.1 (94%), Linux 3.2 (94%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), Synology DiskStation
	    Manager 5.2-5644 (94%), Netgear RAIDiator 4.2.28 (94%), Linux 2.6.32 - 2.6.35 (94%)
	    No exact OS matches for host (test conditions non-ideal).
	    Network Distance: 1 hop
	    Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
	    TRACEROUTE
	    HOP RTT ADDRESS
	    1 2.68 ms 12.18.0.104
	    OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
	    Nmap done: 1 IP address (1 host up) scanned in 21.65 seconds
	Task:
	Сравним данные в Ubuntu VirtualBox
	Decision:
	# uname -a
	   Linux VirtualBox 5.3.0-42-generic #34~18.04.1-Ubuntu SMP Fri Feb 28 13:42:26 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
	Task:
	Сканируем диапазон портов.
	Decision:
	# nmap -sT -p 21-80 12.18.0.20
	    Starting Nmap 7.70 ( https://nmap.org ) at 2020-03-26 22:12 EDT
	    Nmap scan report for 12.18.0.20
	    Host is up (0.00050s latency).
	    Not shown: 59 closed ports
	    PORT STATE SERVICE
	    22/tcp open ssh
	    Nmap done: 1 IP address (1 host up) scanned in 0.10 seconds
	# nmap -sT -p 13722-13783 linuxbox
	Task:
	Теперь давайте рассмотрим как найти все подключенные к сети устройства, для этого достаточно использовать опцию -sL и указать маску нашей сети. в моем случае это 12.18.0.15/24. Найдем сначала маску нашей локальной сети
	Decision:
	# ip addr show
	    1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1
	        link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
	        inet 127.0.0.1/8 scope host lo
	           valid_lft forever preferred_lft forever
	        inet6 ::1/128 scope host
	           valid_lft forever preferred_lft forever
	    2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
	        link/ether 08:00:27:d4:b1:c3 brd ff:ff:ff:ff:ff:ff
	        inet 12.18.0.15/24 brd 12.18.0.255 scope global dynamic enp0s3
	           valid_lft 2516sec preferred_lft 2516sec
	        inet6 fe80::ea38:7ca0:47a8:e1c5/64 scope link
	           valid_lft forever preferred_lft forever
	    3: virbr0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN qlen 1000
	        link/ether 52:54:00:a5:ce:ae brd ff:ff:ff:ff:ff:ff
	        inet 12.18.122.1/24 brd 12.18.122.255 scope global virbr0
	           valid_lft forever preferred_lft forever
	    4: virbr0-nic: <BROADCAST,MULTICAST> mtu 1500 qdisc pfifo_fast master virbr0 state DOWN qlen 1000
	        link/ether 52:54:00:a5:ce:ae brd ff:ff:ff:ff:ff:ff
	# nmap -sL 12.18.0.15/24
	    Starting Nmap 6.40 ( http://nmap.org ) at 2018-04-24 22:24 +08
	    Nmap scan report for 12.18.0.0
	    Nmap scan report for 12.18.0.1
	    Nmap scan report for 12.18.0.2
	    Nmap scan report for 12.18.0.3
	    Nmap scan report for 12.18.0.4
	    …
	    Nmap scan report for 12.18.0.254
	    Nmap scan report for 12.18.0.255
	    Nmap done: 256 IP addresses (0 hosts up) scanned in 0.35 seconds
	Task:
	Иногда это сканирование может не дать никаких результатов, потому что некоторые операционные системы имеют защиту от сканирования портов. Но это можно обойти, просто использовав для сканирования ping всех ip адресов сети, для этого есть опция -sn. программа обнаружит активные устройства в сети
	Decision:
	# nmap -sn 12.18.0.15/24
	    Starting Nmap 6.40 ( http://nmap.org ) at 2018-04-24 22:25 +08
	    Nmap scan report for 12.18.0.1
	    Host is up (0.014s latency).
	    MAC Address: C4:6E:1F:E2:B9:E8 (Unknown)
	    Nmap scan report for 12.18.0.100
	    Host is up (0.034s latency).
	    MAC Address: 84:BE:52:63:EC:AD (Unknown)
	    Nmap scan report for 12.18.0.101
	    Host is up (0.010s latency).
	    MAC Address: AC:AF:B9:2C:89:32 (Unknown)
	    Nmap scan report for 12.18.0.103
	    Host is up (0.00026s latency).
	    MAC Address: C4:46:19:23:7E:31 (Hon Hai Precision Ind. Co.)
	    Nmap scan report for 12.18.0.15
	    Host is up.
	    Nmap done: 256 IP addresses (5 hosts up) scanned in 1.86 seconds
	Task:
	Дальше мы можем сканировать порты nmap для нужного узла запустив утилиту без опций
	Decision:
	# nmap 12.18.0.1
	    Starting Nmap 6.40 ( http://nmap.org ) at 2018-04-24 22:26 +08
	    Nmap scan report for 12.18.0.1
	    Host is up (0.016s latency).
	    Not shown: 998 closed ports
	    PORT STATE SERVICE
	    80/tcp open http
	    1900/tcp open upnp
	    MAC Address: C4:6E:1F:E2:B9:E8 (Unknown)
	    Nmap done: 1 IP address (1 host up) scanned in 0.51 seconds
	Task:
	Чтобы узнать более подробную информацию о машине и запущенных на ней сервисах вы можете использовать опцию -sV. Утилита подключится к каждому порту и определит всю доступную информацию.
	Decision:
	# nmap -sV 12.18.0.1
	    Starting Nmap 6.40 ( http://nmap.org ) at 2018-04-24 22:27 +08
	    Nmap scan report for 12.18.0.1
	    Host is up (0.020s latency).
	    Not shown: 998 closed ports
	    PORT STATE SERVICE VERSION
	    80/tcp open http TP-LINK WR740N WAP http config
	    1900/tcp open upnp ipOS 7.0 (TP-LINK TL-WR740N WAP 4.0; UPnP 1.0)
	    MAC Address: C4:6E:1F:E2:B9:E8 (Unknown)
	    Service Info: Device: WAP
	    Service detection performed. Please report any incorrect results at http://nmap.org/submit/ .
	    Nmap done: 1 IP address (1 host up) scanned in 7.35 seconds
	    [root@localhost в]# nmap -sV 12.18.0.15
	    Starting Nmap 6.40 ( http://nmap.org ) at 2018-04-24 22:28 +08
	    Nmap scan report for 12.18.0.15
	    Host is up (0.000021s latency).
	    Not shown: 998 closed ports
	    PORT STATE SERVICE VERSION
	    22/tcp open ssh OpenSSH 7.4 (protocol 2.0)
	    111/tcp open rpcbind 2-4 (RPC #100000)
	    Service detection performed. Please report any incorrect results at http://nmap.org/submit/ .
	    Nmap done: 1 IP address (1 host up) scanned in 6.42 seconds
	Task:
	На нашей машине запущен ssh, а поэтому мы можем попытаться рассмотреть эту службу подробнее с помощью стандартных скриптов nmap. Скрипты позволяют проверить порт более детально, найти возможные уязвимости. Для этого используйте опцию -sC и -p чтобы задать порт.
	Decision:
	# nmap -sC 12.18.0.15-p 22
	    Starting Nmap 6.40 ( http://nmap.org ) at 2018-04-24 22:30 +08
	    Nmap scan report for 12.18.0.15
	    Host is up (2100s latency).
	    PORT STATE SERVICE
	    22/tcp open ssh
	    | ssh-hostkey: 2048 3а:43:аd:9р:81:23:10:к0:dд:16:рe:82:a8:76:пf:43 (RSA)
	    |_256 чр:а8:e7:3й:dр:1a:фe:63:18:87:11:cы:с7:78:би:0я (ECDSA)
	    Nmap done: 1 IP address (1 host up) scanned in 0.94 seconds
	https://github.com/David138it/MyPortfolio/tree/main/TaskDecision/Engineer-Isu
	Мы рассмотрели как выполняется сканирование портов nmap, а также несколько простых примеров использования этой утилиты. Эти команды nmap могут быть полезными многим системным администраторам, чтобы улучшить безопасность их систем. Рассмотрели системы обнаружения вторжения. анализирующие активность в сети или системе на предмет неавторизованных и злонамеренных действий. И программу chkrootkit,  предназначена для поиска враждебного кода (rootkit) и иных подозрительных событий в системе
	Task:
	Установка и обновление rkhunter
	Decision:
	# apt-get install rkhunter
	# cd /tmp
	# wget https://sourceforge.net/projects/rkhunter/files/rkhunter/1.4.6/rkhunter-1.4.6.tar.gz
	# tar -xvf rkhunter-1.4.6.tar.gz
	# cd rkhunter-1.4.6
	# ./installer.sh --layout default --install
	# rkhunter --update
	        Invalid WEB_CMD configuration option: Relative pathname: "/bin/false"
	# vim /etc/rkhunter.conf
	# cat /etc/rkhunter.conf
	        UPDATE_MIRRORS=0 на UPDATE_MIRRORS=1
	        MIRRORS_MODE=1 на MIRRORS_MODE=0
	        WEB_CMD="/bin/false" на WEB_CMD=""
	# rkhunter --update
	# rkhunter --propupd
	# vim /etc/cron.daily/rkhunter.sh
	# cat /etc/cron.daily/rkhunter.sh
	#!/bin/sh
	(
	/usr/local/bin/rkhunter --versioncheck
	/usr/local/bin/rkhunter --update
	/usr/local/bin/rkhunter --cronjob --report-warnings-only
	) | /bin/mail -s 'rkhunter Daily Run (I-X)' tmail@gmail.com
	# chmod 755 /etc/cron.daily/rkhunter.sh
	# rkhunter --list rootkits
	# rkhunter --check
	# cat /var/log/rkhunter.log
	# cat /var/log/rkhunter.log | grep hidden
	# lsof | grep /etc/net/scripts
	# cat /var/log/rkhunter.log | grep -A5 "\[ Warning \]"
	Task:
	Теперь необходимо собрать информацию о файлах в системе, это нужно, чтобы программа могла понять пытался ли кто модифицировать системные файлы при следующей проверке.
	Decision:
	# rkhunter --propupd
	        [ Rootkit Hunter version 1.4.6 ]
	        File updated: searched for 181 files, found 151
	Task:
	Обновление желательно выполнять регулярно, поэтому давайте создадим специальный скрипт и будем запускать его с помощью cron каждый день. Для этого создайте файл скрипта в папке /etc/cron.daily
	Decision:
	# vim /etc/cron.daily/rkhunter.sh
	# cat /etc/cron.daily/rkhunter.sh
	        #!/bin/sh
	        (
	            /usr/local/bin/rkhunter --versioncheck
	            /usr/local/bin/rkhunter --update
	            /usr/local/bin/rkhunter --cronjob --report-warnings-only
	        ) | /bin/mail -s 'rkhunter Daily Run (192.168.0.12)' work38@gmail.com
	# chmod 755 /etc/cron.daily/rkhunter.sh
		Task:
	посмотреть все руткиты, которые может найти программа
	Decision:
	# rkhunter --list rootkits
	        Rootkits checked for:
	            55808 Trojan - Variant A, AjaKit, aPa Kit, Adore, Apache Worm, Ambient (ark),
	            Balaur, BeastKit, beX2, BOBKit, Boonana (Koobface.A), cb,
	            CiNtuser Worm (Slapper.B variant), CX, Danny-Boy's Abuse Kit, Devil, Diamorphine LKM, Dica,
	            Dreams, Duarawkz, Ebury, Enye LKM, Flea Linux, FreeBSD,
	            Fu, Fuck`it, GasKit, Heroin LKM, HjC Kit, ignoKit,
	            iLLogiC, Inqtana-A, Inqtana-B, Inqtana-C, IntoXonia-NG, Irix,
	            Jynx, Jynx2, KBeast, Keydnap, Kitko, Knark,
	            Komplex, ld-linuxv.so, Li0n Worm, Lockit/LJK2, Mokes, Mood-NT,
	            MRK, Ni0, Ohhara, Optic Kit (Tux), OSXRK, Oz,
	            Phalanx, Phalanx2, Portacelo, Proton, R3dstorm Toolkit, RH-Sharpe's,
	            RSHA's, Scalper Worm, Shutdown, SHV4, SHV5, Sin,
	            SInAR, Slapper, Sneakin, Solaris Wanuk, Spanish, Suckit,
	            SunOS / NSDAP, SunOS Rootkit, Superkit, TBD (Telnet BackDoor), TeLeKiT, Togroot,
	            T0rn, trNkit, Trojanit Kit, Turtle2, Tuxtendo, URK,
	            Vampire, VcKit, Volc, w00tkit, weaponX, Xzibit,
	            X-Org SunOS, zaRwT.KiT, ZK
	Task:
	Для того чтобы проверить Linux на вирусы всю систему выполните от суперпользователя
	Decision:
	# rkhunter --check
	        [ Rootkit Hunter version 1.4.6 ]
	        Checking system commands...
	          Performing 'strings' command checks
	            Checking 'strings' command                               [ OK ]
	          Performing 'shared libraries' checks
	            Checking for preloading variables                        [ None found ]
	            Checking for preloaded libraries                         [ None found ]
	            Checking LD_LIBRARY_PATH variable                        [ Not found ]
	          Performing file properties checks
	            Checking for prerequisites                               [ OK ]
	            /usr/sbin/adduser                                        [ OK ]
	            /usr/sbin/chroot                                         [ OK ]
	        ...
	        System checks summary
	        =====================
	        File properties checks...
	            Files checked: 151
	            Suspect files: 1
	        Rootkit checks...
	            Rootkits checked : 500
	            Possible rootkits: 8
	        Applications checks...
	            All checks skipped
	        The system checks took: 5 minutes and 19 seconds
	        All results have been written to the log file: /var/log/rkhunter.log
	        One or more warnings have been found while checking the system.
	        Please check the log file (/var/log/rkhunter.log)
	# cat /var/log/rkhunter.log
	    ...
	        [07:21:07] Running Rootkit Hunter version 1.4.6 on VirtualBox
	        [07:21:07]
	        [07:21:07] Info: Start date is Вс апр 19 07:21:07 MSK 2020
	        [07:21:07]
	        [07:21:07] Checking configuration file and command-line options...
	        [07:21:07] Info: Detected operating system is 'Linux'
	        [07:21:07] Info: Found O/S name: Ubuntu 18.04.4 LTS
	        [07:21:07] Info: Command line is /usr/bin/rkhunter --check
	        [07:21:07] Info: Environment shell is /bin/bash; rkhunter is using dash
	        ...
	        [07:21:09] Starting system checks...
	        [07:21:09]
	        [07:21:09] Info: Starting test name 'system_commands'
	        [07:21:09] Checking system commands...
	        ...
	        [07:21:10]   Scanning for string /usr/sbin/ntpsx             [ OK ]
	        [07:21:10]   Scanning for string /usr/sbin/.../bkit-ava      [ OK ]
	        [07:21:10]   Scanning for string /usr/sbin/.../bkit-d        [ OK ]
	        [07:21:10]   Scanning for string /usr/sbin/.../bkit-shd      [ OK ]
	        [07:21:10]   Scanning for string /usr/sbin/.../bkit-f        [ OK ]
	        ...
	        [07:21:21] Info: Starting test name 'properties'
	        [07:21:21] Performing file properties checks
	        [07:21:24]   Checking for prerequisites                      [ OK ]
	        [07:21:36]   /usr/sbin/adduser                               [ OK ]
	        [07:21:36] Info: Found file '/usr/sbin/adduser': it is whitelisted for the 'script replacement' check.
	        [07:21:37]   /usr/sbin/chroot                                [ OK ]
	        [07:21:37]   /usr/sbin/cron                                  [ OK ]
	        [07:21:39]   /usr/sbin/groupadd                              [ OK ]
	        [07:21:39]   /usr/sbin/groupdel                              [ OK ]
	        ...
	        [07:27:17] Info: Starting test name 'rootkits'
	        [07:27:17] Checking for rootkits...
	        [07:27:17]
	        [07:27:17] Info: Starting test name 'known_rkts'
	        [07:27:17] Performing check of known rootkit files and directories
	        ...
	        [07:31:12] Info: Starting test name 'malware'
	        [07:31:12] Performing malware checks
	        ...
	        [07:31:38]   Performing check for enabled xinetd services
	        [07:31:38] Info: Using xinetd configuration file '/etc/xinetd.conf'
	        [07:31:38]     Checking '/etc/xinetd.conf' for enabled services [ None found ]
	        [07:31:39]     Checking '/etc/xinetd.d/vnc' for enabled services [ Warning ]
	        [07:31:40]   Checking for enabled xinetd services            [ Warning ]
	        [07:31:40] Warning: Found enabled xinetd service: /etc/xinetd.d/vnc
	        ...
	        [07:32:00] Performing checks on the network ports
	        [07:32:00] Info: Starting test name 'ports'
	        [07:32:00] Performing check for backdoor ports
	        [07:32:00] Checking for TCP port 1524 [ Not found ]
	        [07:32:00] Checking for TCP port 1984 [ Not found ]
	        [07:32:00] Checking for UDP port 2001 [ Not found ]
	        [07:32:00] Checking for TCP port 2006 [ Not found ]
	        [07:32:01] Checking for TCP port 2128 [ Not found ]
	        ...
	        ...
	        [07:32:04] Info: Starting test name 'passwd_changes'
	        [07:32:04]   Checking for passwd file changes                [ Warning ]
	        [07:32:04] Warning: Unable to check for passwd file differences: no copy of the passwd file exists.
	        [07:32:04]
	        [07:32:04] Info: Starting test name 'group_changes'
	        [07:32:04]   Checking for group file changes                 [ Warning ]
	        [07:32:04] Warning: Unable to check for group file differences: no copy of the group file exists.
	        [07:32:04]   Checking root account shell history files       [ OK ]
	        ...
	        [07:32:04] Info: Starting test name 'system_configs'
	        [07:32:04] Performing system configuration file checks
	        [07:32:04]   Checking for an SSH configuration file          [ Found ]
	        [07:32:04] Info: Found an SSH configuration file: /etc/ssh/sshd_config
	        [07:32:04] Info: Rkhunter option ALLOW_SSH_ROOT_USER set to 'no'.
	        [07:32:04] Info: Rkhunter option ALLOW_SSH_PROT_V1 set to '0'.
	        [07:32:05]   Checking if SSH root access is allowed          [ Warning ]
	        [07:32:05] Warning: The SSH configuration option 'PermitRootLogin' has not been set.
	        The default value may be 'yes', to allow root access.
	        [07:32:05]   Checking if SSH protocol v1 is allowed          [ Warning ]
	        [07:32:05] Warning: The SSH configuration option 'Protocol' has not been set.
	        The default value may be '2,1', to allow the use of protocol version 1.
	        ...

	        [07:55:21] Info: Starting test name 'filesystem'
	        [07:55:21] Performing filesystem checks
	        [07:55:21] Info: SCAN_MODE_DEV set to 'THOROUGH'
	        [07:55:28]   Checking /dev for suspicious file types         [ Warning ]
	        [07:55:28] Warning: Suspicious file types found in /dev:
	        [07:55:28]          /dev/shm/squid-cf__readers.shm: data
	        [07:55:28]          /dev/shm/squid-cf__queues.shm: data
	        [07:55:28]          /dev/shm/squid-cf__metadata.shm: data
	        [07:55:30]   Checking for hidden files and directories       [ None found ]
	        [07:55:31]   Checking for missing log files                  [ Skipped ]
	        ...

	        [07:55:31] Info: Starting test name 'apps'
	        [07:55:31] Checking application versions..
	        ...
	        [07:55:39] System checks summary
	        [07:55:39] =====================
	        [07:55:39]
	        [07:55:39] File properties checks...
	        [07:55:39] Files checked: 151
	        [07:55:39] Suspect files: 1
	        [07:55:39]
	        [07:55:39] Rootkit checks...
	        [07:55:39] Rootkits checked : 500
	        [07:55:39] Possible rootkits: 8
	        [07:55:39]
	        [07:55:39] Applications checks...
	        [07:55:40] All checks skipped
	        [07:55:40]
	        [07:55:40] The system checks took: 5 minutes and 19 seconds
	        [07:55:40]
	        [07:55:40] Info: End date is Вс апр 19 07:55:40 MSK 2020
	        ...
	Task:
	И обнаружено несколько  скрытых файла, но я знаю, что эти файлы созданы программой  /dev/shm/squid-cf__metadata.shm. Вы можете отследить какая программа работает с определенным файлом с помощью команды lsof
	Decision:
	# lsof | grep /адрес/файла
	# lsof | grep /dev/shm/squid-cf__metadata.shm
	        lsof: WARNING: can't stat() fuse.gvfsd-fuse file system /run/user/1000/gvfs
	              Output information may be incomplete.
	        squid      1170                  root  mem       REG               0,24         8          3 /dev/shm/squid-cf__metadata.shm
	        squid      1170                  root    4u      REG               0,24         8          3 /dev/shm/squid-cf__metadata.shm
	Task:
	Для удобства просмотра лога вы можете не смотреть его полностью, а выбрать только предупреждения
	Decision:
	# cat /var/log/rkhunter.log | grep -A5 "\[ Warning \]"
	        [07:51:19]   /usr/bin/lwp-request                            [ Warning ]
	        [07:51:19] Warning: The command '/usr/bin/lwp-request' has been replaced by a script: /usr/bin/lwp-request: Perl script text executable
	        [07:51:19]   /usr/bin/bsd-mailx                              [ OK ]
	        [07:51:20]   /usr/bin/x86_64-linux-gnu-size                  [ OK ]
	        [07:51:20]   /usr/bin/x86_64-linux-gnu-strings               [ OK ]
	        [07:51:20]   /usr/bin/telnet.netkit                          [ OK ]
	        --
	        [07:54:57]   Checking for suspicious (large) shared memory segments [ Warning ]
	        [07:54:57] Warning: The following suspicious (large) shared memory segments have been found:
	        [07:54:57]          Process: /usr/bin/gnome-shell    PID: 2179    Owner: linux    Size: 3,7MB (configured size allowed: 1,0MB)
	        [07:54:57]          Process: /usr/bin/gnome-shell    PID: 2179    Owner: linux    Size: 3,7MB (configured size allowed: 1,0MB)
	        [07:54:57]          Process: /usr/bin/nautilus-desktop    PID: 2396    Owner: linux    Size: 32MB (configured size allowed: 1,0MB)
	        [07:54:57]          Process: /usr/bin/gnome-shell    PID: 2179    Owner: linux    Size: 1,5MB (configured size allowed: 1,0MB)
	        --
	        [07:55:19]   Checking for passwd file changes                [ Warning ]
	        [07:55:19] Warning: User 'postfix' has been added to the passwd file.
	        [07:55:19]
	        [07:55:19] Info: Starting test name 'group_changes'
	        [07:55:19]   Checking for group file changes                 [ Warning ]
	        [07:55:19] Warning: Group 'postfix' has been added to the group file.
	        [07:55:19] Warning: Group 'postdrop' has been added to the group file.
	        [07:55:19]   Checking root account shell history files       [ None found ]
	        [07:55:19]
	        [07:55:19] Info: Starting test name 'system_configs'
	        --
	        [07:55:20]   Checking if SSH root access is allowed          [ Warning ]
	        [07:55:20] Warning: The SSH configuration option 'PermitRootLogin' has not been set.
	               The default value may be 'yes', to allow root access.
	        [07:55:20]   Checking if SSH protocol v1 is allowed          [ Not set ]
	        [07:55:20]   Checking for other suspicious configuration settings [ None found ]
	        [07:55:20]
	        --
	        [07:55:28]   Checking /dev for suspicious file types         [ Warning ]
	        [07:55:28] Warning: Suspicious file types found in /dev:
	        [07:55:28]          /dev/shm/squid-cf__readers.shm: data
	        [07:55:28]          /dev/shm/squid-cf__queues.shm: data
	        [07:55:28]          /dev/shm/squid-cf__metadata.shm: data
	        [07:55:30]   Checking for hidden files and directories       [ None found ]
	Task:
	Установка и Проверка системы с помощью chkrootkit
	Decision:
	# apt-get install chkrootkit
	# chkrootkit
	# chklastlog
	Task:
	Сканирование безопасности с помощью Lynis
	Decision:
	mkdir /sec
	# cd /sec
	# git clone http://github.com/CISOfy/lynis.git
	# cd lynis/
	# ls -l
	    итого 304
	    -rw-r--r--. 1 root root 131853 окт 22 01:52 CHANGELOG.md
	    -rw-r--r--. 1 root root   3214 окт 22 01:52 CODE_OF_CONDUCT.md
	    -rw-r--r--. 1 root root   2708 окт 22 01:52 CONTRIBUTING.md
	    -rw-r--r--. 1 root root   2559 окт 22 01:52 CONTRIBUTORS.md
	    drwxr-xr-x. 3 root root    173 окт 22 01:52 db
	    -rw-r--r--. 1 root root  20207 окт 22 01:52 default.prf
	    -rw-r--r--. 1 root root    172 окт 22 01:52 developer.prf
	    drwxr-xr-x. 6 root root    171 окт 22 01:52 extras
	    -rw-r--r--. 1 root root   4378 окт 22 01:52 FAQ
	    -rw-r--r--. 1 root root   1094 окт 22 01:52 HAPPY_USERS.md
	    drwxr-xr-x. 2 root root   4096 окт 22 01:52 include
	    -rw-r--r--. 1 root root   1528 окт 22 01:52 INSTALL
	    -rw-r--r--. 1 root root  35146 окт 22 01:52 LICENSE
	    -rwxr-xr-x. 1 root root  49917 окт 22 01:52 lynis
	    -rw-r--r--. 1 root root   5746 окт 22 01:52 lynis.8
	    drwxr-xr-x. 2 root root    104 окт 22 01:52 plugins
	    -rw-r--r--. 1 root root   4657 окт 22 01:52 README
	    -rw-r--r--. 1 root root   5710 окт 22 01:52 README.md
	    -rw-r--r--. 1 root root    539 окт 22 01:52 SECURITY.md
	# file lynis
	    lynis: POSIX shell script, ASCII text executable, with very long lines
	# ./lynis -h
	    [ Lynis 3.0.2 ]
	    ################################################################################
	      Lynis comes with ABSOLUTELY NO WARRANTY. This is free software, and you are
	      welcome to redistribute it under the terms of the GNU General Public License.
	      See the LICENSE file for details about using this software.
	      2007-2020, CISOfy - https://cisofy.com/lynis/
	      Enterprise support available (compliance, plugins, interface and tools)
	    ################################################################################
	    [+] Initializing program
	    ------------------------------------
	      Usage: lynis command [options]
	      Command:
	        audit
	            audit system                  : Perform local security scan
	            audit system remote <host>    : Remote security scan
	            audit dockerfile <file>       : Analyze Dockerfile
	        show
	            show                          : Show all commands
	            show version                  : Show Lynis version
	            show help                     : Show help
	        update
	            update info                   : Show update details
	      Options:
	        Alternative system audit modes
	        --forensics                       : Perform forensics on a running or mounted system
	        --pentet                         : Non-privileged, show points of interest for pentesting
	        Layout options
	        --no-colors                       : Don't use colors in output
	        --quiet (-q)                      : No output
	        --reverse-colors                  : Optimize color display for light backgrounds
	        --reverse-colours                 : Optimize colour display for light backgrounds
	        Misc options
	        --debug                           : Debug logging to screen
	        --no-log                          : Don't create a log file
	        --profile <profile>               : Scan the system with the given profile file
	        --view-manpage (--man)            : View man page
	        --verbose                         : Show more details on screen
	        --version (-V)                    : Display version number and quit
	        --wait                            : Wait between a set of tests
	        --slow-warning <seconds>  : Threshold for slow test warning in seconds (default 10)
	        Enterprise options
	        --plugindir <path>                : Define path of available plugins
	        --upload                          : Upload data to central node
	        More options available. Run './lynis show options', or use the man page.
	# ./lynis show version
	    3.0.2
	# ./lynis show commands
	    Commands:
	    lynis audit
	    lynis configure
	    lynis generate
	    lynis show
	    lynis update
	    lynis upload-only
	Task:
	Запускаем аудит Linux-системы
	Decision:
	# ./lynis audit system
	    [ Lyns 3.0.2 ]
	    ################################################################################
	      Lynis comes with ABSOLUTELY NO WARRANTY. This is free software, and you are
	      welcome to redistribute it under the terms of the GNU General Public License.
	      See the LICENSE file for details about using this software.
	      2007-2020, CISOfy - https://cisofy.com/lynis/
	      Enterprise support available (compliance, plugins, interface and tools)
	    ################################################################################
	    [+] Initializing program
	    ------------------------------------
	      - Detecting OS...                                           [ DONE ]
	      - Checking profiles...                                      [ DONE ]
	      - Detecting language and localization                       [ ru ]
	      ---------------------------------------------------
	      Program version:           3.0.2
	      Operating system:          Linux
	      Operating system name:     C Linux
	      Operating system version:  8
	      Kernel version:            4.18.0
	      Hardware platform:         x86_64
	      Hostname:                  localhost
	      ---------------------------------------------------
	      Profiles:                  /sec/lynis/default.prf
	      Log file:                  /var/log/lynis.log
	      Report file:               /var/log/lynis-report.dat
	      Report version:            1.0
	      Plugin directory:          ./plugins
	      ---------------------------------------------------
	      Auditor:                   [Not Specified]
	      Language:                  ru
	      Test category:             all
	      Test group:                all
	      ---------------------------------------------------
	      - Program update status...                                  [ NO UPDATE ]
	    [+] System Tools
	    ------------------------------------
	      - Scanning available tools...
	      - Checking system binaries...
	    [+] Plugins (Стадия 1)
	    ------------------------------------
	     Примечание: плагины имеют более обширные тесты и могут занять несколько минут до завершения
	      - Plugin: pam
	        [.
	      [WARNING]: Test CORE-1000 had a long execution: 16.583672 seconds

	    .]
	      - Plugin: systemd
	        [.
	      [WARNING]: Test PLGN-0010 had a long execution: 28.077768 seconds
	    ...............]
	    [+] Boot and services
	    ------------------------------------
	      - Service Manager                                           [ systemd ]
	      - Checking UEFI boot                                        [ ВКЛЮЧЕНО ]
	      - Checking Secure Boot                                      [ ОТКЛЮЧЕНО ]
	        - Boot loader                                             [ NONE FOUND ]
	      - Check running services (systemctl)                        [ Завершено ]
	            Result: found 45 running services
	      - Check enabled services at boot (systemctl)                [ Завершено ]
	            Result: found 60 enabled services
	      - Check startup files (permissions)                         [ ОК ]
	    [+] Kernel
	    ------------------------------------
	      - Checking default runlevel                                 [ runlevel 5 ]
	      - Checking CPU support (NX/PAE)
	        CPU support: PAE and/or NoeXecute supported               [ Найдено ]
	      - Checking kernel version and release                       [ Завершено ]
	      - Checking kernel type                                      [ Завершено ]
	      - Checking loaded kernel modules                            [ Завершено ]
	          Found 96 active modules
	      - Checking Linux kernel configuration file                  [ Найдено ]
	      - Checking default I/O kernel scheduler                     [ НЕ НАЙДЕНО ]
	      - Checking core dumps configuration
	        - configuration in systemd conf files                     [ DEFAULT ]
	        - configuration in etc/profile                            [ DEFAULT ]
	        - 'hard' configuration in security/limits.conf            [ DEFAULT ]
	        - 'soft' configuration in security/limits.conf            [ DEFAULT ]
	        - Checking setuid core dumps configuration                [ DISABLED ]
	      - Check if reboot is needed                                 [ НЕТ ]
	    [+] Память и процессы
	    ------------------------------------
	      - Checking /proc/meminfo                                    [ Найдено ]
	      - Searching for dead/zombie processes                       [ НЕ НАЙДЕНО ]
	      - Searching for IO waiting processes                        [ НЕ НАЙДЕНО ]
	      - Search prelink tooling                                    [ НЕ НАЙДЕНО ]
	    [+] Users, Groups and Authentication
	    ------------------------------------
	      - Administrator accounts                                    [ ОК ]
	      - Unique UIDs                                               [ ОК ]
	      - Consistency of group files (grpck)                        [ ОК ]
	      - Unique group IDs                                          [ ОК ]
	      - Unique group names                                        [ ОК ]
	      - Password file consistency                                 [ ОК ]
	      - Password hashing methods                                  [ ПРЕДЛОЖЕНИЕ ]
	      - Checking minimum group password hashing rounds            [ ОТКЛЮЧЕНО ]
	      - Checking maximum group password hashing rounds            [ ОТКЛЮЧЕНО ]
	      - Query system users (non daemons)                          [ Завершено ]
	      - NIS+ authentication support                               [ NOT ENABLED ]
	      - NIS authentication support                                [ NOT ENABLED ]
	      - Sudoers file(s)                                           [ Найдено ]
	        - Permissions for directory: /etc/sudoers.d               [ ОК ]
	        - Permissions for: /etc/sudoers                           [ ОК ]
	      - PAM password strength tools                               [ ОК ]
	      - PAM configuration file (pam.conf)                         [ НЕ НАЙДЕНО ]
	      - PAM configuration files (pam.d)                           [ Найдено ]
	      - PAM modules                                               [ Найдено ]
	      - LDAP module in PAM                                        [ НЕ НАЙДЕНО ]
	      - Accounts without expire date                              [ ПРЕДЛОЖЕНИЕ ]
	      - Accounts without password                                 [ ОК ]
	      - Checking user password aging (minimum)                    [ ОТКЛЮЧЕНО ]
	      - User password aging (maximum)                             [ ОТКЛЮЧЕНО ]
	      - Checking expired passwords                                [ ОК ]
	      - Checking Linux single user mode authentication            [ ОК ]
	      - Determining default umask
	        - umask (/etc/profile and /etc/profile.d)                 [ ПРЕДЛОЖЕНИЕ ]
	        - umask (/etc/login.defs)                                 [ ОК ]
	        - umask (/etc/init.d/functions)                           [ ПРЕДЛОЖЕНИЕ ]
	      - LDAP authentication support                               [ NOT ENABLED ]
	      - Logging failed login attempts                             [ ОТКЛЮЧЕНО ]
	    [+] Shells
	    ------------------------------------
	      - Checking shells from /etc/shells
	        Result: found 8 shells (valid shells: 8).
	        - Session timeout settings/tools                          [ Отсутствует ]
	      - Checking default umask values
	        - Checking default umask in /etc/bashrc                   [ WEAK ]
	        - Checking default umask in /etc/csh.cshrc                [ WEAK ]
	        - Checking default umask in /etc/profile                  [ WEAK ]
	    [+] File systems
	    ------------------------------------
	      - Checking mount points
	        - Checking /home mount point                              [ ОК ]
	        - Checking /tmp mount point                               [ ПРЕДЛОЖЕНИЕ ]
	        - Checking /var mount point                               [ ПРЕДЛОЖЕНИЕ ]
	      - Checking LVM volume groups                                [ Найдено ]
	        - Checking LVM volumes                                    [ Найдено ]
	      - Query swap partitions (fstab)                             [ ОК ]
	      - Testing swap partitions                                   [ ОК ]
	      - Testing /proc mount (hidepid)                             [ ПРЕДЛОЖЕНИЕ ]
	      - Checking for old files in /tmp                            [ Найдено ]
	      - Checking /tmp sticky bit                                  [ ОК ]
	      - Checking /var/tmp sticky bit                              [ ОК ]
	      - ACL support root file system                              [ ВКЛЮЧЕНО ]
	      - Mount options of /                                        [ ОК ]
	      - Mount options of /boot                                    [ DEFAULT ]
	      - Mount options of /dev                                     [ PARTIALLY HARDENED ]
	      - Mount options of /dev/shm                                 [ PARTIALLY HARDENED ]
	      - Mount options of /home                                    [ DEFAULT ]
	      - Mount options of /run                                     [ HARDENED ]
	      - Total without nodev:14 noexec:20 nosuid:13 ro or noexec (W^X): 19 of total 40
	      - Checking Locate database                                  [ НЕ НАЙДЕНО ]
	      - Disable kernel support of some filesystems
	        - Discovered kernel modules: cramfs squashfs udf
	    [+] USB Devices
	    ------------------------------------
	      - Checking usb-storage driver (modprobe config)             [ NOT DISABLED ]
	      - Checking USB devices authorization                        [ ВКЛЮЧЕНО ]
	      - Checking USBGuard                                         [ НЕ НАЙДЕНО ]
	    [+] Storage
	    ------------------------------------
	      - Checking firewire ohci driver (modprobe config)           [ NOT DISABLED ]
	    [+] NFS
	    ------------------------------------
	      - Query rpc registered programs                             [ Завершено ]
	      - Query NFS versions                                        [ Завершено ]
	      - Query NFS protocols                                       [ Завершено ]
	      - Check running NFS daemon                                  [ НЕ НАЙДЕНО ]
	    [+] Name services
	    ------------------------------------
	      - Searching DNS domain name                                 [ Найдено ]
	          Domain name: localdomain
	      - Checking /etc/hosts
	        - Duplicate entries in hosts file                         [ Отсутствует ]
	        - Presence of configured hostname in /etc/hosts           [ Найдено ]
	        - Hostname mapped to localhost                            [ Найдено ]
	        - Localhost mapping to IP address                         [ ОК ]
	    [+] Ports and packages
	    ------------------------------------
	      - Searching package managers
	        - Searching DNF package manager                           [ Найдено ]
	          - Querying DNF package manager
	      [WARNING]: Test PKGS-7350 had a long execution: 43.169379 seconds
	      - Using DNF to find vulnerable packages                     [ Отсутствует ]
	      [WARNING]: Test PKGS-7352 had a long execution: 18.497839 seconds
	      [WARNING]: Test PKGS-7354 had a long execution: 10.694343 seconds
	      - Checking package audit tool                               [ INSTALLED ]
	        Found: dnf
	      - Toolkit for automatic upgrades                            [ НЕ НАЙДЕНО ]
	    [+] Networking
	    ------------------------------------
	      - Checking IPv6 configuration                               [ ВКЛЮЧЕНО ]
	          Configuration method                                    [ AUTO ]
	          IPv6 only                                               [ NO ]
	      - Checking configured nameservers
	        - Testing nameservers
	            Nameserver: 192.168.0.1                               [ ОК ]
	        - Minimal of 2 responsive nameservers                     [ ПРЕДУПРЕЖДЕНИЕ ]
	        - DNSSEC supported (systemd-resolved)                     [ ДА ]
	      - Checking default gateway                                  [ Завершено ]
	      - Getting listening ports (TCP/UDP)                         [ Завершено ]
	      - Checking promiscuous interfaces                           [ ПРЕДУПРЕЖДЕНИЕ ]
	      - Checking waiting connections                              [ ОК ]
	      - Checking status DHCP client                               [ NOT ACTIVE ]
	      - Checking for ARP monitoring software                      [ НЕ НАЙДЕНО ]
	      - Uncommon network protocols                                [ 0 ]
	    [+] Printers and Spools
	    ------------------------------------
	      - Checking cups daemon                                      [ ЗАПУЩЕНО ]
	      - Checking CUPS configuration file                          [ ОК ]
	        - File permissions                                        [ ОК ]
	      - Checking CUPS addresses/sockets                           [ Найдено ]
	      - Checking lp daemon                                        [ НЕ ЗАПУЩЕНО ]
	    [+] Software: e-mail and messaging
	    ------------------------------------
	    [+] Software: firewalls
	    ------------------------------------
	      - Checking iptables kernel module                           [ Найдено ]
	        - Checking iptables policies of chains                    [ Найдено ]
	        - Checking for empty ruleset                              [ ОК ]
	        - Checking for unused rules                               [ Найдено ]
	      - Checking host based firewall                              [ ACTIVE ]
	    [+] Software: webserver
	    ------------------------------------
	      - Checking Apache                                           [ НЕ НАЙДЕНО ]
	      - Checking nginx                                            [ НЕ НАЙДЕНО ]
	    [+] SSH Support
	    ------------------------------------
	      - Checking running SSH daemon                               [ Найдено ]
	        - Searching SSH configuration                             [ Найдено ]
	        - OpenSSH option: AllowTcpForwarding                      [ ПРЕДЛОЖЕНИЕ ]
	        - OpenSSH option: ClientAliveCountMax                     [ ПРЕДЛОЖЕНИЕ ]
	        - OpenSSH option: ClientAliveInterval                     [ ОК ]
	        - OpenSSH option: Compression                             [ ПРЕДЛОЖЕНИЕ ]
	        - OpenSSH option: FingerprintHash                         [ ОК ]
	        - OpenSSH option: GatewayPorts                            [ ОК ]
	        - OpenSSH option: IgnoreRhosts                            [ ОК ]
	        - OpenSSH option: LoginGraceTime                          [ ОК ]
	        - OpenSSH option: LogLevel                                [ ПРЕДЛОЖЕНИЕ ]
	        - OpenSSH option: MaxAuthTries                            [ ПРЕДЛОЖЕНИЕ ]
	        - OpenSSH option: MaxSessions                             [ ПРЕДЛОЖЕНИЕ ]
	        - OpenSSH option: PermitRootLogin                         [ ПРЕДЛОЖЕНИЕ ]
	        - OpenSSH option: PermitUserEnvironment                   [ ОК ]
	        - OpenSSH option: PermitTunnel                            [ ОК ]
	        - OpenSSH option: Port                                    [ ПРЕДЛОЖЕНИЕ ]
	        - OpenSSH option: PrintLastLog                            [ ОК ]
	        - OpenSSH option: StrictModes                             [ ОК ]
	        - OpenSSH option: TCPKeepAlive                            [ ПРЕДЛОЖЕНИЕ ]
	        - OpenSSH option: UseDNS                                  [ ОК ]
	        - OpenSSH option: X11Forwarding                           [ ПРЕДЛОЖЕНИЕ ]
	        - OpenSSH option: AllowAgentForwarding                    [ ПРЕДЛОЖЕНИЕ ]
	        - OpenSSH option: AllowUsers                              [ НЕ НАЙДЕНО ]
	        - OpenSSH option: AllowGroups                             [ НЕ НАЙДЕНО ]
	    [+] SNMP Support
	    ------------------------------------
	      - Checking running SNMP daemon                              [ НЕ НАЙДЕНО ]
	    [+] Databases
	    ------------------------------------
	        No database engines found
	    [+] LDAP Services
	    ------------------------------------
	      - Checking OpenLDAP instance                                [ НЕ НАЙДЕНО ]
	    [+] PHP
	    ------------------------------------
	      - Checking PHP                                              [ НЕ НАЙДЕНО ]
	    [+] Squid Support
	    ------------------------------------
	      - Checking running Squid daemon                             [ НЕ НАЙДЕНО ]
	    [+] Logging and files
	    ------------------------------------
	      - Checking for a running log daemon                         [ ОК ]
	        - Checking Syslog-NG status                               [ НЕ НАЙДЕНО ]
	        - Checking systemd journal status                         [ Найдено ]
	        - Checking Metalog status                                 [ НЕ НАЙДЕНО ]
	        - Checking RSyslog status                                 [ Найдено ]
	        - Checking RFC 3195 daemon status                         [ НЕ НАЙДЕНО ]
	        - Checking minilogd instances                             [ НЕ НАЙДЕНО ]
	      - Checking logrotate presence                               [ ОК ]
	      - Checking remote logging                                   [ NOT ENABLED ]
	      - Checking log directories (static list)                    [ Завершено ]
	      - Checking open log files                                   [ Завершено ]
	      - Checking deleted files in use                             [ FILES FOUND ]
	    [+] Insecure services
	    ------------------------------------
	      - Installed inetd package                                   [ НЕ НАЙДЕНО ]
	      - Installed xinetd package                                  [ ОК ]
	        - xinetd status                                           [ NOT ACTIVE ]
	      - Installed rsh client package                              [ ОК ]
	      - Installed rsh server package                              [ ОК ]
	      - Installed telnet client package                           [ ОК ]
	      - Installed telnet server package                           [ НЕ НАЙДЕНО ]
	      - Checking NIS client installation                          [ ОК ]
	      - Checking NIS server installation                          [ ОК ]
	      - Checking TFTP client installation                         [ ОК ]
	      - Checking TFTP server installation                         [ ОК ]
	    [+] Banners and identification
	    ------------------------------------
	      - /etc/issue                                                [ Найдено ]
	        - /etc/issue contents                                     [ WEAK ]
	      - /etc/issue.net                                            [ Найдено ]
	        - /etc/issue.net contents                                 [ WEAK ]
	    [+] Scheduled tasks
	    ------------------------------------
	      - Checking crontab and cronjob files                        [ Завершено ]
	      - Checking atd status                                       [ ЗАПУЩЕНО ]
	        - Checking at users                                       [ Завершено ]
	        - Checking at jobs                                        [ Отсутствует ]
	    [+] Accounting
	    ------------------------------------
	      - Checking accounting information                           [ ОК ]
	      - Checking sysstat accounting data                          [ НЕ НАЙДЕНО ]
	      - Checking auditd                                           [ ВКЛЮЧЕНО ]
	        - Checking audit rules                                    [ ПРЕДЛОЖЕНИЕ ]
	        - Checking audit configuration file                       [ ОК ]
	        - Checking auditd log file                                [ Найдено ]
	    [+] Time and Synchronization
	    ------------------------------------
	      - NTP daemon found: chronyd                                 [ Найдено ]
	      - Checking for a running NTP daemon or client               [ ОК ]
	    [+] Cryptography
	    ------------------------------------
	      - Checking for expired SSL certificates [0/7]               [ Отсутствует ]
	      - Found 0 encrypted and 1 unencrypted swap devices in use.  [ OK ]
	      - Kernel entropy is sufficient                              [ ДА ]
	      - HW RNG & rngd                                             [ НЕТ ]
	      - SW prng                                                   [ НЕТ ]
	    [+] Virtualization
	    ------------------------------------
	    [+] Containers
	    ------------------------------------
	    [+] Security frameworks
	    ------------------------------------
	      - Checking presence AppArmor                                [ НЕ НАЙДЕНО ]
	      - Checking presence SELinux                                 [ Найдено ]
	        - Checking SELinux status                                 [ ВКЛЮЧЕНО ]
	          - Checking current mode and config file                 [ ОК ]
	            Current SELinux mode: enforcing
	            Found 0 permissive SELinux object types
	            Found 80 unconfined and 0 initrc_t processes
	      - Checking presence TOMOYO Linux                            [ НЕ НАЙДЕНО ]
	      - Checking presence grsecurity                              [ НЕ НАЙДЕНО ]
	      - Checking for implemented MAC framework                    [ ОК ]
	    [+] Software: file integrity
	    ------------------------------------
	      - Checking file integrity tools
	      - IMA/EVM (status)                                          [ ВКЛЮЧЕНО ]
	      - Checking presence integrity tool                          [ Найдено ]
	    [+] Software: System tooling
	    ------------------------------------
	      - Checking automation tooling
	      - Automation tooling                                        [ НЕ НАЙДЕНО ]
	      - Checking for IDS/IPS tooling                              [ Отсутствует ]
	    [+] Software: Вредоносное ПО
	    ------------------------------------
	    [+] File Permissions
	    ------------------------------------
	      - Starting file permissions check
	        File: /etc/at.deny                                        [ ПРЕДЛОЖЕНИЕ ]
	        File: /etc/cron.deny                                      [ ПРЕДЛОЖЕНИЕ ]
	        File: /etc/crontab                                        [ ПРЕДЛОЖЕНИЕ ]
	        File: /etc/group                                          [ ОК ]
	        File: /etc/group-                                         [ ОК ]
	        File: /etc/issue                                          [ ОК ]
	        File: /etc/issue.net                                      [ ОК ]
	        File: /etc/motd                                           [ ОК ]
	        File: /etc/passwd                                         [ ОК ]
	        File: /etc/passwd-                                        [ ОК ]
	        File: /etc/ssh/sshd_config                                [ ОК ]
	        Directory: /etc/cron.d                                    [ ПРЕДЛОЖЕНИЕ ]
	        Directory: /etc/cron.daily                                [ ПРЕДЛОЖЕНИЕ ]
	        Directory: /etc/cron.hourly                               [ ПРЕДЛОЖЕНИЕ ]
	        Directory: /etc/cron.weekly                               [ ПРЕДЛОЖЕНИЕ ]
	        Directory: /etc/cron.monthly                              [ ПРЕДЛОЖЕНИЕ ]
	    [+] Home directories
	    ------------------------------------
	      - Permissions of home directories                           [ ОК ]
	      - Ownership of home directories                             [ ОК ]
	      - Checking shell history files                              [ ОК ]
	    [+] Kernel Hardening
	    ------------------------------------
	      - Comparing sysctl key pairs with scan profile
	        - fs.protected_hardlinks (exp: 1)                         [ ОК ]
	        - fs.protected_symlinks (exp: 1)                          [ ОК ]
	        - fs.suid_dumpable (exp: 0)                               [ ОК ]
	        - kernel.core_uses_pid (exp: 1)                           [ ОК ]
	        - kernel.ctrl-alt-del (exp: 0)                            [ ОК ]
	        - kernel.dmesg_restrict (exp: 1)                          [ DIFFERENT ]
	        - kernel.kptr_restrict (exp: 2)                           [ DIFFERENT ]
	        - kernel.randomize_va_space (exp: 2)                      [ ОК ]
	        - kernel.sysrq (exp: 0)                                   [ DIFFERENT ]
	        - kernel.yama.ptrace_scope (exp: 1 2 3)                   [ DIFFERENT ]
	        - net.ipv4.conf.all.accept_redirects (exp: 0)             [ ОК ]
	        - net.ipv4.conf.all.accept_source_route (exp: 0)          [ ОК ]
	        - net.ipv4.conf.all.bootp_relay (exp: 0)                  [ ОК ]
	        - net.ipv4.conf.all.forwarding (exp: 0)                   [ DIFFERENT ]
	        - net.ipv4.conf.all.log_martians (exp: 1)                 [ DIFFERENT ]
	        - net.ipv4.conf.all.mc_forwarding (exp: 0)                [ ОК ]
	        - net.ipv4.conf.all.proxy_arp (exp: 0)                    [ ОК ]
	        - net.ipv4.conf.all.rp_filter (exp: 1)                    [ ОК ]
	        - net.ipv4.conf.all.send_redirects (exp: 0)               [ ОК ]
	        - net.ipv4.conf.default.accept_redirects (exp: 0)         [ ОК ]
	        - net.ipv4.conf.default.accept_source_route (exp: 0)      [ DIFFERENT ]
	        - net.ipv4.conf.default.log_martians (exp: 1)             [ DIFFERENT ]
	        - net.ipv4.icmp_echo_ignore_broadcasts (exp: 1)           [ ОК ]
	        - net.ipv4.icmp_ignore_bogus_error_responses (exp: 1)     [ ОК ]
	        - net.ipv4.tcp_syncookies (exp: 1)                        [ ОК ]
	        - net.ipv4.tcp_timestamps (exp: 0 1)                      [ ОК ]
	        - net.ipv6.conf.all.accept_redirects (exp: 0)             [ ОК ]
	        - net.ipv6.conf.all.accept_source_route (exp: 0)          [ ОК ]
	        - net.ipv6.conf.default.accept_redirects (exp: 0)         [ ОК ]
	        - net.ipv6.conf.default.accept_source_route (exp: 0)      [ ОК ]
	    [+] Hardening
	    ------------------------------------
	        - Installed compiler(s)                                   [ Найдено ]
	        - Installed malware scanner                               [ НЕ НАЙДЕНО ]
	    [+] Пользовательские тесты
	    ------------------------------------
	      - Running custom tests...                                   [ NONE ]
	    [+] Plugins (Стадия 2)
	    ------------------------------------
	      - Plugins (phase 2)                                         [ DONE ]
	    ================================================================================
	      -[ Lynis 3.0.2 Results ]-
	      Warnings (2):
	      ----------------------------
	      ! Couldn't find 2 responsive nameservers [NETW-2705]
	          https://cisofy.com/lynis/controls/NETW-2705/
	      ! Found promiscuous interface [NETW-3015]
	        - Details  : virbr0-nic
	        - Solution : Determine if this mode is required or whitelist interface in profile
	          https://cisofy.com/lynis/controls/NETW-3015/
	      Suggestions (46):
	      ----------------------------
	      * If not required, consider explicit disabling of core dump in /etc/security/limits.conf file [KRNL-5820]
	          https://cisofy.com/lynis/controls/KRNL-5820/
	      * Check PAM configuration, add rounds if applicable and expire passwords to encrypt with new values [AUTH-9229]
	          https://cisofy.com/lynis/controls/AUTH-9229/
	      * Configure minimum encryption algorithm rounds in /etc/login.defs [AUTH-9230]
	          https://cisofy.com/lynis/controls/AUTH-9230/
	      * Configure maximum encryption algorithm rounds in /etc/login.defs [AUTH-9230]
	          https://cisofy.com/lynis/controls/AUTH-9230/
	      * When possible set expire dates for all password protected accounts [AUTH-9282]
	          https://cisofy.com/lynis/controls/AUTH-9282/
	      * Configure minimum password age in /etc/login.defs [AUTH-9286]
	          https://cisofy.com/lynis/controls/AUTH-9286/
	      * Configure maximum password age in /etc/login.defs [AUTH-9286]
	          https://cisofy.com/lynis/controls/AUTH-9286/
	      * Default umask in /etc/profile or /etc/profile.d/custom.sh could be more strict (e.g. 027) [AUTH-9328]
	          https://cisofy.com/lynis/controls/AUTH-9328/
	      * To decrease the impact of a full /tmp file system, place /tmp on a separate partition [FILE-6310]
	          https://cisofy.com/lynis/controls/FILE-6310/
	      * To decrease the impact of a full /var file system, place /var on a separate partition [FILE-6310]
	          https://cisofy.com/lynis/controls/FILE-6310/
	      * Check 10 files in /tmp which are older than 90 days [FILE-6354]
	          https://cisofy.com/lynis/controls/FILE-6354/
	      * The database required for 'locate' could not be found. Run 'updatedb' or 'locate.updatedb' to create this file. [FILE-6410]
	          https://cisofy.com/lynis/controls/FILE-6410/
	      * Consider disabling unused kernel modules [FILE-6430]
	        - Details  : /etc/modprobe.d/blacklist.conf
	        - Solution : Add 'install MODULENAME /bin/true' (without quotes)
	          https://cisofy.com/lynis/controls/FILE-6430/
	      * Disable drivers ltusere USB storage when not used, to prevent unauthorized storage or data theft [USB-1000]
	          https://cisofy.com/lynis/controls/USB-1000/
	      * Disable drivers ltusere firewire storage when not used, to prevent unauthorized storage or data theft [STRG-1846]
	          https://cisofy.com/lynis/controls/STRG-1846/
	      * Split resolving between localhost and the hostname of the system [NAME-4406]
	          https://cisofy.com/lynis/controls/NAME-4406/
	      * Consider using a tool to automatically apply upgrades [PKGS-7420]
	          https://cisofy.com/lynis/controls/PKGS-7420/
	      * Check your resolv.conf file and fill in a backup nameserver if possible [NETW-2705]
	          https://cisofy.com/lynis/controls/NETW-2705/
	      * Determine if protocol 'dccp' is really needed on this system [NETW-3200]
	          https://cisofy.com/lynis/controls/NETW-3200/
	      * Determine if protocol 'sctp' is really needed on this system [NETW-3200]
	          https://cisofy.com/lynis/controls/NETW-3200/
	      * Determine if protocol 'rds' is really needed on this system [NETW-3200]
	          https://cisofy.com/lynis/controls/NETW-3200/
	      * Determine if protocol 'tipc' is really needed on this system [NETW-3200]
	          https://cisofy.com/lynis/controls/NETW-3200/
	      * Check CUPS configuration if it really needs to listen on the network [PRNT-2308]
	          https://cisofy.com/lynis/controls/PRNT-2308/
	      * Check iptables rules to see which rules are currently not used [FIRE-4513]
	          https://cisofy.com/lynis/controls/FIRE-4513/
	      * Consider hardening SSH configuration [SSH-7408]
	        - Details  : AllowTcpForwarding (set YES to NO)
	          https://cisofy.com/lynis/controls/SSH-7408/
	      * Consider hardening SSH configuration [SSH-7408]
	        - Details  : ClientAliveCountMax (set 3 to 2)
	          https://cisofy.com/lynis/controls/SSH-7408/
	      * Consider hardening SSH configuration [SSH-7408]
	        - Details  : Compression (set YES to NO)
	          https://cisofy.com/lynis/controls/SSH-7408/
	      * Consider hardening SSH configuration [SSH-7408]
	        - Details  : LogLevel (set INFO to VERBOSE)
	          https://cisofy.com/lynis/controls/SSH-7408/
	      * Consider hardening SSH configuration [SSH-7408]
	        - Details  : MaxAuthTries (set 6 to 3)
	          https://cisofy.com/lynis/controls/SSH-7408/
	      * Consider hardening SSH configuration [SSH-7408]
	        - Details  : MaxSessions (set 10 to 2)
	          https://cisofy.com/lynis/controls/SSH-7408/
	      * Consider hardening SSH configuration [SSH-7408]
	        - Details  : PermitRootLogin (set YES to (FORCED-COMMANDS-ONLY|NO|PROHIBIT-PASSWORD|WITHOUT-PASSWORD))
	          https://cisofy.com/lynis/controls/SSH-7408/
	      * Consider hardening SSH configuration [SSH-7408]
	        - Details  : Port (set 22 to )
	          https://cisofy.com/lynis/controls/SSH-7408/
	      * Consider hardening SSH configuration [SSH-7408]
	        - Details  : TCPKeepAlive (set YES to NO)
	          https://cisofy.com/lynis/controls/SSH-7408/
	      * Consider hardening SSH configuration [SSH-7408]
	        - Details  : X11Forwarding (set YES to NO)
	          https://cisofy.com/lynis/controls/SSH-7408/
	      * Consider hardening SSH configuration [SSH-7408]
	        - Details  : AllowAgentForwarding (set YES to NO)
	          https://cisofy.com/lynis/controls/SSH-7408/
	      * Enable logging to an external logging host for archiving purposes and additional protection [LOGG-2154]
	          https://cisofy.com/lynis/controls/LOGG-2154/
	      * Check what deleted files are still in use and why. [LOGG-2190]
	          https://cisofy.com/lynis/controls/LOGG-2190/
	      * Add a legal banner to /etc/issue, to warn unauthorized users [BANN-7126]
	          https://cisofy.com/lynis/controls/BANN-7126/
	      * Add legal banner to /etc/issue.net, to warn unauthorized users [BANN-7130]
	          https://cisofy.com/lynis/controls/BANN-7130/
	      * Enable sysstat to collect accounting (no results) [ACCT-9626]
	          https://cisofy.com/lynis/controls/ACCT-9626/
	      * Audit daemon is enabled with an empty ruleset. Disable the daemon or define rules [ACCT-9630]
	          https://cisofy.com/lynis/controls/ACCT-9630/
	      * Determine if automation tools are present for system management [TOOL-5002]
	          https://cisofy.com/lynis/controls/TOOL-5002/
	      * Consider restricting file permissions [FILE-7524]
	        - Details  : See screen output or log file
	        - Solution : Use chmod to change file permissions
	          https://cisofy.com/lynis/controls/FILE-7524/
	      * One or more sysctl values differ from the scan profile and could be tweaked [KRNL-6000]
	        - Solution : Change sysctl value or disable test (skip-test=KRNL-6000:<sysctl-key>)
	          https://cisofy.com/lynis/controls/KRNL-6000/
	      * Harden compilers ltusere restricting access to root user only [HRDN-7222]
	          https://cisofy.com/lynis/controls/HRDN-7222/
	      * Harden the system by installing at least one malware scanner, to perform periodic file system scans [HRDN-7230]
	        - Solution : Install a tool ltusere rkhunter, chkrootkit, OSSEC
	          https://cisofy.com/lynis/controls/HRDN-7230/
	      Follow-up:
	      ----------------------------
	      - Show details of a test (lynis show details TEST-ID)
	      - Check the logfile for all details (less /var/log/lynis.log)
	      - Read security controls texts (https://cisofy.com)
	      - Use --upload to upload data to central system (Lynis Enterprise users)
	    ================================================================================
	      Lynis security scan details:
	      Hardening index : 65 [#############       ]
	      Tests performed : 266
	      Plugins enabled : 2
	      Components:
	      - Firewall               [V]
	      - Malware scanner        [X]
	      Scan mode:
	      Normal [V]  Forensics [ ]  Integration [ ]  Pentest [ ]
	      Lynis modules:
	      - Compliance status      [?]
	      - Security audit         [V]
	      - Vulnerability scan     [V]
	      Files:
	      - Test and debug information      : /var/log/lynis.log
	      - Report data                     : /var/log/lynis-report.dat
	    ================================================================================
	      Lynis 3.0.2
	      Auditing, system hardening, and compliance for UNIX-based systems
	      (Linux, macOS, BSD, and others)
	      2007-2020, CISOfy - https://cisofy.com/lynis/
	      Enterprise support available (compliance, plugins, interface and tools)
	    ================================================================================
	      [TIP]: Enhance Lynis audits by adding your settings to custom.prf (see /sec/lynis/default.prf for all settings)
	Task:
	Lynis даёт возможность найти дополнительную информацию о каждом предложении по исправлению с помощью команды show details, за которой следует номер теста TEST-ID. Например, чтобы узнать дополнительную информацию для теста SSH-7408 я ввожу $ ./lynis show details SSH-7408 и получаю
	Decision:
	# ./lynis show details SSH-7408
	    2020-10-22 01:58:22 Performing test ID SSH-7408 (Check SSH specific defined options)
	    2020-10-22 01:58:22 Test: Checking specific defined options in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:22 Test: Checking AllowTcpForwarding in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:22 Result: Option AllowTcpForwarding found
	    2020-10-22 01:58:22 Result: Option AllowTcpForwarding value is YES
	    2020-10-22 01:58:22 Result: OpenSSH option AllowTcpForwarding is in a weak configuration state and should be fixed
	    2020-10-22 01:58:22 Suggestion: Consider hardening SSH configuration [test:SSH-7408] [details:AllowTcpForwarding (set YES to NO)] [solution:-]
	    2020-10-22 01:58:23 Hardening: assigned partial number of hardening points (0 of 3). Currently having 137 points (out of 200)
	    2020-10-22 01:58:23 Test: Checking ClientAliveCountMax in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:23 Result: Option ClientAliveCountMax found
	    2020-10-22 01:58:23 Result: Option ClientAliveCountMax value is 3
	    2020-10-22 01:58:23 Result: OpenSSH option ClientAliveCountMax is configured reasonably
	    2020-10-22 01:58:23 Suggestion: Consider hardening SSH configuration [test:SSH-7408] [details:ClientAliveCountMax (set 3 to 2)] [solution:-]
	    2020-10-22 01:58:23 Hardening: assigned partial number of hardening points (1 of 3). Currently having 138 points (out of 203)
	    2020-10-22 01:58:23 Test: Checking ClientAliveInterval in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:23 Result: Option ClientAliveInterval found
	    2020-10-22 01:58:23 Result: Option ClientAliveInterval value is 0
	    2020-10-22 01:58:23 Result: OpenSSH option ClientAliveInterval is configured very well
	    2020-10-22 01:58:23 Hardening: assigned maximum number of hardening points for this item (3). Currently having 141 points (out of 206)
	    2020-10-22 01:58:23 Test: Checking Compression in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:23 Result: Option Compression found
	    2020-10-22 01:58:23 Result: Option Compression value is YES
	    2020-10-22 01:58:23 Result: OpenSSH option Compression is in a weak configuration state and should be fixed
	    2020-10-22 01:58:23 Suggestion: Consider hardening SSH configuration [test:SSH-7408] [details:Compression (set YES to NO)] [solution:-]
	    2020-10-22 01:58:23 Hardening: assigned partial number of hardening points (0 of 3). Currently having 141 points (out of 209)
	    2020-10-22 01:58:23 Test: Checking FingerprintHash in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:23 Result: Option FingerprintHash found
	    2020-10-22 01:58:23 Result: Option FingerprintHash value is SHA256
	    2020-10-22 01:58:23 Result: OpenSSH option FingerprintHash is configured very well
	    2020-10-22 01:58:23 Hardening: assigned maximum number of hardening points for this item (3). Currently having 144 points (out of 212)
	    2020-10-22 01:58:23 Test: Checking GatewayPorts in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:23 Result: Option GatewayPorts found
	    2020-10-22 01:58:23 Result: Option GatewayPorts value is NO
	    2020-10-22 01:58:23 Result: OpenSSH option GatewayPorts is configured very well
	    2020-10-22 01:58:23 Hardening: assigned maximum number of hardening points for this item (3). Currently having 147 points (out of 215)
	    2020-10-22 01:58:23 Test: Checking IgnoreRhosts in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:23 Result: Option IgnoreRhosts found
	    2020-10-22 01:58:23 Result: Option IgnoreRhosts value is YES
	    2020-10-22 01:58:23 Result: OpenSSH option IgnoreRhosts is configured very well
	    2020-10-22 01:58:23 Hardening: assigned maximum number of hardening points for this item (3). Currently having 150 points (out of 218)
	    2020-10-22 01:58:23 Test: Checking LoginGraceTime in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:23 Result: Option LoginGraceTime found
	    2020-10-22 01:58:23 Result: Option LoginGraceTime value is 120
	    2020-10-22 01:58:23 Result: OpenSSH option LoginGraceTime is configured very well
	    2020-10-22 01:58:23 Hardening: assigned maximum number of hardening points for this item (3). Currently having 153 points (out of 221)
	    2020-10-22 01:58:24 Test: Checking LogLevel in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:24 Result: Option LogLevel found
	    2020-10-22 01:58:24 Result: Option LogLevel value is INFO
	    2020-10-22 01:58:24 Result: OpenSSH option LogLevel is configured reasonably
	    2020-10-22 01:58:24 Suggestion: Consider hardening SSH configuration [test:SSH-7408] [details:LogLevel (set INFO to VERBOSE)] [solution:-]
	    2020-10-22 01:58:24 Hardening: assigned partial number of hardening points (1 of 3). Currently having 154 points (out of 224)
	    2020-10-22 01:58:24 Test: Checking MaxAuthTries in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:24 Result: Option MaxAuthTries found
	    2020-10-22 01:58:24 Result: Option MaxAuthTries value is 6
	    2020-10-22 01:58:24 Result: OpenSSH option MaxAuthTries is configured reasonably
	    2020-10-22 01:58:24 Suggestion: Consider hardening SSH configuration [test:SSH-7408] [details:MaxAuthTries (set 6 to 3)] [solution:-]
	    2020-10-22 01:58:24 Hardening: assigned partial number of hardening points (1 of 3). Currently having 155 points (out of 227)
	    2020-10-22 01:58:24 Test: Checking MaxSessions in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:24 Result: Option MaxSessions found
	    2020-10-22 01:58:24 Result: Option MaxSessions value is 10
	    2020-10-22 01:58:24 Result: OpenSSH option MaxSessions is in a weak configuration state and should be fixed
	    2020-10-22 01:58:24 Suggestion: Consider hardening SSH configuration [test:SSH-7408] [details:MaxSessions (set 10 to 2)] [solution:-]
	    2020-10-22 01:58:24 Hardening: assigned partial number of hardening points (0 of 3). Currently having 155 points (out of 230)
	    2020-10-22 01:58:24 Test: Checking PermitRootLogin in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:24 Result: Option PermitRootLogin found
	    2020-10-22 01:58:24 Result: Option PermitRootLogin value is YES
	    2020-10-22 01:58:24 Result: OpenSSH option PermitRootLogin is in a weak configuration state and should be fixed
	    2020-10-22 01:58:24 Suggestion: Consider hardening SSH configuration [test:SSH-7408] [details:PermitRootLogin (set YES to (FORCED-COMMANDS-ONLY|NO|PROHIBIT-PASSWORD|WITHOUT-PASSWORD))] [solution:-]
	    2020-10-22 01:58:24 Hardening: assigned partial number of hardening points (0 of 3). Currently having 155 points (out of 233)
	    2020-10-22 01:58:24 Test: Checking PermitUserEnvironment in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:24 Result: Option PermitUserEnvironment found
	    2020-10-22 01:58:24 Result: Option PermitUserEnvironment value is NO
	    2020-10-22 01:58:24 Result: OpenSSH option PermitUserEnvironment is configured very well
	    2020-10-22 01:58:24 Hardening: assigned maximum number of hardening points for this item (3). Currently having 158 points (out of 236)
	    2020-10-22 01:58:24 Test: Checking PermitTunnel in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:24 Result: Option PermitTunnel found
	    2020-10-22 01:58:24 Result: Option PermitTunnel value is NO
	    2020-10-22 01:58:24 Result: OpenSSH option PermitTunnel is configured very well
	    2020-10-22 01:58:24 Hardening: assigned maximum number of hardening points for this item (3). Currently having 161 points (out of 239)
	    2020-10-22 01:58:24 Test: Checking Port in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:24 Result: Option Port found
	    2020-10-22 01:58:24 Result: Option Port value is 22
	    2020-10-22 01:58:24 Result: OpenSSH option Port is in a weak configuration state and should be fixed
	    2020-10-22 01:58:24 Suggestion: Consider hardening SSH configuration [test:SSH-7408] [details:Port (set 22 to )] [solution:-]
	    2020-10-22 01:58:24 Hardening: assigned partial number of hardening points (0 of 3). Currently having 161 points (out of 242)
	    2020-10-22 01:58:24 Test: Checking PrintLastLog in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:24 Result: Option PrintLastLog found
	    2020-10-22 01:58:24 Result: Option PrintLastLog value is YES
	    2020-10-22 01:58:24 Result: OpenSSH option PrintLastLog is configured very well
	    2020-10-22 01:58:25 Hardening: assigned maximum number of hardening points for this item (3). Currently having 164 points (out of 245)
	    2020-10-22 01:58:25 Test: Checking StrictModes in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:25 Result: Option StrictModes found
	    2020-10-22 01:58:25 Result: Option StrictModes value is YES
	    2020-10-22 01:58:25 Result: OpenSSH option StrictModes is configured very well
	    2020-10-22 01:58:25 Hardening: assigned maximum number of hardening points for this item (3). Currently having 167 points (out of 248)
	    2020-10-22 01:58:25 Test: Checking TCPKeepAlive in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:25 Result: Option TCPKeepAlive found
	    2020-10-22 01:58:25 Result: Option TCPKeepAlive value is YES
	    2020-10-22 01:58:25 Result: OpenSSH option TCPKeepAlive is in a weak configuration state and should be fixed
	    2020-10-22 01:58:25 Suggestion: Consider hardening SSH configuration [test:SSH-7408] [details:TCPKeepAlive (set YES to NO)] [solution:-]
	    2020-10-22 01:58:25 Hardening: assigned partial number of hardening points (0 of 3). Currently having 167 points (out of 251)
	    2020-10-22 01:58:25 Test: Checking UseDNS in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:25 Result: Option UseDNS found
	    2020-10-22 01:58:25 Result: Option UseDNS value is NO
	    2020-10-22 01:58:25 Result: OpenSSH option UseDNS is configured very well
	    2020-10-22 01:58:25 Hardening: assigned maximum number of hardening points for this item (3). Currently having 170 points (out of 254)
	    2020-10-22 01:58:25 Test: Checking X11Forwarding in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:25 Result: Option X11Forwarding found
	    2020-10-22 01:58:25 Result: Option X11Forwarding value is YES
	    2020-10-22 01:58:25 Result: OpenSSH option X11Forwarding is in a weak configuration state and should be fixed
	    2020-10-22 01:58:25 Suggestion: Consider hardening SSH configuration [test:SSH-7408] [details:X11Forwarding (set YES to NO)] [solution:-]
	    2020-10-22 01:58:25 Hardening: assigned partial number of hardening points (0 of 3). Currently having 170 points (out of 257)
	    2020-10-22 01:58:25 Test: Checking AllowAgentForwarding in /tmp/lynis.nTvV333rOB
	    2020-10-22 01:58:25 Result: Option AllowAgentForwarding found
	    2020-10-22 01:58:25 Result: Option AllowAgentForwarding value is YES
	    2020-10-22 01:58:25 Result: OpenSSH option AllowAgentForwarding is in a weak configuration state and should be fixed
	    2020-10-22 01:58:25 Suggestion: Consider hardening SSH configuration [test:SSH-7408] [details:AllowAgentForwarding (set YES to NO)] [solution:-]
	    2020-10-22 01:58:25 Hardening: assigned partial number of hardening points (0 of 3). Currently having 170 points (out of 260)
	    2020-10-22 01:58:25 ====
	Source:
	1. https://drive.google.com/drive/folders/1SUpqELdGy0O2zEDbmfnx35zViexy5xZL
	2. https://losst.ru/kak-polzovatsya-nmap-dlya-skanirovaniya-seti
	3. https://www.server-world.info/en/note?os=CentOS_7&p=tripwire
	4. https://www.lisenet.com/2017/configure-tripwire-on-centos-7/
	5. https://habr.com/sandbox/29825/
	6. https://kamaok.org.ua/?p=813
	7. https://habr.com/company/first/blog/243487/
	8. https://www.youtube.com/playlist?list=PLZhCxwdwDOs_mcD3BzbfiJX-V1kHbMjsh
	9. https://www.youtube.com/playlist?list=PLtSGboPf3g50Aejrp6KjQsqqjxvAO4aKw
    10. https://www.youtube.com/playlist?list=PLdEqf7lxtAH--exov42yypdvOi7bDqoBQ
    11. https://losst.ru/proverka-linux-na-virusy
    12. https://www.youtube.com/watch?v=t6wO3qsxrSo&list=PL76C3E97EB0FDB323&index=18&t=0s
    13. https://linuxconfig.org/how-to-install-xinetd-service-in-redhat-8

Обработка и сортировка данных 
	Task:
	Exe files
	Decision:
	$ mkdir Py-ExeFiles
	$ cd Py-ExeFiles/
	user@i1:~/Py/Py-ExeFiles$ python3 -m venv Py-Env
	user@i1:~/Py/Py-ExeFiles$ source Py-Env/bin/activate
	$ vim Py-ExeFiles.py
	$ cat Py-ExeFiles.py
	def sum(a,b):
	    result=a+b
	    with open("Py-ExeFiles_Result.txt","w",encoding="utf-8") as file:
	        file.write(str(result))
	def main():
	    a=int(input("Enter a: "))
	    b=int(input("Enter b: "))
	    sum(a,b)
	if __name__== '__main__':
	    main()
	$ python Py-ExeFiles.py
	Enter a: 3
	Enter b: 15
	$ cat Py-ExeFiles_Result.txt
	18
	$ pip install auto-py-to-exe
	$ auto-py-to-exe

	Browse - Py-ExeFiles.py - One file - --name - Py-ExeFiles - convert

	$ ls output/
	Py-ExeFiles
	$ deactivate

Обработка и сортировка данных одночастотных приёмников спутниковых радионавигационных систем (Cpp)
	Task:
	Разработать программу, которая позволяет данным, полученным от приемника из файлов RINEX в текстовом формате, получать разность псевдодальностей (это расстояние между спутником и приемником, полученное путем умножения значения скорости света на временную задержку распространения сигнала, измеренную часами спутника и приемника) спутника и сортирует псевдодальности для каждой навигации по спутнику, чтобы упростить дальнейшую обработку. 
	Task:
	Попробуем в файле irkj1380.txt вывести всю информацию до END OF HEADER в out.txt.
	Decision:
	     2              OBSERVATION DATA    M (MIXED)           RINEX VERSION / TYPE
	CCRINEXO V2.4.1 LH  imvp                19-MAY-15 06:30     PGM / RUN BY / DATE
	no comments                                                 COMMENT
	JPS2RIN 1.40 LNX    IMVP                18-MAY-15 01:08     COMMENT
	BUILD MAY 14 2009 (C) TOPCON POSITIONING SYSTEMS            COMMENT
	IRKJ40190000.JPS                                            COMMENT
	SE TPS 00000000                                             COMMENT
	IRKJ                                                        MARKER NAME
	12313M002                                                   MARKER NUMBER
	                    VS NIIFTRI, IRKUTSK                     OBSERVER / AGENCY
	00517               JPS LEGACY          2.6.0 OCT,24,2007   REC # / TYPE / VERS
	RA0225              JPSREGANT_SD_E1 NONE                    ANT # / TYPE
	  -968328.4915  3794423.9665  5018165.4637                  APPROX POSITION XYZ
	        0.1280        0.0000        0.0000                  ANTENNA: DELTA H/E/N
	     1     1                                                WAVELENGTH FACT L1/2
	     7    C1    P1    P2    L1    L2    D1    D2            # / TYPES OF OBSERV
	    30                                                      INTERVAL
	  2015     5    18     0     0    0.000000      GPS         TIME OF FIRST OBS
	                                                            END OF HEADER
	Task:
	Вывести следующую строку после END OF HEADER
	Decision:
	15  5 18  0  0  0.0000000  1 19G01G04G11G12G14G18G22G24G25G31G32R05
	Task:
	Выведем количество спутников и названия спутников в строке
	Decision:
	19
	G01G04G11G12G14G18G22G24G25G31G32R05
	Task:
	нужно сделать так, что бы строка G01G04G11G12G14G18G22G24G25G31G32R05 читалась буквам, то есть создаем динамический массив с указателем.
	Decision:
	19
	G01G04G11G12G14G18G22G24G25G31G32R05
	G
	G
	G
	G
	G
	G
	G
	G
	G
	G
	G
	R
	Task:
	Вывести вторую строку.
	Decision:19
	G01G04G11G12G14G18G22G24G25G31G32R05
	R06R07R09R15R16R22R23
	Task:
	Вывести буквы спутников в столбец.
	Decision:
	19
	G01G04G11G12G14G18G22G24G25G31G32R05
	R
	R
	R
	R
	R
	R
	R
	Task:
	вывести по буквам и по цифрам. если увидим пробел, тогда операция не должна выполняться.
	Decision:
	19
	G01G04G11G12G14G18G22G24G25G31G32R05
	R
	0
	6
	R
	0
	7
	R
	0
	9
	R
	1
	5
	R
	1
	6
	R
	2
	2
	R
	2
	3
	Task:
	вывести все спутники в столбец.
	Decision:
	19
	G01
	G04
	G11
	G12
	G14
	G18
	G22
	G24
	G25
	G31
	G32
	R05
	R06
	R07
	R09
	R15
	R16
	R22
	R23
	Task:
	Нужно вывести псевдодальности для одной/первой эпохи (время - 0:0).
	Decision:
	19
	G01 G04 G11 G12 G14 G18 G22 G24 G25 G31 G32 R05 R06 R07 R09 R15 R16 R22 R23 2.40771e+07
	2.28061e+07
	2.4023e+07
	2.23889e+07
	2.06979e+07
	2.17159e+07
	2.04115e+07
	2.22393e+07
	2.35478e+07
	2.41313e+07
	2.3745e+07
	2.20981e+07
	1.91242e+07
	2.1007e+07
	2.22533e+07
	2.12016e+07
	1.94745e+07
	2.35659e+07
	2.28647e+07
	Task:
	мы вывели все псевдодальности для каждого спутника, но только для первой эпохи (время - 0:0). Чтобы посчитать для каждой эпохи, давайте переделаем программу, используя векторы. Сначала попробуем также считать и вывести названия спутников для первой эпохи.
	Decision:
	19
	G01
	G04
	G11
	G12
	G14
	G18
	G22
	G24
	G25
	G31
	G32
	R05
	R06
	R07
	R09
	R15
	R16
	R22
	Task:
	вывести псевдодальности для каждого спутника.
	Decision:
	19
	G01 G04 G11 G12 G14 G18 G22 G24 G25 G31 G32 R05 R06 R07 R09 R15 R16 R22 R23
	24077128.1194 22806124.8054 24022983.9984 22388929.9144 20697892.8884 21715906.8854 20411541.2704 22239301.1624 23547808.7034 24131268.6434 23745039.8404 22098086.832 19124242.27 21007031.526 22253250.468 21201583.22 19474489.084 23565923.703 22864670.122 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	Task:
	Попробуем и для первой и для второй эпохи (время: 0:00 - 0:30) проделать такие операции. Выводится название спутника, и расстояние (дальность) спутника. первая строка - для первой эпохи, вторая строка - для второй эпохи
	Decision:
	19
	19
	          G01           G04           G11           G12           G14           G18           G22           G24           G25           G31           G32           R05           R06           R07           R09           R15           R16           R22           R23
	24077128.1194 22806124.8054 24022983.9984 22388929.9144 20697892.8884 21715906.8854 20411541.2704 22239301.1624 23547808.7034 24131268.6434 23745039.8404  22098086.832   19124242.27  21007031.526  22253250.468   21201583.22  19474489.084  23565923.703  22864670.122             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0
	24065818.3394 22804492.2684 24023768.7094 22378483.9394 20691105.4344 21730480.5744 20415751.1104 22255260.6984 23528148.4594 24109572.7604 23726475.0794  22118176.666  19126075.998  20989472.459  22228716.936  21220136.852  19466441.002   23584399.66  22865445.005             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0
	Task:
	наведем теперь порядок в коде, чтобы все переменные были наверху, во вторых, чтобы постоянно вручную не считывать дальность для каждого спутника и для каждой эпохи, давайте изменим программу. Создадим цикл. 4 - 4 эпохи (время 0:00-1:30).
	Decision:
	19
	19
	19
	19
	          G01           G04           G11           G12           G14           G18           G22           G24           G25           G31           G32           R05           R06           R07           R09           R15           R16           R22           R23
	24077128.1194 22806124.8054 24022983.9984 22388929.9144 20697892.8884 21715906.8854 20411541.2704 22239301.1624 23547808.7034 24131268.6434 23745039.8404  22098086.832   19124242.27  21007031.526  22253250.468   21201583.22  19474489.084  23565923.703  22864670.122             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0
	24065818.3394 22804492.2684 24023768.7094 22378483.9394 20691105.4344 21730480.5744 20415751.1104 22255260.6984 23528148.4594 24109572.7604 23726475.0794  22118176.666  19126075.998  20989472.459  22228716.936  21220136.852  19466441.002   23584399.66  22865445.005             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0
	24054604.4524 22802978.2284 24024661.7794 22368141.6094 20684380.5444 21745121.8054 20420058.9764 22271281.9174 23508530.9834 24087901.1804 23707941.2624 118341978.858 102070810.568 112264586.751 118569402.732   21238782.99 103944062.756 125994130.633 122319666.917             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0
	24043483.7924 22801583.0244 24025665.3284 22357904.6154 20677717.7854 21759831.8404 20424464.4854 22287364.6624 23488954.4584 24066257.0444 23689442.3374 118449919.114 102081788.249 112171158.621 118438955.294  21257519.389 103902612.851 126093535.929 122325408.502             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0             0
	Task:
	Попробуем вывести для всех эпох данные спутников. Просто регулируем цикл.
	мы отсортировали данные псевдодальности к каждому спутник для всех эпох. нули в столбцах означают, что в спутниках отсутсвуют нужные данные. единственное, в нижнем скриншоте увидим, что появилиись какие-то нули и у них не обозначены спутники. Дело в том, что в программе мы указали размерность вектора массива 100 и в каждом файле принимаемого с приемника в нашем случае irkj1380.txt, количество эпох может быть разное. Поэтому тут нужно регулировать в нашем случае цифру 100. Я, например, посталю значение здесь 55. Уже покрасивее будет выглядеть наша таблица.
	Но давайте выведем на экран данные для двух спутников
	Decision:
	G01 G04 G11 G12 и т.д.
	24077128.119 22806124.805
	24065818.339 22804492.268
	24054604.452 22802978.228
	24043483.792 22801583.024
	24032459.125 22800306.861
	24021529.084 22799148.829
	24010696.527 22798110.763
	23999959.98 22797191.503
	23989317.858 22796390.025
	23978776.092 22795708.426
	23968330.915 22795144.69
	23957983.22 22794700.309
	23947732.989 22794375.481
	23937583.568 22794167.697
	23927530.52 22794080.594
	23917578.625 22794109.516
	23907725.007 22794258.689
	23897972.386 22794526.148
	23888318.516 22794910.502
	23878766.415 22795414.62
	... ...
	Task:
	вывести данные именно для одного спутника, например первого. Для этого закомментируем ненужные строки.
	Decision:
	24077128.119
	24065818.339
	24054604.452
	24043483.792
	24032459.125
	24021529.084
	24010696.527
	23999959.98
	23989317.858
	23978776.092
	23968330.915
	23957983.22
	23947732.989
	...
	Task:
	Попробуем просто сделать это все на графическом интерфейсе, вывести данные двух спутников, плюс еще нарисовать графики этих данных для двух спутников.
	Теперь нужно обработать и сортировать данные с геометрической дальностью для спутников. Файл называется igr18451.txt. Вот как выглядят данные, которые нужно отсортировать. Тут уже одна эпоха равняется 15 минутам.
	То что я выделил, это координаты спутника X,Y,Z. Именно их и нужно отсортировать. PG01 - название первого спутника. Попробуем вывести данные именно для него.
	Decision:
	PG04 16571.755106 7091.147720 19268.134634
	PG04 17081.817393 9222.831883 17918.904800
	PG04 17633.922784 11162.951350 16256.328779
	PG04 18194.986791 12883.319207 14310.615388
	PG04 18728.745598 14363.489413 12116.696076
	PG04 19197.262350 15591.290270 9713.525830
	PG04 19562.489921 16563.032391 7143.333216
	PG04 19787.827341 17283.391677 4450.837454
	PG04 19839.609715 17764.980464 1682.449322
	PG04 19688.476298 18027.631365 -1114.528992
	PG04 19310.568086 18097.427949 -3892.691773
	PG04 18688.514262 18005.524210 -6605.294077
	PG04 17812.175758 17786.800613 -9206.983073
	PG04 16679.123638 17478.408399 -11654.488894
	PG04 15294.839581 17118.255856 -13907.269035
	PG04 13672.635233 16743.490595 -15928.101701
	PG04 11833.296299 16389.030589 -17683.624513
	PG04 9804.465824 16086.194088 -19144.815686
	PG04 7619.789018 15861.474593 -20287.415200
	...
	Task:
	Это мы вывели координаты X,Y,Z и название спутника. Но мне теперь нужно вывести данные только Х для первого спутника.
	Decision:
	14736.411108
	15414.203154
	16201.304785
	17074.555745
	18004.439905
	18956.228081
	19891.328698
	20768.792721
	21546.914135
	...
	Task:
	Аналогично выводяся только для Y и Z выводим данные. Просто нужно поменять в коде x на y или z.
	Давайте попробуем поситать данные псевдодальности полученные с моего приемника, название файла называется sirfrin1.txt. Вот как выглядит файл:
	Здесь мы уже видим только две данные для спутников. первые, это дальность, которую как раз и нужно отсортировать по каждом НС, а вторые это, видимо, какие-то сигналы спутника, которые нас не особо не интересуют. И эпоха здесь начинается не с нуля, как мы видим, а с 41 минуты 23 секунды. Это тоже нужно учитывать, когда нужно будет сравнивать эти данные с ГД.
	Decision:
	Мы задачу выполнили (отсортировать данные ГД и ПД по каждом навигационному спутнику), остается только обработать эти данные по формулам и посторить по ним графики через Эксель.
	Decision:
	https://github.com/David138it/Cpp-ProcessingAndSortingOfDataFromSingle-frequencyReceiversSRNS
	https://github.com/David138it/MyPortfolio/tree/main/TaskDecision/Engineer-Isu
	Source:
    1. http://ftp.glonass-iac.ru/guide/navfaq.php
    2. https://ru.wtuseripedia.org/wtuseri/%D0%A1%D0%BF%D1%83%D1%82%D0%BD%D0%B8%D0%BA%D0%BE%D0%B2%D0%B0%D1%8F_%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0_%D0%BD%D0%B0%D0%B2%D0%B8%D0%B3%D0%B0%D1%86%D0%B8%D0%B8
    3. Харисов В.Н. Глобальная спутниковая радионавигационная система ГЛОНАСС
    4. Грудинская Г.П. Распространение радиоволн
    5. http://begin.clan.su/news/speciftusera_provedenija_psevdodalnomernykh_i_fazov/2013-09-18-135
    6. http://rrv.iszf.irk.ru/sites/default/files/conf2014/articles/tom2/17-20.pdf
    7. http://www.u-blox.com.
    8. Дэвис К. Радиоволны в ионосфере

Разработка сайта
	Task:
	Для разработки своего сайта, куда публиковал все решенные мной интересные задачи, сверстал простой сайт, развернул в Qemu-kvm виртуальную машину с операционной системой Ubuntu, в котором установил и настроил веб-сервер Lamp с своей базой данных на Mysql, опубликовал сайт в сервис Timeweb и в нем зарегистрировал домен
	Decision:
	$ wget https://ubuntu.com/download/desktop/thank-you?version=22.04.3&architecture=amd64
	$ sudo dnf install https://kojihub.stream.centos.org/kojifiles/packages/libvirt-python/8.5.0/2.el9/x86_64/
	$ sudo dnf install libguestfs-tools
	$ sudo dnf install libvirt-python
	$ sudo systemctl enable libvirtd
	$ sudo systemctl start libvirtd
	$ systemctl status libvirtd
	$ lsmod | grep kvm
	$ sudo ls -l /var/lib/libvirt/images/
	$ sudo ls -l /var/lib/libvirt/iso
	$ rpm -qa | grep bridge-utils
	$ sudo yum install bridge-utils
	$ ip a
	$ brctl show
	$ systemctl enable --now libvirtd
	$ nmcli connection add type bridge autoconnect yes con-name br0 ifname br0
	$ sudo su
	# nmcli connection modify br0 ipv4.addresses 10.0.0.30/24 ipv4.method manual
	# nmcli connection modify br0 ipv4.gateway 10.0.0.1
	# nmcli connection modify br0 ipv4.dns 10.0.0.10
	# nmcli connection modify br0 ipv4.dns-search srv.world
	# nmcli connection up enp0s21f0u1u4
	# nmcli connection del enp0s21f0u1u4
	# nmcli device
	# nmcli connection add type bridge-slave autoconnect yes con-name enp0s21f0u1u4 ifname enp0s21f0u1u4 master br0
	# nmcli device
	# reboot
	# ip addr
	# virt-install \
	--name ubuntu22.04 \
	--ram 2048 \
	--disk path=/var/lib/libvirt/images/ubuntu22.04.img,size=50 \
	--vcpus 2 \
	--os-variant Ubuntu \
	--network bridge=br0 \
	--graphics none \
	--console pty,target_type=serial \
	--location /var/lib/libvirt/iso/Ubuntu.iso \
	--extra-args 'console=ttyS0,115200n8'
	$ sudo virsh list --all
	$ sudo virsh start ubuntu22.04
	$ ssh -X tuser@IP
	Decision:
	$ sudo apt update
	$ sudo apt install apache2
	$ sudo ufw app list
	Available applications:
	  Apache
	  Apache Full
	  Apache Secure
	  CUPS
	  OpenSSH
	$ sudo ufw enable
	$ sudo ufw allow in "Apache"
	$ sudo ufw allow in "OpenSSH"
	$ sudo ufw status
	Status: active
	To                         Action      From
	--                         ------      ----
	Apache                     ALLOW       Anywhere                  
	Apache Full                ALLOW       Anywhere                  
	OpenSSH                    ALLOW       Anywhere                  
	Apache (v6)                ALLOW       Anywhere (v6)             
	Apache Full (v6)           ALLOW       Anywhere (v6)             
	OpenSSH (v6)               ALLOW       Anywhere (v6)
	$ firefox
	update.go:85: cannot change mount namespace according to change mount (/var/lib/snapd/hostfs/usr/share/gimp/2.0/help /usr/share/gimp/2.0/help none bind,ro 0 0): cannot open directory "/var/lib": permission denied
	update.go:85: cannot change mount namespace according to change mount (/var/lib/snapd/hostfs/usr/share/xubuntu-docs /usr/share/xubuntu-docs none bind,ro 0 0): cannot open directory "/var/lib": permission denied
	X11 connection rejected because of wrong authentication.
	X11 connection rejected because of wrong authentication.
	X11 connection rejected because of wrong authentication.
	X11 connection rejected because of wrong authentication.
	X11 connection rejected because of wrong authentication.
	X11 connection rejected because of wrong authentication.
	Error: cannot open display: localhost:10.0
	Decision:
	$ wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
	$ sudo dpkg -i --force-depends google-chrome-stable_current_amd64.deb
	$ google-chrome http://127.0.0.1
	Decision:
	$ sudo apt install mysql-server
	$ sudo mysql
	mysql> ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'tpassword';
	mysql> exit
	$ sudo mysql_secure_installation
	$ sudo mysql
	ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: NO)
	$ sudo mysql -u root -p
	mysql> exit
	Decision:
	$ sudo apt install php libapache2-mod-php php-mysql
	$ php -v
	$ cat /etc/php/8.1/apache2/php.ini | grep upload_max_filesize
	upload_max_filesize = 2M
	$ cat /etc/php/8.1/apache2/php.ini | grep post_max_size
	post_max_size = 8M
	$ cat /etc/php/8.1/apache2/php.ini | grep memory_limit
	memory_limit = 128M
	$ cat /etc/php/8.1/apache2/php.ini | grep max_execution_time
	max_execution_time = 30
	$ cat /etc/php/8.1/apache2/php.ini | grep max_input_vars
	;max_input_vars = 1000
	$ cat /etc/php/8.1/apache2/php.ini | grep max_input_time
	; max_input_time
	max_input_time = 60
	$ sudo vim /etc/php/8.1/apache2/php.ini
	$ cat /etc/php/8.1/apache2/php.ini | grep upload_max_filesize
	upload_max_filesize = 32M
	$ cat /etc/php/8.1/apache2/php.ini | grep post_max_size
	post_max_size = 48M
	$ cat /etc/php/8.1/apache2/php.ini | grep memory_limit
	memory_limit = 256M
	$ cat /etc/php/8.1/apache2/php.ini | grep max_execution_time
	max_execution_time = 600
	$ cat /etc/php/8.1/apache2/php.ini | grep max_input_vars
	max_input_vars = 3000
	$ cat /etc/php/8.1/apache2/php.ini | grep max_input_time
	; max_input_time
	max_input_time = 1000
	$ sudo service apache2 restart
	Decision:
	$ sudo mkdir /var/www/tdomain
	$ sudo chown -R $USER:$USER /var/www/tdomain
	$ sudo vim /etc/apache2/sites-available/tdomain.conf
	$ cat /etc/apache2/sites-available/tdomain.conf
	<VirtualHost *:80>
	    ServerName tdomain
	    ServerAlias www.tdomain
	    ServerAdmin webmaster@localhost
	    DocumentRoot /var/www/tdomain
	    ErrorLog ${APACHE_LOG_DIR}/error.log
	    CustomLog ${APACHE_LOG_DIR}/access.log combined
	</VirtualHost>
	$ sudo a2ensite tdomain
	$ sudo a2dissite 000-default
	$ sudo apache2ctl configtest
	$ sudo systemctl reload apache2
	$ vim /var/www/tdomain/index.html
	$ cat /var/www/tdomain/index.html
	<html>
	  <head>
	    <title>tdomain website</title>
	  </head>
	  <body>
	    <h1>Hello World!</h1>
	    <p>This is the landing page of <strong>tdomain</strong>.</p>
	  </body>
	</html>
	$ google-chrome http://127.0.0.1
	Decision:
	$ cat /etc/apache2/mods-enabled/dir.conf
	<IfModule mod_dir.c>
	    DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm
	</IfModule>
	# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
	$ sudo vim /etc/apache2/mods-enabled/dir.conf
	$ cat /etc/apache2/mods-enabled/dir.conf
	<IfModule mod_dir.c>
	    DirectoryIndex index.php index.html index.cgi index.pl index.php index.xhtml index.htm
	</IfModule>
	# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
	$ sudo systemctl reload apache2
	$ vim /var/www/tdomain/info.php
	$ cat /var/www/tdomain/info.php
	<?php
	phpinfo();
	$ google-chrome http://127.0.0.1/info.php
	$ sudo rm /var/www/tdomain/info.php
	$ sudo mysql -u root -p
	mysql> create database tbase;
	mysql> CREATE USER 'tuser'@'%' IDENTIFIED BY 'tpassword';
	mysql> GRANT ALL ON tbase.* TO 'tuser'@'%';
	mysql> exit
	$ mysql -u tuser -p
	mysql> show databases;
	+--------------------+
	| Database           |
	+--------------------+
	| information_schema |
	| performance_schema |
	| tbase              |
	+--------------------+
	3 rows in set (0.07 sec)
	mysql> create table tbase.ttable1
	    (ttable1_id INT PRIMARY KEY AUTO_INCREMENT,
	    content VARCHAR(255));
	CREATE TABLE tbase.ttable1
	    (ttable1_id INT PRIMARY KEY AUTO_INCREMENT,
	    column1 VARCHAR(255),
	    column2 VARCHAR(255),
	    column3 VARCHAR(255),
	    column4 VARCHAR(255),
	    column5 Date,
	    column6 Date);
	mysql> INSERT INTO tbase.ttable1
	    (column1, column2)
	VALUES
	    ("text1","text2"),
	    ("text3","text4"),
	    ("text5","text6"),
	    ("text7","text8");
	mysql> select * from tbase.ttable1;
	+------------+---------+---------+---------+---------+---------+---------+
	| ttable1_id | column1 | column2 | column3 | column4 | column5 | column6 |
	+------------+---------+---------+---------+---------+---------+---------+
	|          1 | text1   | text2   | NULL    | NULL    | NULL    | NULL    |
	|          2 | text3   | text4   | NULL    | NULL    | NULL    | NULL    |
	|          3 | text5   | text6   | NULL    | NULL    | NULL    | NULL    |
	|          4 | text7   | text8   | NULL    | NULL    | NULL    | NULL    |
	+------------+---------+---------+---------+---------+---------+---------+
	4 rows in set (0.00 sec)
	mysql> CREATE TABLE tbase.ttable2
	    (ttable2_id INT PRIMARY KEY AUTO_INCREMENT,
	    columnId INT,
	    column1 VARCHAR(500),
	    FOREIGN KEY (columnId) REFERENCES tbase.ttable1 (ttable1_id));
	mysql> INSERT INTO tbase.ttable2
	    (columnId, column1)
	VALUES
	    (1, "text9"),
	    (1, "text10"),
	    (2, "text11"),
	    (3, "text12"),
	    (4, "text13");
	mysql> select * from tbase.ttable2;
	+------------+----------+---------+
	| ttable2_id | columnId | column1 |
	+------------+----------+---------+
	|          1 |        1 | text9   |
	|          2 |        1 | text10  |
	|          3 |        2 | text11  |
	|          4 |        3 | text12  |
	|          5 |        4 | text13  |
	+------------+----------+---------+
	5 rows in set (0.00 sec)
	mysql> select * from tbase.ttable2
	    inner join tbase.ttable1
	    on ttable1.ttable1_id = ttable2.columnId;
	+------------+----------+---------+------------+---------+---------+---------+---------+---------+---------+
	| ttable2_id | columnId | column1 | ttable1_id | column1 | column2 | column3 | column4 | column5 | column6 |
	+------------+----------+---------+------------+---------+---------+---------+---------+---------+---------+
	|          1 |        1 | text9   |          1 | text1   | text2   | NULL    | NULL    | NULL    | NULL    |
	|          2 |        1 | text10  |          1 | text1   | text2   | NULL    | NULL    | NULL    | NULL    |
	|          3 |        2 | text11  |          2 | text3   | text4   | NULL    | NULL    | NULL    | NULL    |
	|          4 |        3 | text12  |          3 | text5   | text6   | NULL    | NULL    | NULL    | NULL    |
	|          5 |        4 | text13  |          4 | text7   | text8   | NULL    | NULL    | NULL    | NULL    |
	+------------+----------+---------+------------+---------+---------+---------+---------+---------+---------+
	5 rows in set (0.00 sec)
	mysql> exit
	$ vim /var/www/tdomain/index.php
	$ cat /var/www/tdomain/index.php
	<?php
	$user = "tuser";
	$password = "tpassword";
	$database = "tbase";
	$table1 = "ttable1";
	$table2 = "ttable2";
	try {
	    $db = new PDO("mysql:host=localhost;dbname=$database", $user, $password);
	    $query = $db->query("
	        select * from $database.$table2
	        inner join $database.$table1
	        on $table1.experience_id=$table2.experienceId;
	    ");
	    foreach($query as $row) {
	        echo '
	        <li><strong>
	        ' . $row['column1'] . '
	        -
	        ' . $row['column2'] . '
	        :</strong>
	        ' . $row['column3'] . '
	        ;
	        ' . $row['column4'] . '
	        ;
	        ' . $row['column5'] . '
	        ;
	        ' . $row['column6'] . '
	        </li>
	        ';
	    }
	} catch (PDOException $e) {
	    print "Error!: " . $e->getMessage() . "<br/>";
	    die();
	}
	$ google-chrome http://127.0.0.1/index.php
	Decision:
	$ sudo apt update
	$ sudo apt install phpmyadmin php-mbstring php-zip php-gd php-json php-curl
	$ sudo apt install php8.1-fpm php8.1 libapache2-mod-php8.1 php8.1-common php8.1-mysql php8.1-xml php8.1-xmlrpc php8.1-imagick php8.1-cli php8.1-imap php8.1-opcache php8.1-soap php8.1-intl php8.1-bcmath unzip
	...
	granting access to database phpmyadmin for phpmyadmin@localhost: failed.
	error encountered creating user:
	mysql said: ERROR 1819 (HY000) at line 1: Your password does not satisfy the cur
	rent policy requirements
	dbconfig-common: phpmyadmin configure: aborted.
	dbconfig-common: flushing administrative password
	dpkg: error processing package phpmyadmin (--configure):
	 installed phpmyadmin package post-installation script subprocess returned error
	 exit status 1
	Processing triggers for libapache2-mod-php8.1 (8.1.2-1ubuntu2.14) ...
	...
	Errors were encountered while processing:
	 phpmyadmin
	E: Sub-process /usr/bin/dpkg returned an error code (1)
	$ mysql -u root -p
	mysql> UNINSTALL COMPONENT "file://component_validate_password";
	mysql> exit
	$ sudo apt install phpmyadmin
	...
	granting access to database phpmyadmin for phpmyadmin@localhost: success.
	verifying access for phpmyadmin@localhost: success.
	creating database phpmyadmin: success.
	verifying database phpmyadmin exists: success.
	populating database via sql...  done.
	dbconfig-common: flushing administrative password
	$ mysql -u root -p
	mysql> INSTALL COMPONENT "file://component_validate_password";
	mysql> exit
	$ sudo phpenmod mbstring
	$ sudo systemctl restart apache2
	$ mysql -u root -p
	mysql> SELECT user,authentication_string,plugin,host FROM mysql.user;
	mysql> exit
	$ sudo cp /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf
	$ sudo a2enconf phpmyadmin.conf
	$ systemctl reload apache2
	$ google-chrome http://127.0.0.1/phpmyadmin
	Decision:
	$ exit
	# virsh shutdown ubuntu22.04
	Source:
	https://winitpro.ru/index.php/2020/02/10/virsh-upravlenie-virtualnymi-mashinami-kvm/
	https://winitpro.ru/index.php/2020/02/04/ustanovka-zapusk-kvm-v-linux-centos/
	https://www.server-world.info/en/note?os=CentOS_Stream_9&p=kvm&f=1
	https://www.server-world.info/en/note?os=CentOS_Stream_9&p=initial_conf&f=3
	https://www.server-world.info/en/note?os=CentOS_Stream_9&p=kvm&f=2
	https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-22-04
	https://losst.pro/ustanovka-chrome-v-ubuntu-18-04?ysclid=lmdflkvc3v463974954
	https://qna.habr.com/q/439469?ysclid=lmdgkb49q827401606
	https://metanit.com/sql/mysql/2.5.php
	https://metanit.com/sql/mysql/5.2.php
	https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-phpmyadmin-on-ubuntu-20-04
	https://serverspace.ru/support/help/osnovnye-komandy-ufw/
	https://www.tutsmake.com/how-to-install-lamp-apache-mysql-php-in-ubuntu-22-04/
	https://www.php.net/manual/ru/faq.html.php
	https://www.8host.com/blog/kak-rabotayut-stroki-v-php/