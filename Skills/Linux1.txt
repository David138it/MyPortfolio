
Работа с устройствами
  Task:
  Анализ занятого места и его освобождение
  Decision:
  $ sudo apt-get -y install ncdu
  $ ncdu
  Task:
  Поиск процессов, которые "держат" удаленные файлы
  Decision:
  $ lsof | grep deleted
      pulseaudi 2309                          ubuntu    6u      REG                0,1  67108864      34867 /memfd:pulseaudio (deleted)
      gnome-she 2601 2612 gmain               ubuntu   32r      REG                8,5     32768     414249 /home/ubuntu/.local/share/gvfs-metadata/root-91a6702b.log (deleted)
      ...
      Web\x20Co 4259 4279 ProfilerC           ubuntu   68r      REG                0,1     19462      49425 /memfd:mozilla-ipc (deleted)
      Web\x20Co 4259 4279 ProfilerC           ubuntu   69r      REG                0,1      9566      49427 /memfd:mozilla-ipc (deleted)
  Task:
  Найдите самую большую директорию в корне
  Decision:
  $ sudo du -sh /* | sort -h | tail -3
  Task:
  Напишите команду, которая выведет сколько места на диске занимает текущая директория (при этом размер нужно вывести в удобном для чтения формате (например, вместо 2048 байт надо выводить 2.0К) и больше на экран выводить ничего не нужно).
  Decision.
  $ du -hs
      938M
  Task:
  Как очистить раздел от мусора в командной строке?
  Decision:
  Это файлы с расширениями .tmp,.trace,*.out и файлы старше 7 дней
  find /opt/test -iname "*.out" -daystart -atime +7 -exec rm {} \;
  Запись в cron:
  1 1 * * * /usr/bin/find /opt/test -iname "*.out" -daystart -atime +7 -exec rm {} \;
  /opt/test замени на то где нужно чистить
  Task:
  Я использую Ubuntu 20.04 LTS в качестве дистрибутива. Сегодня я включил его, и процесс загрузки упал до оболочки BusyBox, и в итоге я получил сообщение initramfs.А сколько я помню, я не сделал ничего плохого. Я не отключал его принудительно. Вчера все работало отлично! Когда я его сегодня включил, то попал в оболочку BusyBox:

      BusyBox v1.30.1 (Ubuntu 1:1.30.1-4ubuntu6.2) built-in shell (ash)
      Enter 'help' for a list of built-in commands.
  (initramfs)

  Я не могу пройти дальше этого экрана. Также он не показывает, в чем именно проблема. Я вижу только пустую оболочку busybox. Я не знал, что мне делать в этот момент, поэтому я просто передал команду «exit», чтобы посмотреть, что произойдет. А потом я увидел настоящую ошибку:

  (initramfs) exit
      /dev/sda1 contains a file system with errors, check forced.
      Inode 4326476 extent tree (at level 1) could be narrower, IGNORED.
      /dev/sda1: Inode 4326843 extent tree (at level 1) could be narrower, IGNORED.
      /dev/sda1: Inode 4327012 extent tree (at level 1) could be narrower, IGNORED.
      /dev/sda1: Inode 4329004 extent tree (at level 1) could be narrower, IGNORED.
      /dev/sda1: Inodes that were part of a corrupted orphan linked list found.
      /dev/sda1: UNEXPECTED INCONSISTENCY; RUN fsck MANUALLY.
              (i.e., without -a or -p options)
      fsck exited with status code 4.
      The root filesystem on /dev/sda1 requires a manual fsck.
      BusyBox v1.30.1 (Ubuntu 1:1.30.1-4ubuntu6.1) built-in shell (ash)
      Enter 'help' for a list of built-in commands.
  (initramfs)
  Decision:
  В файловой системе этого раздела есть ошибки.
  Для тех, кто задается вопросом, BusyBox — это программный пакет, который объединяет множество стандартных утилит UNIX в один небольшой исполняемый файл. Он обеспечивает замену большинства утилит, которые вы обычно найдете в GNU fileutils, shellutils и т.д. Initramfs — это начальная файловая система RAM, основанная на tmpfs. Она содержит инструменты и скрипты, необходимые для монтирования файловых систем перед вызовом двоичного файла init в реальной корневой файловой системе.
  Чтобы устранить ошибку initramfs в Ubuntu, вам необходимо восстановить файловую систему в поврежденном разделе с помощью команды «fsck»:

  (initramfs) fsck /dev/sda1 -y

  Теперь она начнет автоматически исправлять все ломаные блоки в файловой системе.
  Через пару минут вы увидите следующий результат:

      /dev/sda1: ***** FILE SYSTEM WAS MODIFIED *****
      /dev/sda1: 497733/30531584 files (1.5% non-contiguous), ........

  Теперь введите «reboot» и нажмите ENTER, чтобы перезагрузить систему!

  (initramfs) reboot

  Если все прошло хорошо, ваша система загрузится без проблем.

  После установки Центос 7 рядом с виндой 8 в меню загрузке исчезла винда, то есть видим только центос.
  Запускаем в Центосе командную строку и набираем:
  sudo vim /boot/grub2/grub.cfg

  и в самом конце файла пропишем:

      menuentry «Windows 8″{
      set root='(hd0,1)’ #тут регулировал вторую цифру и нужный раздел диска пишем
      chainloader +1
      }
  Task:
  Удалить раздел из диска
  Decision:
  $ sudo fdisk -l
  $ sudo fdisk /dev/sdb
  d
  p
  w
  Source:
  https://wiki.merionet.ru/servernye-resheniya/81/kak-udalit-razdel-diska-v-linux/
  Task:
  Не удалось получить доступ к местоположению
  Error mounting /dev/sdb1 at /run/media/...: Filesystem type ntfs3, ntfs not configured in kernel
  Decision:
  $ sudo yum install epel-release
  $ sudo yum install ntfs-3g
  Source:
  https://itisgood.ru/2019/03/26/kak-smontirovat-disk-ntfs-na-centos-rhel-scientific-linux/
  Task:
  Перемещение папки /var на другой физический диск
  Decision:
  $ lsblk
  NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
  ...
  sdc           8:32   0 931,5G  0 disk 
  $ sudo fdisk /dev/sdc
  ...
  Команда (m для справки): n
  ...
  Выберите (по умолчанию - p):p
  Номер раздела (1-4, default 1): 
  Первый сектор (2048-1953525167, default 2048): 
  Last sector, +/-sectors or +/-size{K,M,G,T,P} (2048-1953525167, default 1953525167): 
  ...
  Do you want to remove the signature? [Y] Да/[N] Нет: Y
  ...
  Команда (m для справки): w
  $ lsblk
  NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
  ...
  sdc           8:32   0 931,5G  0 disk 
  └─sdc1        8:33   0 931,5G  0 part 
  $ sudo mkfs -t ext4 /dev/sdc1
  mke2fs 1.46.5 (30-Dec-2021)
  ...
  Allocating group tables: done                            
  Writing inode tables: done                            
  Creating journal (262144 blocks): done
  Writing superblocks and filesystem accounting information: done
  $ sudo mount /dev/sdc1 /mnt
  $ lsblk
  NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
  ...
  sdc           8:32   0 931,5G  0 disk 
  └─sdc1        8:33   0 931,5G  0 part /mnt
  $ shopt -s dotglob
  $ sudo rsync -aulvXpogtr /var/* /mnt
  sending incremental file list
  ...
  total size is 63,868,813,893  speedup is 1.00
  $ ls -Zd /var
  system_u:object_r:var_t:s0 /var
  $ ls -Zd /mnt
  system_u:object_r:unlabeled_t:s0 /mnt
  $ sudo chcon -t var_t /mnt
  $ ls -Zd /mnt
  system_u:object_r:var_t:s0 /mnt
  $ sudo umount /mnt
  $ sudo blkid | grep sdc
  /dev/sdc1: UUID="823ae1fa-...-b71dbb654f1f" TYPE="ext4" PARTUUID="3d352be0-01"
  $ sudo vim /etc/fstab
  $ sudo cat /etc/fstab | grep ext4
  UUID=823ae1fa-...-b71dbb654f1f   /var  ext4  defaults,noatime,nofail 0 2
  $ sudo mv /var /var.back
  $ sudo mkdir /var
  $ sudo mount -av
  /                        : ignored
  ...
  /var                     : successfully mounted
  $ ls /var
  account  crash  ftp       lib    log         nis       run    yp
  adm      db     games     local  lost+found  opt       spool
  cache    empty  kerberos  lock   mail        preserve  tmp
  $ lsblk
  NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
  ...
  sdc           8:32   0 931,5G  0 disk 
  └─sdc1        8:33   0 931,5G  0 part /var
  Source:
  http://sysengineering.ru/notes/peremeschenie-papok-linux-na-drugoy-disk?ysclid=lisfix46x1712981898
  https://losst.pro/kakuyu-fajlovuyu-sistemu-vybrat-dlya-linux?ysclid=lishte72fq279374732
  Task:
  Предложите один или несколько программных средств, с помощью которых можно подготовить образ с ОС для последующей установки с этого носителя. 
  Task:
  посмотреть занятость файловой системы в %, в килограммах
  Decision:
  $ df --output=pcent
  Use%
    0%
    1%
   21%
    0%
    1%
    0%
  100%
  100%
  100%
  100%
  100%
  100%
  100%
  100%
  100%
    1%
  100%
   22%
    1%
  100%
  Task:
  оценить объем свободной памяти RAM, раздела подкачки
  Decision:
  $ free
                total        used        free      shared  buff/cache   available
  Mem:        2034736      956720       80744        6856      997272      883316
  Swap:       2097148       14668     2082480
  Task:
  оценить нагрузку на дисковую подсистему
  Decision:
  $ df
  Filesystem     1K-blocks      Used Available Use% Mounted on
  udev              987820         0    987820   0% /dev
  ...
  tmpfs             203472         8    203464   1% /run/user/1000
  Task:
  Как просмотреть нагрузку на диск в Linux
  Decision:
  $ sudo apt install sysstat
  $ iostat -xtc
  Linux 5.15.0-41-generic (i-1) 05.09.2022 _x86_64_ (4 CPU)
  05.09.2022 10:58:39
  avg-cpu: %user %nice %system %iowait %steal %idle
  25,40 0,14 11,25 4,76 0,00 58,46
  Device r/s rkB/s rrqm/s %rrqm r_await rareq-sz w/s wkB/s wrqm/s %wrqm w_await wareq-sz d/s dkB/s drqm/s %drqm d_await dareq-sz f/s f_await aqu-sz %util
  loop0 0,00 0,00 0,00 0,00 2,21 1,21 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00
  loop1 0,01 0,05 0,00 0,00 25,33 7,80 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,02
  ...
  sda 4,91 204,42 1,88 27,67 37,92 41,66 3,40 97,10 4,79 58,47 27,11 28,55 0,00 0,00 0,00 0,00 0,00 0,00 0,57 50,53 0,31 5,08
  sr0 0,00 0,00 0,00 0,00 1,60 0,20 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00 0,00
  $ pidstat -dl 5
  Linux 5.15.0-41-generic (i-1) 05.09.2022 _x86_64_ (4 CPU)
  11:01:25 UID PID kB_rd/s kB_wr/s kB_ccwr/s iodelay Command
  11:01:30 1000 3367 0,00 4,76 0,00 0 /snap/firefox/1794/usr/lib/firefox/firefox
  ...
  Среднее: UID PID kB_rd/s kB_wr/s kB_ccwr/s iodelay Command
  Среднее: 1000 3367 0,00 2,96 0,00 0 /snap/firefox/1794/usr/lib/firefox/firefox
  Среднее: 1000 61402 0,00 1,60 0,00 0 /opt/sublime_text/sublime_text --detached
  Source:
  1. https://te.legra.ph/Kak-prosmotret-nagruzku-na-disk-v-Linux-07-07

Bash
  Task:
  Создайте скрипт, который будет создавать файл. После чего скрипт будет прописывать последнюю строчку из сообщений syslog в этот файл. Затем будет отправлять в syslog своё сообщение - «Logs collected».
  Decision:
  $ vim BASH-LogScript1.sh
  $ chmod +x BASH-LogScript1.sh
  $ vim BASH-LogScript1.sh
  $ cat BASH-LogScript1.sh
  #!/bin/bash
  touch LogFile
  tail -n 1 /var/log/messages > LogFile
  echo 'Logs collected' >> /var/log/messages
  $ sudo ./BASH-LogScript1.sh
  $ sudo cat /var/log/messages | grep 'Logs collected'
      Logs collected
  Task:
  Настройте rsyslog, чтобы логи, посланные этим скриптом, сохранялись в отдельном файле «collect.log» в директории /var/log.
  Decision:
  $ logger -p local4.info "Logs Collected"
  $ sudo journalctl -p info | grep 'Logs Collected'
      апр 28 09:21:31 i6.rt.ru ur[5962]: Logs Collected
  $ sudo vim /etc/rsyslog.conf
  $ cat /etc/rsyslog.conf
  ....
  # Save boot messages also to boot.log
  local7.*                                                /var/log/boot.log
  local4.*                                                /var/log/collect.log
  ...
  $ sudo systemctl restart rsyslog
  $ sudo ./BASH-LogScript1.sh
  $ sudo cat /var/log/collect.log
      Apr 28 09:41:29 i6 ur[6135]: Logs Collected
  $ logger -p local4.info "Logs Collected"
  $ sudo cat /var/log/collect.log
      Apr 28 09:41:29 i6 ur[6135]: Logs Collected
      Apr 28 09:44:28 i6 ur[6162]: Logs Collected
  Task:
  Настройте ротацию этих логов, чтобы они сохранялись на протяжении месяца с еженедельной ротацией. Запустите скрипт и убедитесь, что все ранее проделанные шаги выполнили свою задачу.
  Decision:
  $ sudo vim /etc/logrotate.d/collect.conf
  $ cat /etc/logrotate.d/collect.conf
  /var/log/collect.log
  {
      dateext
      weekly
      rotate 4
  }
  $ logrotate -d /etc/logrotate.d/collect.conf
      WARNING: logrotate in debug mode does nothing except printing debug messages!  Consider using verbose mode (-v) instead if this is not what you want.
      reading config file /etc/logrotate.d/collect.conf
      Reading state from file: /var/lib/logrotate/logrotate.status
      Allocating hash table for state file, size 64 entries
      Handling 1 logs
      rotating pattern: /var/log/collect.log
       weekly (4 rotations)
      empty log files are rotated, old logs are removed
      considering log /var/log/collect.log
      Creating new state
        Now: 2022-04-28 10:14
        Last rotated at 2022-04-28 10:00
        log does not need rotating (log has been already rotated)
  $ sudo logrotate -f /etc/logrotate.d/collect.conf
  $ ls -l /var/log/colle*
      -rw-------. 1 root root 112 апр 28 09:44 /var/log/collect.log-20220428
  $ sudo ./BASH-LogScript1.sh
  $ sudo journalctl -e
      ...
      апр 28 10:46:50 i6.rt.ru sudo[6584]:     ur : TTY=pts/1 ; PWD=/home/ur ; ur=root ; COMMAND=./BASH-LogScript1.sh
      ...
  $ sudo tail -n 20 /var/log/messages
      ...
      Logs collected
      ...
  $ logger -p local4.info "Logs Collected"
  $ sudo cat /var/log/collect.log
      cat: /var/log/collect.log: No such file or directory
  $ sudo cat /var/log/collect.log-20220428
      Apr 28 09:41:29 i6 ur[6135]: Logs Collected
      Apr 28 09:44:28 i6 ur[6162]: Logs Collected
      Apr 28 10:38:59 i6 ur[6437]: Logs Collected
      Apr 28 10:49:34 i6 ur[6601]: Logs Collected
  $ sudo tail -n 20 /var/log/messages
      ...
      Apr 28 10:49:34 i6 ur[6601]: Logs Collected
      ...
  Task:
  Создайте скрипт, который будет отправлять логи в syslog – This is normal log → debug, This is error → error и This is critical error → crit. Настройте syslog, чтобы записывал эти логи в соответствующие файлы - /var/log/mylog.debug, /var/log/mylog.crit, /var/log/mylog.error. Настройте ротацию этих логов, чтобы они ротировались 5 раз. debug и error должны ротировались ежедневно, debug с сжатием, а error без сжатия. crit должен ротироваться раз в неделю.
  Decision:
  $ sudo ./BASH-LogScript2.sh
  $ sudo cat /etc/rsyslog.conf
  # rsyslog configuration file
  ...
  # Save boot messages also to boot.log
  local4.*                                                /var/log/collect.log
  local7.*                                                /var/log/boot.log
  # ### sample forwarding rule ###
  ...
  #Target="remote_host" Port="XXX" Protocol="tcp")
  local1.*                                                /var/log/mylog.debug
  local2.*                                                                                          /var/log/mylog.error
  local3.*                                                                                          /var/log/mylog.crit
  $ ls /var/log/mylog.
      mylog.crit-20220428      mylog.debug-20220428.gz  mylog.error-20220428     
  $ sudo cat /var/log/mylog.crit-20220428
      Apr 28 11:46:30 i6 root[6943]: This is critical error -> crit
  $ sudo cat /var/log/mylog.error-20220428
      Apr 28 11:46:30 i6 root[6942]: This is error -> error
  $ cat BASH-LogScript2.sh
  #!/bin/bash
  logger -p local1.debug "This is normal log -> debug"
  echo 'local1.*                                                /var/log/mylog.debug' >> /etc/rsyslog.conf

  logger -p local2.err "This is error -> error"
  echo 'local2.*                                                                                          /var/log/mylog.error' >> /etc/rsyslog.conf

  logger -p local3.crit "This is critical error -> crit"
  echo 'local3.*                                                                                          /var/log/mylog.crit' >> /etc/rsyslog.conf

  sudo systemctl restart rsyslog

  #sudo touch /etc/logrotate.d/mylogdebug.conf
  #sudo touch /etc/logrotate.d/mylogerror.conf
  #sudo touch /etc/logrotate.d/mylogcrit.conf

  echo '/var/log/mylog.debug
  {
      dateext
      daily
      rotate 5
      compress
  }' > /etc/logrotate.d/mylogdebug.conf
  sudo logrotate -f /etc/logrotate.d/mylogdebug.conf

  echo '/var/log/mylog.error
  {
          dateext
          daily
          rotate 5
      delaycompress
  }' > /etc/logrotate.d/mylogerror.conf
  sudo logrotate -f /etc/logrotate.d/mylogerror.conf

  echo '/var/log/mylog.crit
  {
          dateext
          weekly
          rotate 5
  }' > /etc/logrotate.d/mylogcrit.conf
  sudo logrotate -f /etc/logrotate.d/mylogcrit.conf
  $ cat /etc/logrotate.d/mylog
  mylogcrit.conf   mylogdebug.conf  mylogerror.conf  
  $ cat /etc/logrotate.d/mylogdebug.conf
  /var/log/mylog.debug
  {
      dateext
      daily
      rotate 5
      compress
  }
  $ sudo cat /var/log/messages | grep 'This is '
      Apr 28 11:34:58 i6 ur[6745]: This is error -> error
      Apr 28 11:34:58 i6 ur[6746]: This is critical error -> crit
      Apr 28 11:35:31 i6 root[6766]: This is error -> error
      Apr 28 11:35:31 i6 root[6767]: This is critical error -> crit
      Apr 28 11:40:00 i6 root[6828]: This is error -> error
      Apr 28 11:40:00 i6 root[6829]: This is critical error -> crit
      Apr 28 11:42:18 i6 root[6872]: This is error -> error
      Apr 28 11:42:18 i6 root[6873]: This is critical error -> crit
      Apr 28 11:44:04 i6 root[6903]: This is error -> error
      Apr 28 11:44:04 i6 root[6904]: This is critical error -> crit
      Apr 28 11:46:30 i6 root[6942]: This is error -> error
      Apr 28 11:46:30 i6 root[6943]: This is critical error -> crit
  $ sudo journalctl -e | grep 'This is '
      апр 28 11:34:58 i6.rt.ru ur[6744]: This is normal log -> debug
      апр 28 11:34:58 i6.rt.ru ur[6745]: This is error -> error
      апр 28 11:34:58 i6.rt.ru ur[6746]: This is critical error -> crit
      апр 28 11:35:31 i6.rt.ru root[6765]: This is normal log -> debug
      апр 28 11:35:31 i6.rt.ru root[6766]: This is error -> error
      апр 28 11:35:31 i6.rt.ru root[6767]: This is critical error -> crit
      апр 28 11:40:00 i6.rt.ru root[6827]: This is normal log -> debug
      апр 28 11:40:00 i6.rt.ru root[6828]: This is error -> error
      апр 28 11:40:00 i6.rt.ru root[6829]: This is critical error -> crit
      апр 28 11:42:18 i6.rt.ru root[6871]: This is normal log -> debug
      апр 28 11:42:18 i6.rt.ru root[6872]: This is error -> error
      апр 28 11:42:18 i6.rt.ru root[6873]: This is critical error -> crit
      апр 28 11:44:04 i6.rt.ru root[6902]: This is normal log -> debug
      апр 28 11:44:04 i6.rt.ru root[6903]: This is error -> error
      апр 28 11:44:04 i6.rt.ru root[6904]: This is critical error -> crit
      апр 28 11:46:30 i6.rt.ru root[6941]: This is normal log -> debug
      апр 28 11:46:30 i6.rt.ru root[6942]: This is error -> error
      апр 28 11:46:30 i6.rt.ru root[6943]: This is critical error -> crit
  Task:
  Создайте файл /etc/allowedurs, в котором пропишите логин своего пользователя.
  Создайте скрипт, который сначала проверит, имеет ли данный текущий пользователь право запускать скрипт (пользователь должен быть в списке /etc/allowedurs). Если прав нету, то следует вывести на экран сообщение «This incident will be reported», а в syslog в секцию error написать «ur urname tried to run this script!». После запуска скрипт должен вывести содержимое директории /data/. После чего предложить пользователю указать имя файла и указать дату и время модификации для смены.
  Decision:
  $ sudo vim /etc/allowedurs
  [sudo] пароль для ur:
  $ cat /etc/allowedurs
  root
  it
  $ vim BASH-LogScript3.sh
  $ cat BASH-LogScript3.sh
  #!/bin/bash
  name1=$(whoami)
  #echo $name1
  cmd1=$(cat /etc/allowedurs | grep $name1)
  #echo $cmd1
  #for line1 in $(cat /etc/allowedurs)
  #do
  #    echo 'line1' $line1
      #if [[ $name1 == $line1 ]];
      #then
      #    echo '+'
      #else
      #    echo '-'
      #fi    
  #done
  if cat /etc/allowedurs | grep $name1
  then
      echo '+'
  else
      echo 'This incident will be reported'
      logger -p local2.err "ur $name1 tried to run this script!"
  fi
  ls /data
  read -p "specify the file name: " rename
  read -p "specify the modification date and time for the shift: " date
  $ whoami
      ur
  $ ./BASH-LogScript3.sh
      This incident will be reported
      testfile1  testfile2  testfile3  testfile4  testfile5
      specify the file name: ur2
      specify the modification date and time for the shift: 2019.10.12 19:15   
  $ sudo journalctl -e | grep 'tried to run this '
      апр 28 16:23:20 i6.rt.ru ur[8491]: ur urname tried to run this script!
      апр 28 16:24:51 i6.rt.ru ur[8513]: ur ur tried to run this script!
      апр 28 16:26:52 i6.rt.ru ur[8534]: ur ur tried to run this script!
      апр 28 16:30:09 i6.rt.ru ur[8556]: ur ur tried to run this script!
      апр 28 16:33:16 i6.rt.ru ur[8567]: ur ur tried to run this script!
      апр 28 16:34:36 i6.rt.ru ur[8591]: ur ur tried to run this script!
  Task:
  Как в Bash проверить, содержит ли строка подстроку
  Decision:
  $ vim testbash.sh
  $ cat testbash.sh
  #!/bin/bash
  ##############
  #RESULT=$(echo 'hello')
  #echo $RESULT
  ##############
  #echo -n "Enter a number: "
  #read VAR
  #if [[ $VAR -gt 10 ]]
  #then
  # echo "The variable is greater than 10."
  #fi
  ##############
  string='Моя длинная строка'
  if [[ $string == *"Моя длинная"* ]]; then
  echo "Подстрока найдена!"
  fi
  $ ./testbash.sh
  Подстрока найдена!
  Source:
  1. https://zalinux.ru/?p=3870
  Task:
  Сохранить результат команды в переменную
  Decision:
  $ vim testbash.sh
  $ cat testbash.sh
  RESULT=$(echo 'hello')
  echo $RESULT
  $ ./testbash.sh
  hello
  Source:
  1. https://ru.stackoverflow.com/questions/326774/%D0%A1%D0%BE%D1%85%D1%80%D0%B0%D0%BD%D0%B8%D1%82%D1%8C-%D1%80%D0%B5%D0%B7%D1%83%D0%BB%D1%8C%D1%82%D0%B0%D1%82-%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D1%8B-%D0%B2-%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%BD%D1%83%D1%8E?ysclid=l7mv4wpacm631163365
  Task:
  дан файл log.txt
  80.149.9.216 - 10:30:20 - 300 - htttp://www.google.com
  70.149.9.216 - 10:30:21 - 300 - htttp://www.google.com
  83.149.9.216 - 10:30:22 - 325 - htttp://www.google.com
  напиши скрипт который выведет статистику:
  ip addgres: sum(KB)
  ip addgres: sum(KB)
  Source:
  1. https://www.youtube.com/playlist?list=PLg5SS_4L6LYuu1RAT4l1tCkZrJzkIaNgL
  Task:
  Напишите результат выполнения команды:
  $ echo 01.05.1889 | sed 's|\(..\).\(..\).\(....\)|\2/\1/\3|'
  Decision:
  05/01/1889
  Task:
  Напишите результат выполнения команды:
  $ echo послезавтра | sed 's/после/&&/'
  Decision:
  послепослезавтра
  Task:
  Напишите результат выполнения команды:
  $ echo Заморский | sed 's/За/При/'
  Decision:
  Приморский
  Task:
  Сделайте скрипт, который будет спрашивать имя пользователя и выводить оболочку этого пользователя.
  Decision:
  #!/bin/bash
  read -p "Print urname: " user
  cat /etc/passwd | grep "/home/$user:" >> testfile2
  cut -d ':' -f 7 testfile2
  Task:
  Нужно полностью удалить неиспользуемые версии пакетов
  Decision:
  #!/bin/bash
  set -eu
  LANG=en_US.UTF-8 snap list --all | awk '/disabled/{print $1, $3}' |
  while read snapname revision; do
    snap remove "$snapname" --revision="$revision"
  done
  Task:
  Сделайте скрипт, который спросит имя пользователя и скажет, является ли пользователь администратором?
  Decision:
  #!/bin/bash
  read -p "Print urname: " user1
  user2=$(cat /etc/group | grep wheel | cut -d ':' -f 4)
  if [ "$user1" = "$user2" ]
  then
    echo "He is Admin"
  else
    echo "He is not Admin"
  fi
  Task:
  Сделайте скрипт, который будет спрашивать название и создавать файл, затем спрашивать права для этого файла и задавать их.
  Decision:
  #!/bin/bash
  read -p "Print name: " name
  touch $name
  read -p "What rights are needed? " rights
  chmod $rights $name
  Task:
  Напишите скрипт на bash, который будет определять в какую возрастную группу попадают пользователи. При запуске скрипт должен вывести сообщение "enter your name:" и ждать от пользователя ввода имени (используйте read, чтобы прочитать его). Когда имя введено, то скрипт должен написать "enter your age:" и ждать ввода возраста (опять нужен read). Когда возраст введен, скрипт пишет на экран "<Имя>, your group is <группа>", где <группа> определяется на основе возраста по следующим правилам:
      младше либо равно 16: "child",
      от 17 до 25 (включительно): "youth",
      старше 25: "adult".
  После этого скрипт опять выводит сообщение "enter your name:" и всё начинается по новой. Если в какой-то момент работы скрипта будет введено пустое имя или возраст 0, то скрипт должен написать на экран "bye" и закончить свою работу.
  Decision:
  #!/bin/bash
  while [[ True ]]
  do
      echo "enter your name:"
      read name
      if [[ $name == "" ]]
      then
          echo "bye"
          break
      fi
      echo "enter your age:"
      read age
      if [[ $age == 0 ]]
      then    
          echo "bye"
          break
      elif [[ $age -le 16 ]]
      then
          echo "$name, your group is child"
      elif [[ $age -ge 17 && $age -le 25 ]]
      then
          echo "$name, your group is youth"
      else
          echo "$name, your group is adult"
      fi
  done
  Task:
  у пользователя root создайте cron, чтобы он каждую пятницу в 23:30 записывал содержимое директории /data и содержимое архива /backup/archive.tar в файл /var/log/reports/текущаядата.
  Decision:
  #!/bin/bash
  mkdir /var/log/reports
  ls -l /data > /var/log/reports/$(date +"%d.%m.%Y")
  tar -tf /backup/archive.tar >> /var/log/reports/$(date +"%d.%m.%Y")
  Task:
  Создайте пользователя backup и настройте для него cron, чтобы тот раз в день находил файлы старее 5 дней в директории /data и добавлял эти файлы в архив /backup/archive.tar, после чего удалял из исходной директории.
  Decision:
  #!/bin/bash
  if find /data/ -type f -mtime +5; then
    cd /data
    tar -cvf /backup/archive.tar testfile*
    rm -rf /data/testfile*
  else
          echo "No files"
  fi
  Task:
  Разрешите пользователю helpdesk1 запускать команду Sh-Interview-NewBackup от имени пользователя backup. Команда Sh-Interview-NewBackup должна создавать сжатый архив директории /data и сохранять его в домашней директории пользователя backup с датой в названии.
  Decision:
  $ sudo useradd backup1
  $ sudo passwd backup1
      Изменение пароля пользователя backup1.
      Новый пароль:
      НЕУДАЧНЫЙ ПАРОЛЬ: Пароль должен содержать не менее 8 символов
      Повторите ввод нового пароля:
      passwd: данные аутентификации успешно обновлены.
  $ sudo mkdir /data
  $ sudo touch /data/testfile{1..5}
  $ ls -l /data/
      итого 0
      -rw-r--r--. 1 root root 0 апр 14 13:14 testfile1
      -rw-r--r--. 1 root root 0 апр 14 13:14 testfile2
      -rw-r--r--. 1 root root 0 апр 14 13:14 testfile3
      -rw-r--r--. 1 root root 0 апр 14 13:14 testfile4
      -rw-r--r--. 1 root root 0 апр 14 13:14 testfile5
  $ vim bash-script10
  $ cat bash-script10
  #/bin/bash
  #Разрешите пользователю helpdesk1 запускать команду Bash-GnuLinux-NewBackup от имени пользователя backup. Команда Sh-Interview-NewBackup должна создавать сжатый архив директории /data и сохранять его в домашней директории пользователя backup с датой в названии.
  #dt=$(date)
  #echo "$dt"
  #echo "$(date)"
  #for line in $(date)
  #do
  #    echo "$line"
  #done
  #touch testfile5$(date +%y%m%d)
  sudo tar -cjvf /home/backup1/testArchive$(date +%d%m%y).tar.gz /data/
  $ bash /home/ur/bash-script10
      tar: Удаляется начальный `/' из имен объектов
      /data/
      /data/testfile5
      /data/testfile1
      /data/testfile3
      /data/testfile2
      /data/testfile4
  $ sudo r-t -rf /home/backup1/testArchive150422.tar.gz
  $ mv bash-script10 Bash-GnuLinux-NewBackup
  $ sudo cp Bash-GnuLinux-NewBackup /usr/bin/
  $ sudo cat /etc/sudoers
      ...
      ## Allow root to run any commands anywhere
      root    ALL=(ALL)     ALL
      sysadmin        ALL=(ALL)       ALL
      netadmin        ALL=(root)      /usr/bin/nmtui
      #helpdesk1       ALL=(ALL)   /usr/bin/passwd, !/usr/bin/passwd sysadmin, !/usr/bin/passwd root
      ...
  $ sudo visudo
  $ sudo cat /etc/sudoers
      ...
      ## Allow root to run any commands anywhere
      root    ALL=(ALL)     ALL
      sysadmin        ALL=(ALL)       ALL
      netadmin        ALL=(root)      /usr/bin/nmtui
      #helpdesk1       ALL=(ALL)   /usr/bin/passwd, !/usr/bin/passwd sysadmin, !/usr/bin/passwd root
      backup1     ALL=(ALL)    ALL
      helpdesk1     ALL=(backup1)    /usr/bin/Bash-GnuLinux-NewBackup
      ...
  $ su - helpdesk1
  $ su - backup1 -c "sudo Bash-GnuLinux-NewBackup"
      sudo: a ter-tinal is required to read the password; either use the -S option to read from standard input or configure an askpass helper
  $ su - helpdesk1
      Последний вход в систему: Пт апр 15 14:24:48 +08 2022 на pts/0
  $ su - backup1 Bash-GnuLinux-NewBackup
      Последний вход в систему: Пт апр 15 14:27:43 +08 2022 на pts/0
      tar: Удаляется начальный `/' из имен объектов
      /data/
      /data/testfile5
      /data/testfile1
      /data/testfile3
      /data/testfile2
      /data/testfile4
  $ exit
      выход
  $ sudo ls -l /home/backup1/
      итого 4
      -rw-r--r--. 1 root    root    183 апр 15 14:28 testArchive150422.tar.gz
  Task:
  Cконструируем сценарий, вычисляющий сумму ежемесячных платежей по кредиту. Для передачи сценария программе bc в следующем примере используется встроенный документ. loan-calc : сценарий вычисления суммы ежемесячных платежей по кредиту
  Decision:
  #!/bin/bash
  PROGNAME=$(basename $0)
  usage () {
      cat <<- EOF
      Usage: $PROGNAME PRINCIPAL INTEREST MONTHS
      Where:
      PRINCIPAL is the amount of the loan.
      INTEREST is the APR as a number (7% = 0.07).
      MONTHS is the length of the loan's term.
      EOF
  }
  if (($# != 3)); then
      usage
      exit 1
  fi
  principal=$1
  interest=$2
  months=$3
  bc <<- EOF
      scale = 10
      i = $interest / 12
      p = $principal
      n = $months
      a = p * ((i * ((1 + i) ^ n)) / (((1 + i) ^ n) - 1))
      print a, "\n"
      EOF
  Task:
  Определить файл или директория ваши данные
  Decision:
  #!/bin/bash
  dir=/home/ik/* # your data
  for file in $dir
  do
  if [ -d "$file" ]
  then
  echo "$file - директория"
  elif [ -f "$file" ]
  then
  echo "$file - файл"
  else
  echo "Неизвестный файл"
  fi
  done
  Task:
  Бэкап архив всех файлов
  Decision:
  #!/bin/bash
  BACKUPFILE=backup
  archive=${1:-$BACKUPFILE}
  find . -mtime -1 -type f -print0 | xargs -0 tar rvf "$archive.tar"
  echo "Каталог $PWD заархивирован в файл \"$archive.tar\"."
  exit 0
  Task:
  Напишите сценарий, который выводит дату, время, список зарегистрировавшихся пользователей, и uptime системы и сохраняет эту информацию в системном журнале.
  Decision:
  $ vim Bash-GnuLinux-AboutUserLogFile.sh
  $ cat Bash-GnuLinux-AboutUserLogFile.sh
  #!/bin/bash
  echo "выводит число секунд прошедших с начала эпохи unix:"
  date '+%s'
  echo "выводит локальное время:"
  date '+%F %T'
  echo "список зарегистрировавшихся обычных пользователей, которые создаются с UID от UID_MIN до UID_MAX которые определены в файле /etc/login.defs:"
  awk '/^UID/{print $1"="$2}' /etc/login.defs
  echo "из файла /etc/passwd выбрать только тех пользователей у которых UID (третий столбик :) из этого диапазона:"
  eval $(awk '/^UID/{print $1"="$2}' /etc/login.defs)
  awk -v min=$UID_MIN -v max=$UID_MAX -F: '$3>=min && $3<=max {print $1}' /etc/passwd
  echo "uptime системы:"
  uptime -p
  $ ./Bash-GnuLinux-AboutUserLogFile.sh
      выводит число секунд прошедших с начала эпохи unix:
      1633836259
      выводит локальное время:
      2021-10-09 22:24:19
      список зарегистрировавшихся обычных пользователей, которые создаются с UID от UID_MIN до UID_MAX которые определены в файле /etc/login.defs:
      UID_MIN=1000
      UID_MAX=60000
      из файла /etc/passwd выбрать только тех пользователей у которых UID (третий столбик :) из этого диапазона:
      ubuntu
      uptime системы:
      up 21 minutes
  $ cat Bash-GnuLinux-AboutUserLogFile.sh
  #!/bin/bash
  echo -e "Дата и Время:;$(date '+%F %T')\nПользователи:;$(eval $(awk '/^UID/{print $1"="$2}' /etc/login.defs) && awk -v min=$UID_MIN -v max=$UID_MAX -F: '$3>=min && $3<=max {print $1}' /etc/passwd)\nВремя работы (начало):;$(uptime -s)\nВремя работы (прошло):;$(uptime -p)" | column -t -s ";" | systemd-cat --identifier="задача3"
  $ ./Bash-GnuLinux-AboutUserLogFile.sh
  $ journalctl SYSLOG_IDENTIFIER="задача3"
      -- Logs begin at Fri 2021-05-21 06:21:13 CDT, end at Sat 2021-10-09 22:33:30 CDT. --
      Oct 09 22:25:25 ubuntu-VirtualBox задача3[2796]: Дата и Время:           2021-10-09 22:25:25
      Oct 09 22:25:25 ubuntu-VirtualBox задача3[2796]: Пользователи:           ubuntu
      Oct 09 22:25:25 ubuntu-VirtualBox задача3[2796]: Время работы (начало):  2021-10-09 22:02:57
      Oct 09 22:25:25 ubuntu-VirtualBox задача3[2796]: Время работы (прошло):  up 22 minutes
      Oct 09 22:26:23 ubuntu-VirtualBox задача3[2826]: Дата и Время:           2021-10-09 22:26:23
      Oct 09 22:26:23 ubuntu-VirtualBox задача3[2826]: Пользователи:           ubuntu
      Oct 09 22:26:23 ubuntu-VirtualBox задача3[2826]: Время работы (начало):  2021-10-09 22:02:57
      Oct 09 22:26:23 ubuntu-VirtualBox задача3[2826]: Время работы (прошло):  up 23 minutes
      Oct 09 22:29:41 ubuntu-VirtualBox задача3[2846]: Дата и Время:           2021-10-09 22:29:41
      Oct 09 22:29:41 ubuntu-VirtualBox задача3[2846]: Пользователи:           ubuntu
      Oct 09 22:29:41 ubuntu-VirtualBox задача3[2846]: Время работы (начало):  2021-10-09 22:02:57
      Oct 09 22:29:41 ubuntu-VirtualBox задача3[2846]: Время работы (прошло):  up 26 minutes
      Oct 09 22:31:48 ubuntu-VirtualBox задача3[2868]: Дата и Время:           2021-10-09 22:31:48
      Oct 09 22:31:48 ubuntu-VirtualBox задача3[2868]: Пользователи:           ubuntu
      Oct 09 22:31:48 ubuntu-VirtualBox задача3[2868]: Время работы (начало):  2021-10-09 22:02:57
      Oct 09 22:31:48 ubuntu-VirtualBox задача3[2868]: Время работы (прошло):  up 28 minutes
      Oct 09 22:33:30 ubuntu-VirtualBox задача3[2885]: Дата и Время:           2021-10-09 22:33:30
      Oct 09 22:33:30 ubuntu-VirtualBox задача3[2885]: Пользователи:           ubuntu
      Oct 09 22:33:30 ubuntu-VirtualBox задача3[2885]: Время работы (начало):  2021-10-09 22:02:57
      Oct 09 22:33:30 ubuntu-VirtualBox задача3[2885]: Время работы (прошло):  up 30 minutes
  Task:
  Создайте функции просмотра информации о пользователе(1), создания пользователя(2), удаления пользователя (3). Используйте case и select для использования этих функций в виде меню.
  Decision:
  $ cat Bash-GnuLinux-AboutUser1.sh
  #/bin/bash
  aboutuser() {
      read -p "About user: " line
      cat /etc/passwd | grep -w $line
  }
  adduser(){
      read -p "Add user: " name
          #cut -d':' -f1 /etc/passwd | grep -w $name
  }
  deleteuser(){
          read -p "Delete user: " name
          #cut -d':' -f1 /etc/passwd | grep -w $name
  }
  user() {
      select option in "About user" "Add user" "Delete user" "Exit"
      do
          case $option in
              "About user") aboutuser ;;
              "Add user") adduser ;;
              "Delete user") deleteuser ;;
              "Exit") break ;;
              *) echo Wrong option ;;
          esac
      done
  }
  user
  $ ./Bash-GnuLinux-AboutUser1.sh
  1) About user
  2) Add user
  3) Delete user
  4) Exit
  #? 1
  About user: d
  d:x:1000:1000:,,,:/home/d:/bin/bash
  #? 4
  Task:
  Создайте скрипт, который запрашивает имя пользователя, а в ответ выводит информацию о пользователе – его uid, домашнюю директорию, список групп, в которых он состоит.
  После этого скрипт должен спросить, что следует поменять – uid, домашнюю директорию или группу.
  Если uid, то сначала проверить, доступен ли такой uid, если нет – то один раз предложить ввести заново.
  Если домашнюю директорию, то спросить, на какую директорию следует сменить, а также следует ли перемещать домашнюю директорию.
  После чего следует вывести на экран итоговую команду.
  Decision:
  $ cat Bash-GnuLinux-AboutUser.sh
  #/bin/bash
  read -p "Print username: " user
  #idd=$(id -u $user)
  id1=$(cat /etc/passwd | grep $user | cut -d ':' -f 4)
  home1=$(cat /etc/passwd | grep $user | cut -d ':' -f 6)
  group1=$(cat /etc/group | grep $user | cut -d ':' -f 1)
  echo "uid = $id1"
  echo "home = $home1"
  echo "group = $group1"
  read -p "What should be changed? (uid/home/group): " change
  #echo "$change"
  if [ $change == "uid" ]
  then
      read -p "Write youser own version: " id2
      if cut -d':' -f3 /etc/passwd | grep -w $id2
      then
          echo "there is such a user"
      else
          #echo "there is no such user"
          read -p "Re-Enter. Write youser own version: " id2
          if cut -d':' -f3 /etc/passwd | grep -w $id2
              then
                      echo "there is such a user"
          fi
      fi
  elif [ $change == "home" ]
  then
      read -p "Write youser own version: " home2
      if cut -d':' -f6 /etc/passwd | grep -w $home2
          then
          echo "Such a directory already exists"
      else
          echo "This is a unique home directory"
      fi
  elif [ $change == "group" ]
  then
      read -p "Write youser own version: " group2
      if cut -d':' -f1 /etc/group | grep -w $group2
      then
          echo "+"
      else
          echo "-"
      fi
  else
      echo "command not found"
  fi
  $ ./Bash-GnuLinux-AboutUser.sh
  Print username: david
  uid = 1000
  home = /home/david
  group = dialout
  cdrom
  floppy
  sudo
  audio
  dip
  video
  plugdev
  netdev
  What should be changed? (uid/home/group): uid
  Write youser own version: 45435
  Re-Enter. Write youser own version: 34534
  Task:
  async-child : пример асинхронного выполнения (потомок)
  Decision:
  #!/bin/bash
  echo "Child: child is running..."
  sleep 5
  echo "Child: child is done. Exiting."
  Task:
  пример асинхронного выполнения (родитель)
  Decision:
  #!/bin/bash
  # async-parent : 
  echo "Parent: starting..."
  echo "Parent: launching child script..."
  async-child &
  pid=$!
  echo "Parent: child (PID= $pid) launched."
  echo "Parent: continuing..."
  sleep 2
  echo "Parent: pausing to wait for child to finish..."
  wait $pid
  echo "Parent: child is finished. Continuing..."
  echo "Parent: parent is done. Exiting."
  Task:
  программа вывода системной информации, управляемая с помощью меню
  Decision:
  #!/bin/bash
  # case-menu: 
  clear
  echo "
  Please Select:
  1. Display System Information
  2. Display Disk Space
  3. Display Home Space Utilization
  0. Quit
  "
  read -p "Enter selection [0-3] > "
  case $REPLY in
      q|Q)    echo "Program terminated."
              exit
              ;;
      a|A)    echo "Hostname: $HOSTNAME"
              uptime
              ;;
      b|B)    df -h
              ;;
      c|C)    if [[ $(id -u) -eq 0 ]]; then
                  echo "Home Space Utilization (All Users)"
                  du -sh /home/*
              else
                  echo "Home Space Utilization ($USER)"
                  du -sh $HOME
              fi
              ;;
      *)      echo "Invalid entry." >&2
              exit 1
              ;;
  esac
  Task:
  простая программа получения информации о файле
  Decision:
  #!/bin/bash
  # file_info: 
  PROGNAME=$(basename $0)
  if [[ -e $1 ]]; then
      echo -e "\nFile Type:"
      file $1
      echo -e "\nFile Status:"
      stat $1
  else
      echo "$PROGNAME: usage: $PROGNAME file" >&2
      exit 1
  fi
  Task:
  сценарий для подсчета файлов по времени изменения
  Decision:
  #/bin/bash
  # hours : 
  usage () {
      echo "usage: $(basename $0) directory" >&2
  }
  # Убедиться, что аргумент является каталогом
  if [[ ! -d $1 ]]; then
      usage
      exit 1
  fi
  # Инициализировать массив
  for i in {0..23}; do hours[i]=0; done
  # Собрать данные
  for i in $(stat -c %y "$1"/* | cut -c 12-13); do
      j=${i/#0}
      ((++hours[j]))
      ((++count))
  done
  # Вывести данные
  echo -e "Hour\tFiles\tHour\tFiles"
  echo -e "----\t-----\t----\t-----"
  for i in {0..11}; do
      j=$((i + 12))
      printf "%02d\t%d\t%02d\t%d\n" $i ${hours[i]} $j ${hours[j]}
  done
  printf "\nTotal files = %d\n" $count
  Task:
  сценарий для просмотра параметров командной строки
  Decision:
  #!/bin/bash
  # posit-param: 
  echo "
  Number of arguments: $#
  \$0 = $0
  \$1 = $1
  \$2 = $2
  \$3 = $3
  \$4 = $4
  \$5 = $5
  \$6 = $6
  \$7 = $7
  \$8 = $8
  \$9 = $9
  "
  Task:
  демонстрация подстановки процессов
  Decision:
  #/bin/bash
  # pro-sub : 
  while read attr links owner group size date time filename; do
      cat <<- EOF
          Filename:   $filename
          Size:       $size
          Owner:      $owner
          Group:      $group
          Modified:   $date $time
          Links:      $links
          Attributes: $attr
      EOF
  done < <(ls -l | tail -n +2)
  Task:
  чтение полей из файла
  Decision:
  #!/bin/bash
  # read-ifs: 
  FILE=/etc/passwd
  read -p "Enter a username > " user_name
  file_info=$(grep "^$user_name:" $FILE)
  if [ -n "$file_info" ]; then
      IFS=":" read user pw uid gid name home shell <<< "$file_info"
      echo "User = '$user'"
      echo "UID = '$uid'"
      echo "GID = '$gid'"
      echo "Full Name = '$name'"
      echo "Home Dir. = '$home'"
      echo "Shell = '$shell'"
  else
      echo "No such user '$user_name'" >&2
      exit 1
  fi
  Task:
  программа вывода системной информации, управляемая с помощью меню
  Decision:
  #!/bin/bash
  # read-menu: 
  clear
  echo "
  Please Select:
  1. Display System Information
  2. Display Disk Space
  3. Display Home Space Utilization
  0. Quit
  "
  read -p "Enter selection [0-3] > "
  if [[ $REPLY =~ ^[0-3]$ ]]; then
      if [[ $REPLY == 0 ]]; then
          echo "Program terminated."
          exit
      fi
      if [[ $REPLY == 1 ]]; then
          echo "Hostname: $HOSTNAME"
          uptime
          exit
      fi
      if [[ $REPLY == 2 ]]; then
          df -h
          exit
      fi
      if [[ $REPLY == 3 ]]; then
          if [[ $(id -u) -eq 0 ]]; then
              echo "Home Space Utilization (All Users)"
              du -sh /home/*
          else
              echo "Home Space Utilization ($USER)"
              du -sh $HOME
          fi
          exit
      fi
  else
      echo "Invalid entry." >&2
      exit 1 fi
  Task:
  ввод секретного пароля
  Decision:
  #!/bin/bash
  # read-secret: 
  if read -t 10 -sp "Enter secret passphrase > " secret_pass; then
      echo -e "\nSecret passphrase = '$secret_pass'"
  else
      echo -e "\nInput timed out" >&2
      exit 1
  fi
  Task:
  проверка ввода
  Decision:
  #!/bin/bash
  # read-validate: 
  invalid_input () {
      echo "Invalid input '$REPLY'" >&2
      exit 1
  }
  read -p "Enter a single item > "
  # пустой ввод (недопустимо)
  [[ -z $REPLY ]] && invalid_input
  # ввод множества элементов (недопустимо)
  (( $(echo $REPLY | wc -w) > 1 )) && invalid_input
  # введено допустимое имя файла?
  if [[ $REPLY =~ ^[-[:alnum:]\._]+$ ]]; then
      echo "'$REPLY' is a valid filename."
      if [[ -e $REPLY ]]; then
          echo "And file '$REPLY' exists."
      else
          echo "However, file '$REPLY' does not exist."
      fi
      # введено вещественное число?
      if [[ $REPLY =~ ^-?[[:digit:]]*\.[[:digit:]]+$ ]]; then
          echo "'$REPLY' is a floating point number."
      else
          echo "'$REPLY' is not a floating point number."
      fi
      # введено целое число?
      if [[ $REPLY =~ ^-?[[:digit:]]+$ ]]; then
          echo "'$REPLY' is an integer."
      else
          echo "'$REPLY' is not an integer."
      fi
  else
      echo "The string '$REPLY' is not a valid filename."
  fi
  Task:
  Программа вывода страницы с информацией о системе
  Decision:
  #/bin/bash
  PROGNAME=$(basename $0)
  TITLE="System Information Report For $HOSTNAME"
  CURRENT_TIME=$(date +"%x %r %Z")
  TIME_STAMP="Generated $CURRENT_TIME, by $USER"
  report_uptime () {
      cat <<- _EOF_
          <H2>System Uptime</H2>
          <PRE>$(uptime)</PRE>
          _EOF_
      return
  }
  report_disk_space () {
      cat <<- _EOF_
          <H2>Disk Space Utilization</H2>
          <PRE>$(df -h)</PRE>
          _EOF_
      return
  }
  report_home_space () {
      local format="%8s%10s%10s\n"
      local i dir_list total_files total_dirs total_size user_name
      if [[ $(id -u) -eq 0 ]]; then
          dir_list=/home/*
          user_name="All Users"
      else
          dir_list=$HOME
          user_name=$USER
      fi
      echo "<H2>Home Space Utilization ($user_name)</H2>"
      for i in $dir_list; do   
          total_files=$(find $i -type f | wc -l)
          total_dirs=$(find $i -type d | wc -l)
          total_size=$(du -sh $i | cut -f 1)
          echo "<H3>$i</H3>"
          echo "<PRE>"
          printf "$format" "Dirs" "Files" "Size"
          printf "$format" "----" "-----" "----"
          printf "$format" $total_dirs $total_files $total_size
          echo "</PRE>"
      done
      return
  }
  usage () {
      echo "$PROGNAME: usage: $PROGNAME [-f file | -i]"
      return
  }
  write_html_page () {
      cat <<- _EOF_
      <HTML>
          <HEAD>
              <TITLE>$TITLE</TITLE>
          </HEAD>
          <BODY>
              <H1>$TITLE</H1>
              <P>$TIME_STAMP</P>
              $(report_uptime)
              $(report_disk_space)
              $(report_home_space)    
          </BODY>
      </HTML>
      _EOF_
      return
  }
  # обработка параметров командной строки
  interactive=
  filename=
  while [[ -n $1 ]]; do
      case $1 in
      -f | --file)        shift
                  filename=$1
                  ;;
      -i | --interactive) interactive=1
                  ;;
      -h | --help)        usage
                  exit
                  ;;
      *)          usage >&2
                  exit 1
                  ;;
      esac
      shift
  done
  # интерактивный режим
  if [[ -n $interactive ]]; then
      while true; do
      read -p "Enter name of output file: " filename
          if [[ -e $filename ]]; then
              read -p "'$filename' exists. Overwrite? [y/n/q] > "
              case $REPLY in
                  Y|y)    break
                      ;;
                  Q|q)    echo "Program terminated."
                      exit
                      ;;
                  *)  continue
                      ;;
              esac
          fi
      done
  fi
  # вывод страницы html
  if [[ -n $filename ]]; then
      if touch $filename && [[ -f $filename ]]; then
          write_html_page > $filename
      else
          echo "$PROGNAME: Cannot write file '$filename'" >&2
          exit 1
      fi
  else
      write_html_page
  fi
  Task:
  сценарий для демонстрации распространенных видов ошибок
  Decision:
  #!/bin/bash
  # trouble: 
  number=1
  echo "number=$number" # ОТЛАДКА
  set -x # Включить трассировку
  if [ $number = 1 ]; then
  echo "Number is equal to 1."
  else
  echo "Number is not equal to 1."
  fi
  set +x # Выключить трассировку
  Task:
  программа вывода системной информации, управляемая с помощью меню
  Decision:
  #!/bin/bash
  # while-menu: 
  DELAY=3 # Время отображения результатов на экране (в секундах)
  while [[ $REPLY != 0 ]]; do
  clear
  cat <<- _EOF_
  Please Select:
  1. Display System Information
  2. Display Disk Space
  3. Display Home Space Utilization
  4. Quit
  _EOF_
  read -p "Enter selection [0-3] > "
  if [[ $REPLY =~ ^[0-3]$ ]]; then
  if [[ $REPLY == 1 ]]; then
  echo "Hostname: $HOSTNAME"
  uptime
  sleep $DELAY
  fi
  if [[ $REPLY == 2 ]]; then
  df -h
  sleep $DELAY
  fi
  if [[ $REPLY == 3 ]]; then
  if [[ $(id -u) -eq 0 ]]; then
  echo "Home Space Utilization (All Users)"
  du -sh /home/*
  else
  echo "Home Space Utilization ($USER)"
  du -sh $HOME
  fi
  sleep $DELAY
  fi
  else
  echo "Invalid entry."
  sleep $DELAY
  fi
  done
  echo "Program terminated."
  Task:
  программа вывода системной информации, управляемая с помощью меню
  Decision:
  #!/bin/bash
  # while-menu2: 
  DELAY=3 # Время отображения результатов на экране (в секундах)
  while true; do
  clear
  cat <<- _EOF_
  Please Select:
  1. Display System Information
  2. Display Disk Space
  3. Display Home Space Utilization
  4. Quit
  _EOF_
  read -p "Enter selection [0-3] > "
  if [[ $REPLY =~ ^[0-3]$ ]]; then
  if [[ $REPLY == 1 ]]; then
  echo "Hostname: $HOSTNAME"
  uptime
  sleep $DELAY
  continue
  fi
  if [[ $REPLY == 2 ]]; then
  df -h
  sleep $DELAY
  continue
  fi
  if [[ $REPLY == 3 ]]; then
  if [[ $(id -u) -eq 0 ]]; then
  echo "Home Space Utilization (All Users)"
  du -sh /home/*
  else
  echo "Home Space Utilization ($USER)"
  du -sh $HOME
  fi
  sleep $DELAY
  continue
  fi
  if [[ $REPLY == 0 ]]; then
  break
  fi
  else
  echo "Invalid entry."
  sleep $DELAY
  fi
  done
  echo "Program terminated."
  Task:
  чтение строк из файла
  Decision:
  #!/bin/bash
  # while-read: 
  while read distro version release; do
  printf "Distro: %s\tVersion: %s\tReleased: %s\n" \
  $distro \
  $version \
  $release
  done < distros.txt
  Task:
  чтение строк из файла
  Decision:
  #!/bin/bash
  # while-read2: 
  sort -k 1,1 -k 2n distros.txt | while read distro version release; do
  printf "Distro: %s\tVersion: %s\tReleased: %s\n" \
  $distro \
  $version \
  $release
  done
  Task:
  Напишите bash-скрипт, сохраняющий подробное описание объектов, расположенных в каталоге /home/de13ma, но не принадлежащих пользователю de13ma (владелец не de13ma) в файл description.txt. В задаче есть допущение что имя файла или группы не может содержать слово de13ma.
  Decision:
  $ cat Linux-Description4.sh
  #!/bin/bash
  ls -l /home/de13ma | grep -v "de13ma" > /home/de13ma/gabn/description.txt
  Task:
  Напишите bash-скрипт, сохраняющий все запущенные процессы пользователя de13ma в файл processes.txt. В задаче есть допущение что имя процесса не может содержать слово de13ma.
  Decision:
  $ cat Linux-Processes4.sh
  #!/bin/bash
  ps -fu de13ma > processes.txt
  Task:
  Записать строку в конец файла linux 
  Decision:
  $ cat testfile
  Hey
  $ cat testscript.sh
  #!/bin/bash
  echo USERSPASSWORD | sudo -S sudo sh -c "echo 'bro' >> /home/dato/testdir/testfile"
  $ ./testscript.sh
  $ ./testscript.sh
  $ cat testfile
  Hey
  bro
  bro
  Source:
  https://jeka.by/ask/165/bash-add-string-in-file/
  Task:
  Напишите скрипт на bash, который принимает на вход два аргумента и выводит на экран строку следующего вида:
  Arguments are: $1=первый_аргумент $2=второй_аргумент
  Decision:
  $ cat Linux-StandartStreams.sh
  #/bin/bash
  var1=$1
  var2=$2
  echo "Arguments are:" \$1=$var1 \$2=$var2
  Task:
  Напишите скрипт на bash, который принимает на вход один аргумент (целое число от 0 до бесконечности), который будет обозначать число студентов в аудитории. В зависимости от значения числа нужно вывести разные сообщения.
  Соответствие входа и выхода должно быть таким:
      0 -->  No students
      1 -->  1 student
      2 -->  2 students
      3 -->  3 students
      4 -->  4 students
      5 и больше --> A lot of students
  Decision:
  $ cat Linux-StandartStreams2.sh
  #!/bin/bash
  number=student
  case $1 in
  0) result="No ${number}s";;
  1) result="$1 ${number}";;
  [2-4]) result="$1 ${number}s";;
  *) result="A lot of ${number}s";;
  esac
  echo "$result"
  Task:
  Предположим, вы пишете скрипт на bash и хотите использовать в нем конструкцию if в следующем фрагменте:
      if [[ ... ]]
      then
        echo "True"
      fi
  Вы можете вписать вместо "..." (внутри [[ ]] и не забудьте про пробелы после [[ и перед ]]!) любое из перечисленных ниже условий.
  1) $# -ge 0
  2) $var1 == $var2 && $var1 != $var2
  3) -e $0
  4) -z " "
  5) -s $0
  6) $var1 == $var2 || $var1 != $var2
  Однако мы просим вас выбрать только те из них, при которых echo напечатает на экран True вне зависимости от того, с какими параметрами был запущен ваш скрипт и какие в нем есть переменные.
  #Например, условие 0 -eq 0 подходит, т.к. ноль всегда равен нулю вне зависимости от аргументов и переменных внутри скрипта и на экран будет напечатано True.  В то же время условие $var1 -eq 0 не подходит, так как в переменной var1 как может быть записан ноль (тогда будет напечатано True), так его может и не быть (тогда ничего напечатано не будет).
  Decision:
  $ cat Linux-StandartStreams1.sh
  #!/bin/bash
  if [[ $# -ge 0 ]] # -ge больше или равно
  then
    echo "True1"
  fi
  if [[ $var1 == $var2 && $var1 != $var2 ]]
  then
    echo "True2"
  fi
  if [[ -e $0 ]] # -e <путь> путь существует
  then
    echo "True3"
  fi
  if [[ -z " " ]] # -z <строка> строка пуста
  then
    echo "True4"
  fi
  if [[ -s $0 ]] # -s <путь> размер файла больше 0
  then
    echo "True5"
  fi
  if [[ $var1 == $var2 || $var1 != $var2 ]]
  then
    echo "True6"
  fi
  Task:
  Создайте файл со списком пользователей. С помощью for выведите на экран текст: «Creating new ur: uradd имя_пользователя».
  Decision:
  $ cat Linux-CreatingNewUser.sh
  #/bin/bash
  cut -d':' -f1 /etc/passwd >> testfile4
  for line in $(cat testfile4)
  do echo "Creating new ur: uradd $line"
  done
  Task:
  Определить, что является файлом, а что папкой в заданном каталоге
  Decision:
  $ cat Linux-LsLtAFileOrADirectory.sh
  #!/bin/bash
  dir=/home/*
  for file in $dir
  do
  if [ -d "$file" ]
  then
  echo "$file - директория"
  elif [ -f "$file" ]
  then
  echo "$file - файл"
  else
  echo "Неизвестный файл"
  fi
  done
  Task:
  Что делает следующий скрипт:
  #!/bin/bash
  Filial="CH"
  EXT="VF_CHR"
  Period="201502" 
  DIRIN="/home/siu01/ITC/${Filial}/2015/02"
  FNAME="${Filial}_${Period}"
  rm -f ${FNAME}.*
  for FN in `find ${DIRIN} -type f -name '*'${EXT} | grep -E '_TrunkB.*'${EXT}'|_02.*'${EXT} | sort`
  do
   echo ${FN} >> ${FNAME}.txt
   cat ${FN} | awk -F "," 'substr($7,2,6)=="800505" || substr($7,2,6)=="800777" {print $0}' >> ${FNAME}.dat1
  done
  cat ${FNAME}.dat1 | sort -u | sort -t "," -k 7 > ${FNAME}.dat
  rm -f ${FNAME}.dat1
  cat ${FNAME}.dat | awk -F "," -v fl=${Filial} \
  '{if(substr($7,2,6)=="800505") {DUR += $9; Q++;}} END {printf "%-5s\t%5s\t%10s\n",fl,Q,DUR}' >> 800505_${Period}.txt
  cat ${FNAME}.dat | awk -F "," -v fl=${Filial} \
  '{if(substr($7,2,6)=="800777") {DUR += $9; Q++;}} END {printf "%-5s\t%5s\t%10s\n",fl,Q,DUR}' >> 800777_${Period}.txt
  Task:
  Составте конвейер, при помощи которого слово ABRAKADABRA, выведется на экран с заменой букв R на L (echo, tr)
  Task:
  Напишите программу на любом скриптовом языке, которая позволит мониторить состояние http сервера (параметры мониторинга придумайте сами).
  Вход: ./http_check www.mail.ru
  Коды выхода:
  0 – Ок
  1 – Warning
  2 – Critical
  Task:
  Напишите регулярку, которая завхватывает имена pdf файлов из этих урлов?
  http://server.com/downloads/life_changing_plans.pdf
  http://server.com/downl/life_changing_plans.doc
  https://server-dot.com/root.pdf
  Task:
  Нужно этот код программы:
  #!/bin/bash
  # read-integer: проверка целочисленного значения.
  echo -n "Please enter an integer -> "
  read int
  if [[ "$int" =~ ^-?[0-9]+$ ]]; then
      if [ $int -eq 0 ]; then
          echo "$int is zero."
      else
          if [ $int -lt 0 ]; then
              echo "$int is negative."
          else
              echo "$int is positive."
          fi
          if [ $((int % 2)) -eq 0 ]; then
              echo "$int is even."
          else
              echo "$int is odd."
          fi
      fi
  else
      echo "Input value is not an integer." >&2
      exit 1
  fi
  переписать используя команду test вместо составной команды [[ ]] . Подсказка: использовать grep для сопоставления с регулярными выражениями
  Decision:
  echo "$int" | grep -Eo '^-?[0-9]+$'

Работа с файлами и директориями
  Task:
  Cравнение файлов - comm
  Cоздадим с помощью cat два почти идентичных файла. Затем сравним эти два файла с помощью comm.
  Decision:
  $ cat > file1.txt
  a
  b
  c
  d
  $ cat > file2.txt
  b
  c
  d
  e
  $ comm file1.txt file2.txt
      a
              b
              c
              d
          e
  Task:
  Чтобы вывести только одинаковые строки, нужно подавить вывод колонок 1 и 2:
  $ comm -12 file1.txt file2.txt
      b
      c
      d
  Task:
  Сравнить файлы/директории diff:
  Decision:
  diff [-q -r] <путь1> <путь2>
      diff file1.txt file2.txt | less
      diff -qr dir1/ dir2/
  $ cat file1.txt
  a
  b
  c
  d
  $ cat file2.txt
  b
  c
  d
  e
  $ diff file1.txt file2.txt
      1d0
      < a
      4a4
      > e
  Task:
  Cинхронизация файлов и каталогов с удаленной системой
  Давайте попробуем синхронизировать несколько локальных файлов. Сначала очистим наш каталог foo. Далее синхронизируем каталог playground с соответствующей копией в foo. И запустим команду еще раз. теперь изменить файл в playground и запустить rsync еще раз
  Decision:
  $ rm -rf foo/*
  $ rsync -av playground foo
      sending incremental file list
      playground/
      playground/dir-001/
      playground/dir-001/file-A
      playground/dir-001/file-B
      playground/dir-001/file-C
      ...
      playground/dir-100/file-X
      playground/dir-100/file-Y
      playground/dir-100/file-Z
      sent 138,130 bytes  received 49,852 bytes  375,964.00 bytes/sec
      total size is 0  speedup is 0.00
  $ rsync -av playground foo
      sending incremental file list
      sent 36,415 bytes  received 133 bytes  73,096.00 bytes/sec
      total size is 0  speedup is 0.00
  $ touch playground/dir-099/file-Z
  $ rsync -av playground foo
      sending incremental file list
      playground/dir-099/file-Z
      sent 36,467 bytes  received 158 bytes  73,250.00 bytes/sec
      total size is 0  speedup is 0.00
  Task:
  В качестве примера представьте воображаемый внешний жесткий диск. Если после подключения такого диска к системе он снова будет смонтирован в каталог /media/a/'Новый том', выполним первое резервное копирование системы, для начала создав каталог /backup на внешнем устройстве, а затем вызвав rsync для копирования наиболее важных компонентов системы на внешнее устройство.
  Decision:
  a@a-X$ ls /media/a/
      'Новый том'
  a@a-X$ mkdir /media/a/Новый\ том/backup
  a@a-X$ sudo rsync -av --delete /home/a/Видео/ /media/a/Новый\ том/backup
  [sudo] пароль для a:
      sending incremental file list
      ./
      AnyDesk/
      sent 96 bytes  received 23 bytes  238.00 bytes/sec
      total size is 0  speedup is 0.00
  Task:
  Определим псевдоним и добавим его в свой файл .bashrc, чтобы обеспечить возможность быстрого резервного копирования. и теперь, чтобы выполнить всю работу, достаточно просто подключить внешний диск и ввести команду backup .
  Decision:
  alias backup='sudo rsync -av --delete /home/a/Видео/ /media/a/Новый\ том/backup'
  Task:
  Необходимо отсортировать содержимое tennis.txt по второму столбцу.
  Decision:
  $ cat tennis.txt
      Amelie Mauresmo, Fra
      Kim Clijsters, BEL
      Justine Henin, Bel
      Serena Williams, usa
      Venus Williams, USA
  $ sort -k2 tennis.txt
  TasK:
  Необходимо подсчитать строки в выводе утилиты env:
  Decision:
  $ env | wc -l
  Task:
  Содержимое файла tennis.txt:
  $ cat tennis.txt
  Amelie Mauresmo, Fra
  Kim Clijsters, BEL
  Justine Henin, Bel
  Serena Williams, usa
  Venus Williams, USA
  В результате выполнения каких команд будут выведены строки:
      Amelie Mauresmo, Fra
      Serena Williams, usa
      Venus Williams, USA
  Decision:
  $ cat tennis.txt
  Amelie Mauresmo, Fra
  Kim Clijsters, BEL
  Justine Henin, Bel
  Serena Williams, usa
  Venus Williams, USA
  $ grep -iE "W|M" tennis.txt
      Amelie Mauresmo, Fra
      Kim Clijsters, BEL
      Serena Williams, usa
      Venus Williams, USA
  $ grep W|M tennis.txt
      M: command not found
      ^C
  $ grep -E "W|M" tennis.txt
      Amelie Mauresmo, Fra
      Serena Williams, usa
      Venus Williams, USA
  $ grep -G "M\|W" tennis.txt
      Amelie Mauresmo, Fra
      Serena Williams, usa
      Venus Williams, USA
  $ grep W M tennis.txt
      grep: M: No such file or directory
      tennis.txt:Serena Williams, usa
      tennis.txt:Venus Williams, USA
  Task:
  В директории /home/box/testdir дан набор тестовых файлов.
  С помощью команды rename измените расширение у тестовых файлов с .text на .txt.
  Decision:
  $ cd testdir/
  $ rename -f 's/.text/.txt/' *.text
  Task:
  Найдите все директории в системе, в имени которых встречается «.d» и сохраните список в файл
  Decision:
  $ sudo find / -name "*.d*" > output.txt
  Task:
  Найдите все файлы в системе, у которых есть suid, и скопируйте их в директорию ~/suidfiles.
  Decision:
  $ sudo find / -type f -per-t /u=s -exec ls -l {} \; > ~/suidfiles
  Task:
  Создайте архив со всеми файлами из директории /var/log с помощью gzip, а также с помощью bzip. Сравните размеры полученных архивов.
  Decision:
  $ cd /var
  $ sudo tar -cf ~/log.tar log
  $ du -h ~/log.tar
  17G /home/user/log.tar
  $ du -h ~/log.tar
  $ gzip -k ~/log.tar
  $ du -h ~/log.tar.gz
  $ bzip2 -k ~/log.tar
  $ du -h ~/log.tar.bz2
  Task:
  Создайте директорию exam. Внутри директории создайте файл myfile. Создайте жёсткую и символические ссылки на этот файл. Переименуйте файл и символическую ссылку, чтобы их названия совпадали с их инодами. Создайте сжатый архив со всей директорией. Удалите из архива символическую ссылку.
  Decision:
  $ mkdir exam
  $ touch exam/myfile
  $ vim exam/myfile
  $ cat exam/myfile
  Hello
  $ ln exam/myfile hardlink
  $ ln -s exam/myfile softlink
  $ ls -li
  итого 8
  1312032 drwxrwxr-x. 2 user user 4096 мая 12 11:17 exam
  1320672 -rw-rw-r--. 2 user user 6 мая 12 11:17 hardlink
  1320670 lrwxrwxrwx. 1 user user 11 мая 12 11:17 softlink -> exam/myfile
  $ ls -li exam/
  итого 4
  1320672 -rw-rw-r--. 2 user user 6 мая 12 11:17 myfile
  $ cat hardlink
  Hello
  $ cat softlink
  Hello
  $ cd exam/
  $ mv myfile 1320672
  $ cd ..
  $ ls -li exam/
  итого 4
  1320672 -rw-rw-r--. 2 user user 6 мая 12 11:17 1320672
  $ ls -li
  итого 8
  1312032 drwxrwxr-x. 2 user user 4096 мая 12 11:28 exam
  1320672 -rw-rw-r--. 2 user user 6 мая 12 11:17 hardlink
  1320670 lrwxrwxrwx. 1 user user 11 мая 12 11:17 softlink -> exam/myfile
  $ mv softlink 1320670
  $ ls -li
  итого 8
  1320670 lrwxrwxrwx. 1 user user 11 мая 12 11:17 1320670 -> exam/myfile
  1312032 drwxrwxr-x. 2 user user 4096 мая 12 11:28 exam
  1320672 -rw-rw-r--. 2 user user 6 мая 12 11:17 hardlink
  $ ls -li exam/
  итого 4
  1320672 -rw-rw-r--. 2 user user 6 мая 12 11:17 1320672
  $ tar -czf link.tar.gz *
  $ ls -l
  итого 12
  lrwxrwxrwx. 1 user user 11 мая 12 11:17 1320670 -> exam/myfile
  drwxrwxr-x. 2 user user 4096 мая 12 11:28 exam
  -rw-rw-r--. 2 user user 6 мая 12 11:17 hardlink
  -rw-rw-r--. 1 user user 221 мая 12 11:55 link.tar.gz
  $ tar -tf link.tar.gz
  1320670
  exam/
  exam/1320672
  hardlink
  $ tar --delete -f link.tar.gz 1320670
  $ tar -tf link.tar.gz
  exam/
  exam/1320672
  hardlink
  Source:
  1. https://basis.gnulinux.pro/
  Task:
  Напишите команду, которая заменит пользователя владельца каталога /home/foo на bar.
  Decision:
  # chown bar /home/foo
  Task:
  Напишите команду, которая заменит группу владельца каталога /home/foo на bar.
  Decision:
  # chgrp  bar /home/foo
  Task:
  Напишите команду, которая заменит пользователя и группу владельца каталога /home/foo на bar и baz соотвественно.
  Decision:
  # chown bar:baz /home/foo
  Task:
  Напишите команду максимально короткую (т.е. в которой минимально возможное число символов), которая позволит создать в текущей директории 3 поддиректории с именами dir1, dir2, dir3
  Decision:
  $ mkdir dir{1,2,3}
  $ ls --sort=time -l
      total 105364
      drwxrwxr-x   2 s s     4096 Feb 12 21:36 dir1
      drwxrwxr-x   2 s s     4096 Feb 12 21:36 dir2
      drwxrwxr-x   2 s s     4096 Feb 12 21:36 dir3
  Task:
  1. Сохраните в файл ~/bashusers отсортированный в алфавитном порядке список имен пользователей из /etc/passwd, которые используют командную оболочку bash.
  2. Рассмотрите вывод утилиты /sbin/ifconfig. Создайте команду, с помощью которой будут выводиться исключительно IPv4-адреса. Сохраните результат в файл ~/ipaddr.
  Decision:
  $ grep bash /etc/passwd | cut -d: -f1 | sort > bashusers                            
  $ /sbin/ifconfig | grep 'inet' | cut -d: -f2 | cut -d' ' -f1 > /ipaddr
  $ ls                                                        
      bashusers  ipaddr                                                               
  $ cat bashusers                                             
      bar                                                                             
      baz                                                                             
      foo                                                                             
      root                                                                            
  $ cat ipaddr                                                
      10.42.197.95                                                                    
      127.0.0.1
  Task:
  Распаковать архив
  Decision:
  $ ls training_*
  training_8_3_23_1688_LinuxRun.tar.gz
  $ tar xvzf training_8_3_23_1688_LinuxRun.tar.gz 
  setup-training-8.3.23.1688-x86_64.run
  Liberica-Notice.txt
  LibericaJDK-8-9-10-licenses.pdf
  Source:
  https://pingvinus.ru/answers/844
  Task:
  Известно что для архивации файлов существует пакет gzip, который работает только с файлами. Также есть пакет tar, который может объединять файлы в один. Приведите команду, которая запаковывает все файлы с расширением log в каталоге /home/de13ma/de/files в архив quiz.tar.gz, при этом использует максимальную степень сжатия.
  Decision:
  $ tar -9cfvz quiz.tar.gz /home/de13ma/de/files/*.log
  Task:
  Имеется скрипт quiz.sh:
  [de13ma@data-engineering ~]$ ls -l /home/de13ma/ -rw-r--r-- 1 de13ma de13ma 1 Dec 12 20:46 quiz.sh
  Нужно сделать так, чтобы:
  1. файл могли запускать все
  2. файл могли изменять владелец и группа
  3. все пользователи сервера, не являющиеся владельцем и не входящие в его группу, не могли читать этот файл
  Приведите пример команды chmod, которая выдает или отбирает минимально необходимое количество прав (например, не надо выдавать права на чтение владельцу - они и так у него есть).
  $ chmod +x quiz.sh
  $ chmod ug+w quiz.sh
  $ chmod o-r quiz.sh
  $ chmod 400 quiz.sh
  Task:
  Создайте новый файл second, в котором бы трижды повторялась строка текста из файла first.
  Task:
  Приведите все возможные способы просмотра каталога /usr/bin/
  Task:
  Найдите в системе файлы, содержащие в имени три гласные буквы подряд.
  Task:
  Найдите в системе файлы, состоящие из 5 и более заглавных букв подряд.
  Task:
  Прокомментируйте права доступа к файлу и команде passwd
  Task:
  Создайте сжатый архив файлов, измененных за последнюю неделю (tar, gzip, find, cpio)
  Task:
  Сохраните в отдельном файле и прокомментируйте данные о процессе init
  Task:
  С помощью команды grep, произвести поиск слова home в файле /usr/share/dict/words.
  Task:
  Вывести список файлов в каталоге с сортировкой по размеру в обеих направлениях
  Decision:
  $ ls -lS /var/log/
  total 3184
  -rw-r--r--  1 root              root            1151918 May 21 21:13 dpkg.log.1
  -rw-r-----  1 syslog            adm              504487 Jun 26 20:52 kern.log.1
  ...
  -rw-r--r--  1 root              root                  0 Jun 26 20:52 dpkg.log
  $ ls -lSr /var/log/
  total 3184
  -rw-r--r--  1 root              root                  0 Jun 26 20:52 dpkg.log
  -rw-rw----  1 root              utmp                  0 Jun 26 20:52 btmp.1
  ...
  -rw-r--r--  1 root              root            1151918 May 21 21:13 dpkg.log.1
  Task:
  Вывести список файлов в дереве каталогов
  Decision:
  $ tree /var/log/
  /var/log/
  ├── alternatives.log
  ├── apt
  │   ├── eipp.log.xz
  │   ├── history.log
  │   ├── history.log.1.gz
  │   ├── term.log
  │   └── term.log.1.gz
  ...
  └── wtmp
  14 directories, 65 files
  Task:
  Вывести список каталогов в дереве каталогов
  Decision:
  $ tree -d /var/log/
  /var/log/
  ├── apt
  ├── journal
  │   └── 163fb64f2af44b6e8086a45607d1c518
  ...
  └── unattended-upgrades
  14 directories
  Task:
  Вывести список файлов в дереве каталогов в расширенном формате (права доступа, владелец и тд)
  Decision:
  $ tree -p /var/log/
  /var/log/
  ├── [-rw-r--r--]  alternatives.log
  ├── [drwxr-xr-x]  apt
  │   ├── [-rw-r--r--]  eipp.log.xz
  │   ├── [-rw-r--r--]  history.log
  │   ├── [-rw-r--r--]  history.log.1.gz
  │   ├── [-rw-r-----]  term.log
  │   └── [-rw-r-----]  term.log.1.gz
  ...
  └── [-rw-rw-r--]  wtmp
  14 directories, 65 files
  Task:
  Вывести список скрытых файлов в каталоге
  Decision:
  $ ls -a /var/log/
  .                   bootstrap.log  faillog          speech-dispatcher
  ..                  btmp           fontconfig.log   syslog
  ...
  boot.log.3          dpkg.log.1     private
  Task:
  В дереве каталогов посчитать количество файлов, каталогов
  Decision:
  $ sudo find /var/log/ -type f | wc -l
  65
  $ sudo find /var/log/ -type d | wc -l
  15
  Task:
  Очистить раздел от мусора. Это файлы с расширениями .tmp,.trace,*.out и файлы старше 7 дней
  Decision:
  $ find / -name "*.tmp" -exec /bin/rm {} \;
  $ find / -name "*.trace" --delete
  Task:
  посчитать размер каталога в Кб,Мб,Гб
  Decision:
  $ sudo du -sk /var/log
  77864 /var/log
  $ sudo du -sm /var/log
  77  /var/log
  Task:
  Сменить владельца каталога, файла
  Decision:
  $ ls -la /var/log
  total 3212
  -rw-r--r--   1 root              root                  0 Jun 26 20:52 alternatives.log
  -rw-r--r--   1 root              root              32650 May 21 20:49 alternatives.log.1
  ...
  -rw-rw-r--   1 root              utmp              16896 Jul  1 06:03 wtmp
  $ sudo chown ubuntu /var/log/dmesg.0
  $ ls -la /var/log
  total 3216
  -rw-r--r--   1 root              root                  0 Jun 26 20:52 alternatives.log
  -rw-r--r--   1 root              root              32650 May 21 20:49 alternatives.log.1
  ...
  -rw-rw-r--   1 root              utmp              16896 Jul  1 06:03 wtmp
  Task:
  массово сменить владельца дерева каталогов
  Decision:
  $ sudo chown -R ubuntu /var/log/
  $ ls -la /var/log
  total 3216
  -rw-r--r--   1 ubuntu root                  0 Jun 26 20:52 alternatives.log
  -rw-r--r--   1 ubuntu root              32650 May 21 20:49 alternatives.log.1
  ...
  -rw-rw-r--   1 ubuntu utmp              16896 Jul  1 06:03 wtmp
  Task:
  сделать файл исполняемым
  $ ls -l /var/log/dmesg.0
  -rw-r--r-- 1 ubuntu adm 42820 Jun 26 20:52 /var/log/dmesg.0
  $ chmod +x /var/log/dmesg.0
  $ ls -l /var/log/dmesg.0
  -rwxr-xr-x 1 ubuntu adm 42820 Jun 26 20:52 /var/log/dmesg.0
  Task:
  убрать права записи у группы для файла, оставить только владельца
  $ ls -l /var/log/wtmp
  -rw-rw-r-- 1 ubuntu utmp 16896 Jul  1 06:03 /var/log/wtmp
  $ chmod g-w /var/log/wtmp
  $ ls -l /var/log/wtmp
  -rw-r--r-- 1 ubuntu utmp 16896 Jul  1 06:03 /var/log/wtmp
  $ chmod u+w /var/log/wtmp
  $ ls -l /var/log/wtmp
  -rw-r--r-- 1 ubuntu utmp 16896 Jul  1 06:03 /var/log/wtmp

Управление процессами
  Task:
  Запустите gedit, найдите его pid, найдите pid его родительского процесса и так по цепочке все родительские pid-ы.
  Decision:
  [centos@cs ~]$ gedit &
  [1] 3965
  [centos@cs ~]$ ps | grep gedit
  3965 pts/1 00:00:01 gedit
  [centos@cs ~]$ ps -ef | grep gedit
  centos 3965 3218 1 10:01 pts/1 00:00:01 gedit
  centos 4039 3218 0 10:03 pts/1 00:00:00 grep --color=auto gedit
  [centos@cs ~]$ ps -f 3218
  UID PID PPID C STIME TTY STAT TIME CMD
  centos 3218 3215 0 09:25 pts/1 Ss 0:00 -bash
  [centos@cs ~]$ ps -f 3215
  UID PID PPID C STIME TTY STAT TIME CMD
  centos 3215 3208 0 09:25 ? S 0:00 sshd: centos@pts/1
  [centos@cs ~]$ ps -f 3208
  UID PID PPID C STIME TTY STAT TIME CMD
  root 3208 1013 0 09:25 ? Ss 0:00 sshd: centos [priv]
  [centos@cs ~]$ ps -f 1013
  UID PID PPID C STIME TTY STAT TIME CMD
  root 1013 1 0 09:17 ? Ss 0:00 /usr/sbin/sshd -D -oCiphers=aes256-gcm@openssh.com,chacha20-poly1
  [centos@cs ~]$ ps -f 1
  UID PID PPID C STIME TTY STAT TIME CMD
  root 1 0 0 09:15 ? Ss 0:05 /usr/lib/systemd/systemd --switched-root --system --deserialize 1
  Task:
  Запустите форк-бомбу :
  :(){ :|:& };:
  Затем перезагрузите виртуалку, ограничьте количество процессов у своего пользователя до 50 и заново запустите форк-бомбу.
  Decision:
  [centos@cs ~]$ :(){ :|:& };:
  [2] 4788
  [centos@cs ~]$ -bash: fork: retry: Resource temporarily unavailable
  -bash: fork: retry: Resource temporarily unavailable
  ...
  -bash: fork: retry: Resource temporarily unavailable
  -bash: fork: Resource temporarily unavailable
  client_loop: send disconnect: Connection reset
  C:\Users\david>
  C:\Users\david>ssh centos@192.168.0.103
  centos@192.168.0.103's password:
  Activate the web console with: systemctl enable --now cockpit.socket
  Last login: Sat Jan 22 09:25:45 2022 from 192.168.0.105
  [centos@cs ~]$ vim ~/.bash_profile
  [centos@cs ~]$ cat ~/.bash_profile
  # .bash_profile
  # Get the aliases and functions
  if [ -f ~/.bashrc ]; then
  . ~/.bashrc
  fi
  # User specific environment and startup programs
  # Limits
  ulimit -u 50
  [centos@cs ~]$ :(){ :|:& };:
  Task:
  Запустите любой процесс в фоновом режиме (к примеру, gedit). Найдите его родительский процесс. Найдите все дочерние процессы, которые принадлежат этому родительскому процессу. Убейте родительский процесс. Проверьте дочерние процессы и найдите новый родительский процесс.
  Decision:
  [centos@cs ~]$ gedit &
  [1] 5380
  [centos@cs ~]$ ps -ef | grep gedit
  centos 5215 5164 0 12:30 pts/0 00:00:01 gedit
  centos 5387 5285 0 12:34 pts/2 00:00:00 grep --color=auto gedit
  [centos@cs ~]$ ps -f 5164
  UID PID PPID C STIME TTY STAT TIME CMD
  centos 5164 5159 0 12:30 pts/0 Ss+ 0:00 bash
  [centos@cs ~]$ ps -ef | grep 5164
  centos 5164 5159 0 12:30 pts/0 00:00:00 bash
  centos 5215 5164 0 12:30 pts/0 00:00:01 gedit
  centos 5406 5285 0 12:35 pts/2 00:00:00 grep --color=auto 5164
  [centos@cs ~]$ pstree -p | grep gedit
  | |-gnome-terminal-(5159)-+-bash(5164)---gedit(5215)-+-{gedit}(5222)
  | | | |-{gedit}(5223)
  | | | `-{gedit}(5224)
  [centos@cs ~]$ ps -xal | grep gedit
  0 1000 5215 5164 20 0 566668 52284 x64_sy Sl pts/0 0:01 gedit
  0 1000 5442 5285 20 0 12136 1104 - S+ pts/2 0:00 grep --color=auto gedit
  [centos@cs ~]$ kill -KILL 5164
  [centos@cs ~]$ ps -ef | grep gedit
  centos 5215 2331 0 12:30 ? 00:00:01 gedit
  centos 5552 5285 0 12:40 pts/2 00:00:00 grep --color=auto gedit
  [centos@cs ~]$ ps 2331
  PID TTY STAT TIME COMMAND
  2331 ? Ss 0:00 /usr/lib/systemd/systemd --user
  [centos@cs ~]$ ps 1
  PID TTY STAT TIME COMMAND
  1 ? Ss 0:06 /usr/lib/systemd/systemd --switched-root --system --deserialize 17
  Task:
  получить полный список сигналов
  Decision:
  $ kill -l
       1) SIGHUP     2) SIGINT     3) SIGQUIT     4) SIGILL     5) SIGTRAP
       6) SIGABRT     7) SIGBUS     8) SIGFPE     9) SIGKILL    10) SIGUSR1
      11) SIGSEGV    12) SIGUSR2    13) SIGPIPE    14) SIGALRM    15) SIGTERM
      16) SIGSTKFLT    17) SIGCHLD    18) SIGCONT    19) SIGSTOP    20) SIGTSTP
      21) SIGTTIN    22) SIGTTOU    23) SIGURG    24) SIGXCPU    25) SIGXFSZ
      26) SIGVTALRM    27) SIGPROF    28) SIGWINCH    29) SIGIO    30) SIGPWR
      31) SIGSYS    34) SIGRTMIN    35) SIGRTMIN+1    36) SIGRTMIN+2    37) SIGRTMIN+3
      38) SIGRTMIN+4    39) SIGRTMIN+5    40) SIGRTMIN+6    41) SIGRTMIN+7    42) SIGRTMIN+8
      43) SIGRTMIN+9    44) SIGRTMIN+10    45) SIGRTMIN+11    46) SIGRTMIN+12    47) SIGRTMIN+13
      48) SIGRTMIN+14    49) SIGRTMIN+15    50) SIGRTMAX-14    51) SIGRTMAX-13    52) SIGRTMAX-12
      53) SIGRTMAX-11    54) SIGRTMAX-10    55) SIGRTMAX-9    56) SIGRTMAX-8    57) SIGRTMAX-7
      58) SIGRTMAX-6    59) SIGRTMAX-5    60) SIGRTMAX-4    61) SIGRTMAX-3    62) SIGRTMAX-2
      63) SIGRTMAX-1    64) SIGRTMAX
  Task:
  Предположим вы запустили программы firefox, filezilla и gedit в фоновом режиме. После этого вы выполнили следующие действия: fg %1, Ctrl+С, fg %2, Ctrl+Z, jobs. Информация о каких программах будет показана при выполнении команды jobs?
  Decision:
  $ firefox &
      [1] 8962
  $ filezilla &
      [2] 9141
  $ gedit &
      [3] 9184
  $ jobs
      [1]   Running                 firefox &
      [2]-  Running                 filezilla &
      [3]+  Running                 gedit &
  $ fg %1
      firefox
      ^C[GFX1-]: Receive IPC close with reason=AbnormalShutdown
      Exiting due to channel error.
      [GFX1-]: Receive IPC close with reason=AbnormalShutdown
      Exiting due to channel error.
      [GFX1-]: Receive IPC close with reason=AbnormalShutdown
      Exiting due to channel error.
  $ fg %2
      filezilla
      ^Z
      [2]+  Stopped                 filezilla
  $ jobs
      [2]+  Stopped                 filezilla
      [3]-  Running                 gedit &
  Task:
  Как запустить программу в фоне
  Decision:
  u@uv:~/Изображения$ packettracer &
      [1] 3270
  u@uv:~/Изображения$ ps aux | grep packettracer
      u      3270  0.0  0.1  18132  3192 pts/1    S    20:27   0:00 /bin/bash /usr/local/bin/packettracer
      u      3361  0.0  0.1  17700  2796 pts/1    S+   20:28   0:00 grep --color=auto packettracer
  u@uv:~/Изображения$ kill %1
  u@uv:~/Изображения$ ps aux | grep packettracer
      u      3364  0.0  0.0  17700   660 pts/1    S+   20:28   0:00 grep --color=auto packettracer
      [1]+  Завершено      packettracer  
  Source:
  1. https://basis.gnulinux.pro/
  2. https://stepik.org/course/73/syllabus
  Task:
  Если мы хотим посмотреть адрессацию по портам
  Decision:
  $ cat /proc/ioports
        0000-0cf7 : PCI Bus 0000:00
        0000-001f : dma1
        0020-0021 : pic1
        0040-0043 : timer0
        0050-0053 : timer1
        0060-0060 : keyboard
        0064-0064 : keyboard
        0070-0071 : rtc_cmos
          0070-0071 : rtc0
        0080-008f : dma page reg
        00a0-00a1 : pic2
        00c0-00df : dma2
        00f0-00ff : fpu
        0170-0177 : 0000:00:01.1
          0170-0177 : ata_piix
        01f0-01f7 : 0000:00:01.1
          01f0-01f7 : ata_piix
        0376-0376 : 0000:00:01.1
          0376-0376 : ata_piix
        03c0-03df : vga+
        03f6-03f6 : 0000:00:01.1
          03f6-03f6 : ata_piix
      0cf8-0cff : PCI conf1
      0d00-ffff : PCI Bus 0000:00
        4000-403f : 0000:00:07.0
          4000-4003 : ACPI PM1a_EVT_BLK
          4004-4005 : ACPI PM1a_CNT_BLK
          4008-400b : ACPI PM_TMR
          4020-4021 : ACPI GPE0_BLK
        4100-410f : 0000:00:07.0
          4100-4108 : piix4_smbus
        d000-d00f : 0000:00:01.1
          d000-d00f : ata_piix
        d010-d01f : 0000:00:02.0
          d010-d01f : vmwgfx probe
        d020-d027 : 0000:00:03.0
          d020-d027 : e1000
        d040-d05f : 0000:00:04.0
        d100-d1ff : 0000:00:05.0
          d100-d1ff : Intel 82801AA-ICH
        d200-d23f : 0000:00:05.0
          d200-d23f : Intel 82801AA-ICH
        d240-d247 : 0000:00:0d.0
          d240-d247 : ahci
        d248-d24b : 0000:00:0d.0
          d248-d24b : ahci
        d250-d257 : 0000:00:0d.0
          d250-d257 : ahci
        d258-d25b : 0000:00:0d.0
          d258-d25b : ahci
        d260-d26f : 0000:00:0d.0
          d260-d26f : ahci
  Task:
  а если в памяти
  Decision:
  $ cat /proc/iomem
      00000000-00000fff : Reserved
      00001000-0009fbff : System RAM
      0009fc00-0009ffff : Reserved
      000a0000-000bffff : PCI Bus 0000:00
      000c0000-000c7fff : Video ROM
      000e2000-000e2fff : Adapter ROM
      000f0000-000fffff : Reserved
        000f0000-000fffff : System ROM
      00100000-7ffeffff : System RAM
        6ee00000-6fc00e80 : Kernel code
        6fc00e81-706507bf : Kernel data
        7090b000-70dfffff : Kernel bss
      7fff0000-7fffffff : ACPI Tables
      80000000-fdffffff : PCI Bus 0000:00
        f0000000-f7ffffff : 0000:00:02.0
          f0000000-f7ffffff : vmwgfx probe
        f8000000-f81fffff : 0000:00:02.0
          f8000000-f81fffff : vmwgfx probe
        f8200000-f821ffff : 0000:00:03.0
          f8200000-f821ffff : e1000
        f8400000-f87fffff : 0000:00:04.0
          f8400000-f87fffff : vboxguest
        f8800000-f8803fff : 0000:00:04.0
        f8804000-f8804fff : 0000:00:06.0
          f8804000-f8804fff : ohci_hcd
        f8805000-f8805fff : 0000:00:0b.0
          f8805000-f8805fff : ehci_hcd
        f8806000-f8807fff : 0000:00:0d.0
          f8806000-f8807fff : ahci
      fec00000-fec00fff : Reserved
        fec00000-fec003ff : IOAPIC 0
      fee00000-fee00fff : Local APIC
        fee00000-fee00fff : Reserved
      fffc0000-ffffffff : Reserved
  Task:
  Cмотрим инфу о прерываниях. например какие процессы сейчас запущены
  Decision:
  $ cat /proc/interrupts
        CPU0     CPU1       
  0:  1320048     555  IO-APIC-edge      timer
  1:    10224       7  IO-APIC-edge      i8042
  7:        0       0  IO-APIC-edge      parport0
  8:        2       1  IO-APIC-edge      rtc
  10:     3062     21  IO-APIC-fasteoi   acpi
  12:      131      2  IO-APIC-edge      i8042
  15:    47073      0  IO-APIC-edge      ide1
  18:        0      1  IO-APIC-fasteoi   yenta
  19:    31056      1  IO-APIC-fasteoi   libata, ohci1394
  20:    19042      1  IO-APIC-fasteoi   eth0
  21:    44052      1  IO-APIC-fasteoi   uhci_hcd:usb1, uhci_hcd:usb2,...
  22:   188352      1  IO-APIC-fasteoi   ra0
  23:   632444      1  IO-APIC-fasteoi   nvidia
  24:     1585      1  IO-APIC-fasteoi   VIA82XX-MODEM, VIA8237
  Task:
  использовать утилиту dmesg для установления идентификаторов запросов прерываний, резервируемых для определенных устройств в процессе загрузки системы.
  Decision:
  $ dmesg | grep "irq 1[45]"
      [ 28.930069] ata3: PATA max UDMA/133 cmd 0x1f0 ctl 0x3f6 bmdma 0x2090 irq 14
      [ 28.930071] ata4: PATA max UDMA/133 cmd 0x170 ctl 0x376 bmdma 0x2098 irq 15
  Task:
  Сохраните листинг самых ресурсоемких процессов и прокомментируйте его.
  Task:
  Как посмотреть список открытых файлов запущенного процесса?
  Task:
  оценить загрузку CPU
  Decision:
  $ top
  top - 08:00:51 up  2:02,  2 users,  load average: 0.15, 0.12, 0.09
  Tasks: 189 total,   2 running, 187 sleeping,   0 stopped,   0 zombie
  %Cpu(s):  0.2 us,  0.3 sy,  0.0 ni, 99.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
  MiB Mem :   1987.0 total,     83.6 free,    932.0 used,    971.4 buff/cache
  MiB Swap:   2048.0 total,   2033.7 free,     14.3 used.    864.9 avail Mem
      PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
      765 mysql     20   0 1733056 356604  38296 S   0.7  17.5   0:38.09 mysqld  
  ...
       15 root      20   0       0      0      0 S   0.0   0.0   0:00.00 cpuhp/1
  В третьей строке приводится информация об использовании центрального процессора.
  %Cpu(s):  0.2 us,  0.3 sy,  0.0 ni, 99.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
  Task:
  Как узнать, не нарушая работы программы, к каким системным библиотекам и ресурсам системы она обращается в ходе работы?
  Decision:
  $ awk '$NF!~/\.so/{next} {$0=$NF} !a[$0]++' /proc/$PID/maps
  readelf --dynamic /usr/bin/vim | grep NEEDED
   0x0000000000000001 (NEEDED)             Shared library: [libm.so.6]
   0x0000000000000001 (NEEDED)             Shared library: [libtinfo.so.6]
   0x0000000000000001 (NEEDED)             Shared library: [libselinux.so.1]
   0x0000000000000001 (NEEDED)             Shared library: [libcanberra.so.0]
   0x0000000000000001 (NEEDED)             Shared library: [libacl.so.1]
   0x0000000000000001 (NEEDED)             Shared library: [libgpm.so.2]
   0x0000000000000001 (NEEDED)             Shared library: [libdl.so.2]
   0x0000000000000001 (NEEDED)             Shared library: [libpython3.8.so.1.0]
   0x0000000000000001 (NEEDED)             Shared library: [libpthread.so.0]
   0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]

Сетевые настройки
  Task:
  Передача файлов по протоколу TFTP
  установить его на CentOS 8. Oбновите кэш репозитория пакетов CentOS 8
  Decision:
  [root@centos8VB Centos]# dnf makecache
  [root@centos8VB Centos]# dnf -y install xinetd
  [root@centos8VB Centos]# dnf list | grep tftp
      tftp.x86_64                                          5.2-24.el8                                       @AppStream   
      tftp-s.x86_64                                   5.2-24.el8                                       @AppStream   
      erlang-tftp.x86_64                                   22.0.7-1.el8                                     epel         
      syslinux-tftpboot.noarch                             6.04-4.el8                                       BaseOS 
  [root@centos8VB Centos]# dnf -y install tftp-s
  Task:
  Конфигурация службы systemd по умолчанию TFTP не работает корректно на CentOS 8. Таким образом, вы должны создать свою собственную версию сервиса systemd для TFTP-сервера. Cкопируйте файл default /usr/lib/systemd/system/tftp.служебный файл на /etc / systemd/system/tftp-сервер.обслуживание. Затем скопировать значения по умолчанию /usr/lib/systemd/system/tftp.socket на /etc/systemd/system/tftp-s.socket
  Decision:
  [root@centos8VB Centos]# cp -v /usr/lib/systemd/system/tftp.service /etc/systemd/system/tftp-s.service
      '/usr/lib/systemd/system/tftp.service' -> '/etc/systemd/system/tftp-s.service'
  [root@centos8VB Centos]# cp -v /usr/lib/systemd/system/tftp.socket /etc/systemd/system/tftp-s.socket
      '/usr/lib/systemd/system/tftp.socket' -> '/etc/systemd/system/tftp-s.socket'
  Task:
  Теперь отредактируйте файл /etc/systemd/system/tftp-s.service файл.
  измeните  Requires=tftp.socket на Requires=tftp-s.socket.
  измeните  ExecStart=/usr/sbin/in.tftpd -s /var/lib/tftpboot на ExecStart=/usr/sbin/in.tftpd -c -p -s /var/lib/tftpboot.
  измeните  Also=tftp.socket на Also=tftp-s.socket.
  добавить новую строку WantedBy=multi-user.target after the [Install] line.
  Decision:
  [root@centos8VB Centos]# cat /etc/systemd/system/tftp-s.service
      [Unit]
      Description=Tftp s
      Requires=tftp.socket
      Documentation=man:in.tftpd
      [Service]
      ExecStart=/usr/sbin/in.tftpd -s /var/lib/tftpboot
      StandardInput=socket
      [Install]
      Also=tftp.socket
  [root@centos8VB Centos]# vim /etc/systemd/system/tftp-s.service
  [root@centos8VB Centos]# cat /etc/systemd/system/tftp-s.service
      [Unit]
      Description=Tftp s
      Requires=tftp-s.socket
      Documentation=man:in.tftpd
      [Service]
      ExecStart=/usr/sbin/in.tftpd -c -p -s /var/lib/tftpboot
      StandardInput=socket
      [Install]
      WantedBy=multi-user.target
      Also=tftp-s.socket
  Task:
  Теперь отредактируйте файл /etc/systemd/system/tftp-s.socket файл
  Decision:
  [root@centos8VB Centos]# cat /etc/systemd/system/tftp-s.socket
      [Unit]
      Description=Tftp s Activation Socket
      [Socket]
      ListenDatagram=69
      [Install]
      WantedBy=sockets.target
  [root@centos8VB Centos]# vim /etc/systemd/system/tftp-s.socket
  [root@centos8VB Centos]# cat /etc/systemd/system/tftp-s.socket
      [Unit]
      Description=Tftp s Activation Socket
      [Socket]
      ListenDatagram=69
      BindIPv6Only=both
      [Install]
      WantedBy=sockets.target
  Task:
  Теперь проверьте состояние службы tftp-сервера, которую вы только что создали
  Decision:
  [root@centos8VB Centos]# systemctl status tftp-s.service
      ● tftp-s.service - Tftp s
         Loaded: loaded (/etc/systemd/system/tftp-s.service; disabled; vendor pr>
         Active: inactive (dead)
           Docs: man:in.tftpd
  [root@centos8VB Centos]# systemctl start tftp-s.service
  [root@centos8VB Centos]# systemctl enable tftp-s.service
      Created symlink /etc/systemd/system/multi-user.target.wants/tftp-s.service → /etc/systemd/system/tftp-s.service.
      Created symlink /etc/systemd/system/sockets.target.wants/tftp-s.socket → /etc/systemd/system/tftp-s.socket.
  [root@centos8VB Centos]# systemctl status tftp-s.service
      ● tftp-s.service - Tftp s
         Loaded: loaded (/etc/systemd/system/tftp-s.service; enabled; vendor pre>
         Active: active (running) since Sat 2020-04-25 22:49:34 EDT; 32s ago
           Docs: man:in.tftpd
       Main PID: 4706 (in.tftpd)
          Tasks: 1 (limit: 23981)
         Memory: 260.0K
         CGroup: /system.slice/tftp-s.service
             └─4706 /usr/sbin/in.tftpd -c -p -s /var/lib/tftpboot
      апр 25 22:49:34 centos8VB systemd[1]: Started Tftp s.
  Task:
  Если у вас включен SELinux, разрешите анонимный доступ для записи на сервер TFTP. Команда setsebool может быть недоступна на вашем компьютере CentOS 8. Если это так, установите пакет policycoreutils-python.
  Decision:
  [root@centos8VB Centos]# setsebool -P tftp_anon_write 1
  [root@centos8VB Centos]# sudoyum install -y policycoreutils-python
  Task:
  Теперь разрешите чтение, запись и выполнение для корневого каталога TFTP /var/lib/tftpboot от любого пользователя
  Decision:
  [root@centos8VB Centos]# chmod 777 /var/lib/tftpboot
  Task:
  Если у вас есть iptables, настроенный на вашем компьютере CentOS 8 (что очень вероятно), вы должны разрешить доступ к порту UDP 69
  Decision:
  [root@centos8VB Centos]# cat /etc/sysconfig/iptables
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *security
      :INPUT ACCEPT [3250:11558237]
      :FORWARD ACCEPT [0:0]
      :OUTPUT ACCEPT [3352:417020]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *raw
      :PREROUTING ACCEPT [13311:12009098]
      :OUTPUT ACCEPT [3352:417020]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *mangle
      :PREROUTING ACCEPT [13310:12009046]
      :INPUT ACCEPT [13310:12009046]
      :FORWARD ACCEPT [0:0]
      :OUTPUT ACCEPT [3352:417020]
      :POSTROUTING ACCEPT [3354:417084]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *nat
      :PREROUTING ACCEPT [10075:443825]
      :INPUT ACCEPT [66:2904]
      :POSTROUTING ACCEPT [324:21812]
      :OUTPUT ACCEPT [324:21812]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *filter
      :INPUT DROP [7022:316384]
      :FORWARD DROP [0:0]
      :OUTPUT DROP [2480:339285]
      -A INPUT -i lo -j ACCEPT
      -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 21 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 22 -j ACCEPT
      -A INPUT -p tcp -m state --state NEW --dport 23 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 25 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 53 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 80 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 143 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 443 -j ACCEPT
      -A INPUT -p udp -m multiport --dports 53 -j ACCEPT
      -A INPUT -p udp -m multiport --dports 21 -j ACCEPT
      -A INPUT -p udp -m multiport --dports 20 -j ACCEPT
      -A INPUT -p icmp -m icmp --icmp-type 0 -j ACCEPT
      -A OUTPUT -o lo -j ACCEPT
      -A OUTPUT -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
  [root@centos8VB Centos]# vim /etc/sysconfig/iptables
  [root@centos8VB Centos]# cat /etc/sysconfig/iptables
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *security
      :INPUT ACCEPT [3250:11558237]
      :FORWARD ACCEPT [0:0]
      :OUTPUT ACCEPT [3352:417020]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *raw
      :PREROUTING ACCEPT [13311:12009098]
      :OUTPUT ACCEPT [3352:417020]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *mangle
      :PREROUTING ACCEPT [13310:12009046]
      :INPUT ACCEPT [13310:12009046]
      :FORWARD ACCEPT [0:0]
      :OUTPUT ACCEPT [3352:417020]
      :POSTROUTING ACCEPT [3354:417084]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *nat
      :PREROUTING ACCEPT [10075:443825]
      :INPUT ACCEPT [66:2904]
      :POSTROUTING ACCEPT [324:21812]
      :OUTPUT ACCEPT [324:21812]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *filter
      :INPUT DROP [7022:316384]
      :FORWARD DROP [0:0]
      :OUTPUT DROP [2480:339285]
      -A INPUT -i lo -j ACCEPT
      -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 21 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 22 -j ACCEPT
      -A INPUT -p tcp -m state --state NEW --dport 23 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 25 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 53 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 80 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 143 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 443 -j ACCEPT
      -A INPUT -p udp -m multiport --dports 53 -j ACCEPT
      -A INPUT -p udp -m multiport --dports 21 -j ACCEPT
      -A INPUT -p udp -m multiport --dports 20 -j ACCEPT
      -A INPUT -p udp -m multiport --dports 69 -j ACCEPT
      -A INPUT -p icmp -m icmp --icmp-type 0 -j ACCEPT
      -A OUTPUT -o lo -j ACCEPT
      -A OUTPUT -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
  [root@centos8VB Centos]# systemctl restart iptables.service
  [root@centos8VB Centos]# systemctl status iptables.service
      ● iptables.service - IPv4 firewall with iptables
         Loaded: loaded (/usr/lib/systemd/system/iptables.service; enabled; vendor preset: disabled)
         Active: active (exited) since Sat 2020-04-25 23:09:25 EDT; 8s ago
        Process: 7050 ExecStop=/usr/libexec/iptables/iptables.init stop (code=exited, status=0/SUCCESS)
        Process: 7083 ExecStart=/usr/libexec/iptables/iptables.init start (code=exited, status=0/SUCCE>
       Main PID: 7083 (code=exited, status=0/SUCCESS)
      апр 25 23:09:25 centos8VB systemd[1]: Stopped IPv4 firewall with iptables.
      апр 25 23:09:25 centos8VB systemd[1]: Starting IPv4 firewall with iptables...
      апр 25 23:09:25 centos8VB iptables.init[7083]: iptables: Applying firewall rules: [  OK  ]
      апр 25 23:09:25 centos8VB systemd[1]: Started IPv4 firewall with iptables.
  Task:
  Чтобы получить доступ к серверу TFTP, вы должны знать IP-адрес вашего компьютера CentOS 8. Вы можете найти IP-адрес вашего устройства CentOS 8. Чтобы получить доступ к серверу TFTP, на компьютере, с которого вы хотите получить доступ к нему, должна быть установлена клиентская программа TFTP. На CentOS 8 / RHEL 8 можно установить клиентскую программу TFTP.
  Decision:
  [root@centos8VB Centos]# nmcli
      ...
      inet4 192.168.0.104/24
      ...
  [root@centos8VB Centos]# dnf install -y tftp
  Task:
  Чтобы загрузить файлы на ваш TFTP-сервер или загрузить файлы с вашего TFTP-сервера, вы должны перейти в каталог, где доступен файл/файлы, которые вы хотите загрузить на TFTP-сервер, или где вы хотите сохранить загруженный файл/файлы с TFTP-сервера. Допустим, вы хотите загрузить некоторые файлы / файлы из каталога /etc, а также загрузить и сохранить некоторые file/files в каталог /etc. Итак, перейдите в каталог /etc с помощью следующей команды:
  Decision:
  root@ubuntu18VB:# cd /etc
  root@ubuntu18VB:/etc# ls
      ...
      fstab
      ...
  root@ubuntu18VB:/etc# cat fstab
      # /etc/fstab: static file system information.
      #
      # Use 'blkid' to print the universally unique identifier for a
      # device; this may be used with UUID= as a more robust way to name devices
      # that works even if disks are added and removed. See fstab(5).
      #
      # <file system> <mount point>   <type>  <options>       <dump>  <pass>
      # / was on /dev/sda1 during installation
      UUID=4020996d-6502-4a36-b7bc-aec4a74d5aa9 /               ext4    errors=remount-ro 0       1
      /swapfile                                 none            swap    sw              0       0
  [root@centos8VB Centos]# vim /var/lib/tftpboot/Hey
  [root@centos8VB Centos]# cat /var/lib/tftpboot/Hey
      heloo!!!:)
  [root@centos8VB Centos]# ls /var/lib/tftpboot/
      Hey
  Task:
  Теперь пробуем подключиться к tftp с удаленного сервера
  Decision:
  root@ubuntu18VB:/etc# tftp 192.168.0.104
  tftp> status
      Connected to 192.168.0.104.
      Mode: netascii Verbose: off Tracing: off
      Rexmt-interval: 5 seconds, Max-timeout: 25 seconds
  Task:
  Включить подробный режим
  Decision:
  tftp> verbose
      Verbose mode on.
  Task:
  загрузить файл fstab, файл hosts и сохранить его в каталоге /etc
  Decision:
  tftp> put fstab
      putting fstab to 192.168.0.104:fstab [netascii]
      Sent 560 bytes in 0.1 seconds [44800 bits/sec]
  tftp> get Hey
      getting from 192.168.0.104:Hey to Hey [netascii]
      Received 12 bytes in 0.0 seconds [inf bits/sec]
  tftp> quit
  root@ubuntu18VB:/etc# ls
      Hey
  root@ubuntu18VB:/etc# cat Hey
      heloo!!!:)
  [root@centos8VB etc]# ls /var/lib/tftpboot/
      fstab     Hey
  [root@centos8VB etc]# cat /var/lib/tftpboot/fstab
      # /etc/fstab: static file system information.
      #
      # Use 'blkid' to print the universally unique identifier for a
      # device; this may be used with UUID= as a more robust way to name devices
      # that works even if disks are added and removed. See fstab(5).
      #
      # <file system> <mount point>   <type>  <options>       <dump>  <pass>
      # / was on /dev/sda1 during installation
      UUID=4020996d-6502-4a36-b7bc-aec4a74d5aa9 /               ext4    errors=remount-ro 0       1
      /swapfile                                 none            swap    sw              0       0
  Task:
  Установка Telnet
  Decision:
  [root@l C]# yum install telnet telnet-s -y
  [root@l C]# vim /etc/xinetd.d/telnet
  [root@l C]# cat /etc/xinetd.d/telnet
          # default: on
          # description: The telnet s serves telnet sessions; it uses \
          #       unencrypted username/password pairs for authentication.
          service telnet
          {
              flags           = REUSE
              socket_type     = stream
              wait            = no
              user            = root
              s          = /usr/sbin/in.telnetd
              log_on_failure  += USERID
              disable         = no
          }
  [root@l C]# systemctl start telnet.socket
  [root@l C]# systemctl enable telnet.socket
          Created symlink /etc/systemd/system/sockets.target.wants/telnet.socket → /usr/lib/systemd/system/telnet.socket.
  Task
  Разрешите telnet использовать порт 23 в своем брандмауэре и роутере
  Decision:
  [root@l C]# cat /etc/sysconfig/iptables
  # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *security
      :INPUT ACCEPT [3250:11558237]
      :FORWARD ACCEPT [0:0]
      :OUTPUT ACCEPT [3352:417020]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *raw
      :PREROUTING ACCEPT [13311:12009098]
      :OUTPUT ACCEPT [3352:417020]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *mangle
      :PREROUTING ACCEPT [13310:12009046]
      :INPUT ACCEPT [13310:12009046]
      :FORWARD ACCEPT [0:0]
      :OUTPUT ACCEPT [3352:417020]
      :POSTROUTING ACCEPT [3354:417084]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *nat
      :PREROUTING ACCEPT [10075:443825]
      :INPUT ACCEPT [66:2904]
      :POSTROUTING ACCEPT [324:21812]
      :OUTPUT ACCEPT [324:21812]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *filter
      :INPUT DROP [7022:316384]
      :FORWARD DROP [0:0]
      :OUTPUT DROP [2480:339285]
      -A INPUT -i lo -j ACCEPT
      -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 21 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 22 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 25 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 53 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 80 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 143 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 443 -j ACCEPT
      -A INPUT -p udp -m multiport --dports 53 -j ACCEPT
      -A INPUT -p udp -m multiport --dports 21 -j ACCEPT
      -A INPUT -p udp -m multiport --dports 20 -j ACCEPT
      -A INPUT -p icmp -m icmp --icmp-type 0 -j ACCEPT
      -A OUTPUT -o lo -j ACCEPT
      -A OUTPUT -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
  [root@l C]# vim /etc/sysconfig/iptables
  [root@l C]# cat /etc/sysconfig/iptables
  # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *security
      :INPUT ACCEPT [3250:11558237]
      :FORWARD ACCEPT [0:0]
      :OUTPUT ACCEPT [3352:417020]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *raw
      :PREROUTING ACCEPT [13311:12009098]
      :OUTPUT ACCEPT [3352:417020]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *mangle
      :PREROUTING ACCEPT [13310:12009046]
      :INPUT ACCEPT [13310:12009046]
      :FORWARD ACCEPT [0:0]
      :OUTPUT ACCEPT [3352:417020]
      :POSTROUTING ACCEPT [3354:417084]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *nat
      :PREROUTING ACCEPT [10075:443825]
      :INPUT ACCEPT [66:2904]
      :POSTROUTING ACCEPT [324:21812]
      :OUTPUT ACCEPT [324:21812]
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
      # Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
      *filter
      :INPUT DROP [7022:316384]
      :FORWARD DROP [0:0]
      :OUTPUT DROP [2480:339285]
      -A INPUT -i lo -j ACCEPT
      -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 21 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 22 -j ACCEPT
      -A INPUT -p tcp -m state --state NEW --dport 23 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 25 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 53 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 80 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 143 -j ACCEPT
      -A INPUT -p tcp -m multiport --dports 443 -j ACCEPT
      -A INPUT -p udp -m multiport --dports 53 -j ACCEPT
      -A INPUT -p udp -m multiport --dports 21 -j ACCEPT
      -A INPUT -p udp -m multiport --dports 20 -j ACCEPT
      -A INPUT -p icmp -m icmp --icmp-type 0 -j ACCEPT
      -A OUTPUT -o lo -j ACCEPT
      -A OUTPUT -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
      COMMIT
      # Completed on Sun Apr 12 01:33:36 2020
  [root@l C]# systemctl restart iptables.service
  [root@l C]# systemctl status iptables.service
      ● iptables.service - IPv4 firewall with iptables
         Loaded: loaded (/usr/lib/systemd/system/iptables.service; enabled; vendor pr>
         Active: active (exited) since Mon 2020-04-20 22:41:56 EDT; 11s ago
        Process: 5711 ExecStop=/usr/libexec/iptables/iptables.init stop (code=exited,>
        Process: 5741 ExecStart=/usr/libexec/iptables/iptables.init start (code=exite>
       Main PID: 5741 (code=exited, status=0/SUCCESS)
      апр 20 22:41:56 linux.centos systemd[1]: Starting IPv4 firewall with iptables...
      апр 20 22:41:56 linux.centos iptables.init[5741]: iptables: Applying firewall r>
      апр 20 22:41:56 linux.centos systemd[1]: Started IPv4 firewall with iptables.
  Task:
  Создадим тестового пользователя, например "sk" с паролем:
  Decision:
  [root@l C]# useradd sk
  [root@l C]# passwd sk
  Task:
  Настройка Telnet на стороне клиента на примере Ubuntu 18.04 и попытайтесь получить доступ к своему удаленному серверу.
  Decision:
  # apt-get -y install telnet
  # telnet 192.168.0.105
      Trying 192.168.0.105...
      Connected to 192.168.0.105.
      Escape character is '^]'.
      Kernel 4.18.0-147.8.1.el8_1.x86_64 on an x86_64
      linux login: sk
      Password:
      Last login: Mon Apr 20 20:55:01 on tty2
  Source:
  1. https://linuxhint.com/tftp_s_centos8/
  2. https://ixnfo.com/iptables-pravila-dlya-tftp.html
  3. https://www.youtube.com/watch?v=VFze4ifp60M&list=PLtSGboPf3g50Aejrp6KjQsqqjxvAO4aKw&index=4&t=0s)
  Task:
  Настройка xinetd для защиты сетевых служб
  С помощью опции SENSOR можно заблокировать узлы, которые занимаются сканированием портов. Для использования SENSOR необходимо выбрать службу, которую вы не планируете использовать. В данном примере это telnet. Файл /etc/xinetd.d/telnet должен содержать такие строки:
  Decision:
      flags = SENSOR
      deny_time = 60
      disable = no
  Task:
  Опция deny_time блокирует любую удаленную систему на 60 минут, если она пытается подключиться по telnet.
  Decision:
  # cat /etc/xinetd.d/telnet
          # default: on
          # description: The telnet s serves telnet sessions; it uses \
          #       unencrypted username/password pairs for authentication.
          service telnet
          {
              flags           = REUSE
              socket_type     = stream
              wait            = no
              user            = root
              s          = /usr/sbin/in.telnetd
              log_on_failure  += USERID
              disable         = no
          }
  # vim /etc/xinetd.d/telnet
  # cat /etc/xinetd.d/telnet
          # default: on
          # description: The telnet s serves telnet sessions; it uses \
          #       unencrypted username/password pairs for authentication.
          service telnet
          {
              flags           = SENSOR
              socket_type     = stream
              wait            = no
              user            = root
              s          = /usr/sbin/in.telnetd
              log_on_failure  += USERID
              deny_time    = 60
              disable         = no
          }
  # systemctl restart xinetd
  Task:
  поставим программу sshd. После проверки настройки мы немного подправим конфигурацию, чтобы увидеть контроль доступа в действии.Если по какой-то причине ваша система не содержит установки OpenSSH, вы можете установить пакеты.
  Decision:
  # dnf install openssh
  Task:
  Xinetd поставляется с конфигурационным файлом по умолчанию /etc/xinetd.conf. С помощью текстового редактора давайте создадим новый текстовый файл /etc/xinetd.d / ssh со следующим содержимым (обратите внимание, что новая строка после имени службы является обязательной):
  Decision:
  # vim /etc/xinetd.d/ssh
  # cat /etc/xinetd.d/ssh
      service ssh
      {
       disable     = no
       socket_type = stream
       protocol    = tcp
       port        = 22
       wait        = no
       user        = root
       s      = /usr/sbin/sshd
       s_args = -i
      }
  Task:
  Если сервер sshd работает в системе, нам нужно остановить его, иначе xinetd не сможет привязаться к TCP-порту 22. И если мы планируем использовать sshd над xinetd в долгосрочной перспективе, мы также можем отключить для него службу systemd, чтобы предотвратить ее запуск во время загрузки
  Decision:
  # systemctl stop sshd
  # systemctl disable sshd
      Removed /etc/systemd/system/multi-user.target.wants/sshd.service.
  # systemctl restart xinetd
  # systemctl enable xinetd
  Task:
  После запуска xinetd мы можем войти в систему через ssh, так как наша базовая настройка не содержит никаких дополнительных ограничений. Ограничим доступ только из сети 192.168.*.*
  Decision:
  # ssh linux@192.168.0.104
  linux@192.168.0.104's password:
      Welcome to Ubuntu 18.04.4 LTS (GNU/Linux 5.3.0-46-generic x86_64)
       * Documentation:  https://help.ubuntu.com
       * Management:     https://landscape.canonical.com
       * Support:        https://ubuntu.com/advantage
       * Canonical Livepatch is available for installation.
         - Reduce system reboots and improve kernel security. Activate at:
           https://ubuntu.com/livepatch
      Могут быть обновлены 0 пакетов.
      0 обновлений касаются безопасности системы.
      Your Hardware Enablement Stack (HWE) is supported until April 2023.
      Last login: Tue Apr 21 04:59:45 2020 from 192.168.0.105
  # cat /etc/xinetd.d/ssh
      service ssh
      {
       disable     = no
       socket_type = stream
       protocol    = tcp
       port        = 22
       wait        = no
       user        = root
       s      = /usr/sbin/sshd
       s_args = -i
       only_from   = 192.168.0.0
      }
  # systemctl restart xinetd
  Task:
  Наша машина имеет несколько интерфейсов. Чтобы проверить вышеуказанное ограничение, мы попытаемся подключиться к одному интерфейсу, который не разрешен конфигурацией xinetd, и который действительно разрешен
  Decision:
  # hostname -i
      fe80::8d4f:7215:fad0:e632%enp0s3 192.168.0.105 192.168.122.1
  # ssh 192.168.0.105
      Connection reset by 192.168.0.105 port 22
  Task:
  Поскольку мы не изменили конфигурацию ведения журнала по умолчанию, наши попытки входа в систему (или, другими словами, наши попытки доступа к сервису xinetd) будут регистрироваться в /var/log/messages. Записи в журнале можно найти с помощью простого grep. Эти сообщения позволяют легко узнать, как осуществляется доступ к нашим услугам. Хотя есть много других вариантов (в том числе ограничение параллельных подключений или установка тайм-аутов после неудачных подключений для предотвращения DOS - атак), эта простая установка, показывает мощь этого суперсервера, который может облегчить жизнь сисадмина-особенно переполненных, выходящих в интернет систем.
  Decision:
  # cat /var/log/messages | grep xinetd
    Apr 20 21:09:44 linux systemd[1]: xinetd.service: Can't open PID file /var/run/xinetd.pid (yet?) after start: No such file or directory
    Apr 20 21:09:44 linux xinetd[16003]: xinetd Version 2.3.15 started with loadavg labeled-networking options compiled in.
    Apr 20 21:09:44 linux xinetd[16003]: Started working: 0 available services
    Apr 20 21:16:33 linux xinetd[16003]: unexpected signal: 18 (Continued) in signal pipe
    Apr 20 21:16:33 linux xinetd[16003]: Exiting...
    Apr 20 21:16:33 linux xinetd[18603]: xinetd Version 2.3.15 started with loadavg labeled-networking options compiled in.
    Apr 20 21:16:33 linux xinetd[18603]: Started working: 0 available services
    Apr 20 21:18:53 linux xinetd[18603]: unexpected signal: 18 (Continued) in signal pipe
    Apr 20 21:18:53 linux xinetd[18603]: Exiting...
    Apr 20 21:18:53 linux systemd[1]: xinetd.service: Can't open PID file /var/run/xinetd.pid (yet?) after start: No such file or directory
    Apr 20 21:18:53 linux xinetd[9270]: xinetd Version 2.3.15 started with loadavg labeled-networking options compiled in.
    Apr 20 21:18:53 linux xinetd[9270]: Started working: 0 available services
    Apr 20 21:39:35 linux xinetd[9270]: unexpected signal: 18 (Continued) in signal pipe
    Apr 20 21:39:35 linux xinetd[9270]: Exiting...
    Apr 20 21:39:36 linux xinetd[30444]: xinetd Version 2.3.15 started with loadavg labeled-networking options compiled in.
    Apr 20 21:39:36 linux xinetd[30444]: Started working: 1 available service
    Apr 20 21:45:19 linux xinetd[30444]: START: ssh pid=31103 from=::1
    Apr 20 21:45:19 linux xinetd[30444]: EXIT: ssh status=255 pid=31103 duration=0(sec)
    Apr 20 21:49:53 linux xinetd[30444]: unexpected signal: 18 (Continued) in signal pipe
    Apr 20 21:49:53 linux xinetd[30444]: Exiting...
    Apr 20 21:49:54 linux xinetd[31627]: xinetd Version 2.3.15 started with loadavg labeled-networking options compiled in.
    Apr 20 21:49:54 linux xinetd[31627]: Started working: 0 available services
    Apr 20 21:50:37 linux xinetd[31627]: unexpected signal: 18 (Continued) in signal pipe
    Apr 20 21:50:37 linux xinetd[31627]: Exiting...
    Apr 20 21:50:37 linux systemd[1]: xinetd.service: Can't open PID file /var/run/xinetd.pid (yet?) after start: No such file or directory
    Apr 20 21:50:37 linux xinetd[31715]: xinetd Version 2.3.15 started with loadavg labeled-networking options compiled in.
    Apr 20 21:50:37 linux xinetd[31715]: Started working: 1 available service
    Apr 20 21:50:41 linux xinetd[31715]: START: ssh pid=31722 from=::1
    Apr 20 21:50:41 linux xinetd[31715]: EXIT: ssh status=255 pid=31722 duration=0(sec)
    Apr 20 21:58:16 linux xinetd[31715]: START: ssh pid=32609 from=::1
    Apr 20 21:58:16 linux xinetd[31715]: EXIT: ssh status=255 pid=32609 duration=0(sec)
    Apr 20 22:01:51 linux xinetd[31715]: START: ssh pid=529 from=::ffff:192.168.0.104
    Apr 20 22:01:52 linux xinetd[31715]: EXIT: ssh status=255 pid=529 duration=1(sec)
    Apr 20 22:02:10 linux xinetd[31715]: START: ssh pid=574 from=::ffff:192.168.0.104
    Apr 20 22:02:10 linux xinetd[31715]: EXIT: ssh status=255 pid=574 duration=0(sec)
    Apr 20 22:15:17 linux xinetd[31715]: unexpected signal: 18 (Continued) in signal pipe
    Apr 20 22:15:17 linux xinetd[31715]: Exiting...
    Apr 20 22:15:18 linux systemd[1]: xinetd.service: Can't open PID file /var/run/xinetd.pid (yet?) after start: No such file or directory
    Apr 20 22:15:18 linux xinetd[2058]: xinetd Version 2.3.15 started with loadavg labeled-networking options compiled in.
    Apr 20 22:15:18 linux xinetd[2058]: Started working: 1 available service
    Apr 20 22:18:18 linux xinetd[2058]: START: ssh pid=2386 from=::ffff:192.168.0.105
    Apr 20 22:18:18 linux xinetd[2058]: EXIT: ssh status=255 pid=2386 duration=0(sec)
    Apr 20 22:20:33 linux xinetd[2058]: START: ssh pid=2693 from=::ffff:192.168.0.105
    Apr 20 22:20:33 linux xinetd[2058]: EXIT: ssh status=255 pid=2693 duration=0(sec)
  Task:
  Переведите часы на зимнее время (на 1 час назад)
  Task:
  Переведите часы на зимнее время (на 1 час назад)
  Task:
  Как посмотреть список сетевых интерфейсов и ip адресов, маршрутов? Как посмотреть, с какого адреса пойдет траффик до 8.8.8.8
  Task:
  посмотреть, слушается ли порт *** на текущем хосте
  Decision:
  $ netstat -atu
  Active Internet connections (servers and established)
  Proto Recv-Q Send-Q Local Address           Foreign Address         State      
  tcp        0      0 localhost:domain        0.0.0.0:*               LISTEN     
  tcp        0      0 0.0.0.0:ssh             0.0.0.0:*               LISTEN     
  ...                           
  udp6       0      0 [::]:mdns               [::]:*                             
  $ sudo lsof -i :33970
  COMMAND  PID   USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
  sshd    2380   root    4u  IPv4  41394      0t0  TCP ubuntu-VirtualBox:ssh->192.168.0.104:33970 (ESTABLISHED)
  sshd    2465 ubuntu    4u  IPv4  41394      0t0  TCP ubuntu-VirtualBox:ssh->192.168.0.104:33970 (ESTABLISHED)
  Task:
  проверить слушается ли порт *** на удаленном хосте
  Decision:
  $ nc -zvw3 192.168.0.103 22
  Connection to 192.168.0.103 22 port [tcp/ssh] succeeded!
  Task:
  проверить сетевую доступность хоста
  Decision:
  $ ping 192.168.0.103
  PING 192.168.0.103 (192.168.0.103) 56(84) bytes of data.
  64 bytes from 192.168.0.103: icmp_seq=1 ttl=64 time=0.075 ms
  64 bytes from 192.168.0.103: icmp_seq=2 ttl=64 time=0.110 ms
  64 bytes from 192.168.0.103: icmp_seq=3 ttl=64 time=0.116 ms
  64 bytes from 192.168.0.103: icmp_seq=4 ttl=64 time=0.109 ms
  ^C
  --- 192.168.0.103 ping statistics ---
  4 packets transmitted, 4 received, 0% packet loss, time 3084ms
  rtt min/avg/max/mdev = 0.075/0.102/0.116/0.016 ms
  Task:
  посчитать количество открытых соединений на хосте
  Decision:
  $ netstat -atun | wc -l
  18
  Task:
  Включение маршрутизации для своих интерфейсов (если у вас два или более интерфейсов её нужно включить) осуществляется передачей “1” в этот файл.
  Decision:
  # echo '1' > /proc/sys/net/ipv4/ip_forward
  Task:
  Настроим сетевой интерфейс. Мы знаем что lo всегда включен и его не нужно вообще трогать. Редактируем /etc/sysconfig/network-scripts/ifcfg-eth0
  Decision:
  # vim /etc/sysconfig/network-scripts/ifcfg-enp0s3
  # cat /etc/sysconfig/network-scripts/ifcfg-enp0s3
      TYPE="Ethernet"
      PROXY_METHOD="none"
      BROWSER_ONLY="no"
      BOOTPROTO="dhcp"
      DEFROUTE="yes"
      IPV4_FAILURE_FATAL="no"
      IPV6INIT="yes"
      IPV6_AUTOCONF="yes"
      IPV6_DEFROUTE="yes"
      IPV6_FAILURE_FATAL="no"
      IPV6_ADDR_GEN_MODE="stable-privacy"
      NAME="enp0s3" UUID="344798b0-455a-489b-a686-5127974b707f"
      DEVICE="enp0s3" ONBOOT="yes"
      IPADDR =192.168.0.106
      NETMASK=255.255.255.0
      BROADCAST=192.168.146.255
      GATEWAY=192.168.0.1
  # service network restart
      Restarting network (via systemctl): [ OK ]
  # /etc/init.d/network restart
      Shutting down interface enp0s3:
      [ OK ]
      [ OK ]
      Shutting down loopback interface:
      Bringing up loopback interface:
      [OK ]
      Bringing up interface enp0s3:
      [ OK ]
  # ifconfig
      enp0s3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST> mtu 1500 inet 12.18.0.12 netmask 255.255.255.0 broadcast 192.168.0.255 inet6 fe80::8d4f:7215:fad0:e632 prefixlen 64 scopeid 0x20<link> ether 08:00:27:77:a2:2c txqueuelen 1000 (Ethernet) RX packets 56 bytes 9856 (9.6 KiB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 91 bytes 10006 (9.7 KiB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0
      lo: flags=73<UP,LOOPBACK,RUNNING> mtu 65536 inet 127.0.0.1 netmask 255.0.0.0 inet6 ::1 prefixlen 128 scopeid 0x10<host> loop txqueuelen 1000 (Local Loopback) RX packets 32 bytes 2704 (2.6 KiB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 32 bytes 2704 (2.6 KiB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0
      virbr0: flags=4099<UP,BROADCAST,MULTICAST> mtu 1500 inet 192.168.122.1 netmask 255.255.255.0 broadcast 192.168.122.255 ether 52:54:00:52:1f:85 txqueuelen 1000 (Ethernet) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0
  Task:
  После настройки сетевого интерфейса мы полностью перезагружали службу network. Когда на сервере только один интерфейс это не страшно, но если их несколько и какие-то уже работают и выполняют свои функции прерывать их работу нежелательно. Тут нам на помощь приходит скрипт ifup/ifdown. Он нужен для перезагрузки какого либо одного сетевого интерфейса.
  Decision:
  # vim /etc/sysconfig/network-scripts/ifcfg-enp0s3
  # ifdown enp0s3
      WARN : [ifdown] You are using 'ifdown' script provided by 'network-scripts', which are now deprecated.
      WARN : [ifdown] 'network-scripts' will be removed in one of the next major releases of RHEL.
      WARN : [ifdown] It is advised to switch to 'NetworkManager' instead - it provides 'ifup/ifdown' scripts as well.
      /etc/sysconfig/network-scripts/ifcfg-enp0s3: строка 16: IPADDR: команда не найдена
      Выполнено: устройство «enp0s3» отключено.
  # ifup enp0s3
      WARN : [ifup] You are using 'ifup' script provided by 'network-scripts', which are now deprecated.
      WARN : [ifup] 'network-scripts' will be removed in one of the next major releases of RHEL.
      WARN : [ifup] It is advised to switch to 'NetworkManager' instead - it provides 'ifup/ifdown' scripts as well.
      /etc/sysconfig/network-scripts/ifcfg-enp0s3: строка 16: IPADDR: команда не найдена
      Соединение успешно активировано (адрес действующего D-Bus: /org/freedesktop/NetworkManager/ActiveConnection/4)
  Task:
  Маршрутизация 
  Увидеть, как выглядит маршрут к сайту lxcd.org, можно с помощью команды traceroute. Ее вывод выглядит примерно так:
  Decision:
  $ traceroute lxcd.org
      traceroute to lxcd.org (216.15.38.11), 30 hops max, 60 byte packets
       1  _gateway (12.18.0.1)  1.035 ms  1.702 ms  2.387 ms
       2  * * *
       3  dynamicip-109-194-24-39.pppoe.penza.ertelecom.ru (109.194.24.39)  4.222 ms  4.098 ms  4.056 ms
       4  GW-ERTelecom.retn.net (87.245.229.49)  76.529 ms  73.641 ms  76.687 ms
       5  ae19-1317.RT.M9.MSK.RU.retn.net (87.245.229.48)  82.379 ms  78.215 ms  82.008 ms
       6  ae1-5.RT.IRX.FKT.DE.retn.net (87.245.232.244)  103.273 ms  15.734 ms ae8-10.RT.IRX.FKT.DE.retn.net (87.245.232.139)  107.897 ms
       7  * * *
       8  * * *
       9  CenturyLink-level3-NewYork6.Level3.net (4.68.70.50)  182.192 ms  180.373 ms  187.678 ms
      10  los-edge-08.inet.qwest.net (67.14.22.202)  240.328 ms  239.644 ms  237.103 ms
      11  65-126-18-126.dia.static.qwest.net (65.126.18.126)  242.163 ms  242.281 ms  241.538 ms
      12  br05-te0-0-1-6.lwdc.americanis.net (207.158.62.109)  245.888 ms  248.718 ms  244.610 ms
      13  * ar07-te13-3.lwdc.americanis.net (209.216.192.66)  240.239 ms  237.528 ms
      14  secureprojects.sourceforge.net (216.15.38.11)  253.350 ms  248.065 ms  248.131 ms
      15  * * *   
  Task:
  Netstat. отслеживать сетевые подключения сервера. Увидеть список сетей и как до них добраться.
  Decision:
  # netstat -nr
      Kernel IP routing table
      Destination Gateway Genmask Flags MSS Window irtt Iface
      0.0.0.0 12.18.0.1 0.0.0.0 UG 0 0 0 enp0s3
      12.18.0.0 0.0.0.0 255.255.255.0 U 0 0 0 enp0s3
      12.18.122.0 0.0.0.0 255.255.255.0 U 0 0 0 virbr0
  Task:
  Показать таблицу маршрутизации. Посмотреть, как настроена передача пакетов между сетями
  Decision:
  # netstat -r
      Kernel IP routing table
      Destination Gateway Genmask Flags MSS Window irtt Iface
      default _gateway 0.0.0.0 UG 0 0 0 enp0s3
      12.18.0.0 0.0.0.0 255.255.255.0 U 0 0 0 enp0s3
      12.18.122.0 0.0.0.0 255.255.255.0 U 0 0 0 virbr0
  Task:
  исследовать сетевые интерфейсы в системе
  Decision:
  $ netstat -ie
      Kernel Interface table
      enp0s3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
              inet 12.18.0.8  netmask 255.255.255.0  broadcast 12.18.0.255
              inet6 fe80::b63d:e517:e50:bc88  prefixlen 64  scopeid 0x20<link>
              ether 08:00:27:ec:f5:ce  txqueuelen 1000  (Ethernet)
              RX packets 37534  bytes 47529065 (47.5 MB)
              RX errors 0  dropped 0  overruns 0  frame 0
              TX packets 4698  bytes 483400 (483.4 KB)
              TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
      lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
              inet 127.0.0.1  netmask 255.0.0.0
              inet6 ::1  prefixlen 128  scopeid 0x10<host>
              loop  txqueuelen 1000  (Local Loopback)
              RX packets 1304  bytes 347888 (347.8 KB)
              RX errors 0  dropped 0  overruns 0  frame 0
              TX packets 1304  bytes 347888 (347.8 KB)
              TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
  Task:
  вывести статистику по ip-адресу
  Decision:
  # netstat -n

      Active Internet connections (w/o ss)
      Proto Recv-Q Send-Q Local Address Foreign Address State
      Active UNIX domain sockets (w/o ss)
      Proto RefCnt Flags Type State I-Node Path
      unix 9 [ ] DGRAM 11007 /run/systemd/journal/socket
      ...
      unix 3 [ ] STREAM CONNECTED 45636 /run/dbus/system_bus_socket
      unix 3 [ ] STREAM CONNECTED 43923
      Active Bluetooth connections (w/o ss)
      Proto Destination Source State PSM DCID SCID IMTU OMTU Security
      Proto Destination Source State Channel
  Task:
  отобразить таблицу сетевых интерфейсов
  Decision:
  # netstat -i
      Kernel Interface table
      Iface MTU RX-OK RX-ERR RX-DRP RX-OVR TX-OK TX-ERR TX-DRP TX-OVR Flg
      enp0s3 1500 419 0 0 0 345 0 0 0 BMRU
      lo 65536 32 0 0 0 32 0 0 0 LRU
      virbr0 1500 0 0 0 0 0 0 0 0 BMU
  Task:
  отобразить сокеты в режиме LISTEN, то есть ожидающие соединения
  Decision:
  # netstat -l
      Active Internet connections (only ss)
      Proto Recv-Q Send-Q Local Address Foreign Address State
      tcp 0 0 0.0.0.0:hostmon 0.0.0.0:* LISTEN
      tcp 0 0 0.0.0.0:sunrpc 0.0.0.0:* LISTEN
      ...
      tcp6 0 0 [::]:hostmon [::]:* LISTEN
      tcp6 0 0 [::]:sunrpc [::]:* LISTEN
      ...
      udp 0 0 0.0.0.0:56191 0.0.0.0:*
      udp 0 0 0.0.0.0:mdns 0.0.0.0:*
      ...
      udp6 0 0 [::]:50015 [::]:*
      udp6 0 0 [::]:mdns [::]:*
      ...
      Active UNIX domain sockets (only ss)
      Proto RefCnt Flags Type State I-Node Path
      unix 2 [ ACC ] STREAM LISTENING 43224 @/tmp/.ICE-unix/2512
      unix 2 [ ACC ] STREAM LISTENING 36494 @/tmp/dbus-cwSnk1t6
      ...
      Active Bluetooth connections (only ss)
      Proto Destination Source State PSM DCID SCID IMTU OMTU Security
      Proto Destination Source State Channel
  Task:
  Показать PID (process ID) и имя программы с которой взаимодействует сокет
  Decision:
  # netstat -p
      Active Internet connections (w/o ss)
      Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name
      Active UNIX domain sockets (w/o ss)
      Proto RefCnt Flags Type State I-Node PID/Program name Path
      unix 9 [ ] DGRAM 11007 1/systemd /run/systemd/journal/socket
      unix 22 [ ] DGRAM 11016 1/systemd /run/systemd/journal/dev-log
      ...
      unix 3 [ ] STREAM CONNECTED 43923 2695/gvfs-udisks2-v
      Active Bluetooth connections (w/o ss)
      Proto Destination Source State PSM DCID SCID IMTU OMTU Security
      Proto Destination Source State Channel
  Task:
  слушает ли кто нибудь 22-й порт ?
  Decision:
  # netstat -nlp | grep :22
      tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 1124/sshd
      tcp6 0 0 :::22 :::* LISTEN 1124/sshd
  # ps ux | grep 1124
      root 1124 0.0 0.1 92308 6956 ? Ss 00:26 0:00 /usr/sbin/sshd -D -oCiphers=aes256-gcm@openssh.com,...,ssh-rsa
      root 10933 0.0 0.0 221896 1064 pts/0 R+ 01:36 0:00 grep --color=auto 1124
  Task:
  Посмотрим текущие ESTABLISHED-соединения по tcp, то есть с кем у нас есть подключение и по какому порту
  Decision:
  root@VirtualBox:# ssh Centos@12.18.0.2
      Centos@12.18.0.2's password:
      Activate the web console with: systemctl enable --now cockpit.socket
      Last login: Wed Apr 1 00:27:53 2020
  # netstat -nt
      Active Internet connections (w/o ss)
      Proto Recv-Q Send-Q Local Address Foreign Address State
      tcp 0 0 12.18.0.2:22 12.18.0.4:54522 ESTABLISHED
  Task:
  Сканирование сетей TCPDUMP.Посмотрим MAC-адрес клиента Ubuntu VirtuaBox
  Decision:
  # ifconfig
      flags=4163<UP,BROADCAST,RUNNING,MULTICAST> mtu 1500
      inet 12.18.0.104 netmask 255.255.255.0 broadcast 12.18.0.255
      inet6 fe80::25f1:ad4f:8afc:2f43 prefixlen 64 scopeid 0x20<link>
      ether 08:00:27:b3:5f:f4 txqueuelen 1000 (Ethernet)
      RX packets 42470 bytes 55961585 (55.9 MB)
      RX errors 0 dropped 0 overruns 0 frame 0
      TX packets 8804 bytes 1521523 (1.5 MB)
      TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 ...
  Task:
  Перехватываем весь трафик для MAC-адреса 08:00:27:b3:5f:f4 на интерфейсе enp0s3 и одновременно в Ubuntu VirtuaBox пингуем и смотрим в C VirtualBox
  Decision:
  # tcpdump -n -i enp0s3 "ether host 08:00:27:b3:5f:f4"
      tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
      listening on enp0s3, link-type EN10MB (Ethernet), capture size 262144 bytes
  # ping 12.18.0.102
      PING 12.18.0.102 (12.18.0.102) 56(84) bytes of data.
      64 bytes from 12.18.0.102: icmp_seq=1 ttl=64 time=1.52 ms
      64 bytes from 12.18.0.102: icmp_seq=2 ttl=64 time=1.30 ms
      64 bytes from 12.18.0.102: icmp_seq=3 ttl=64 time=1.27 ms
      ...
  # tcpdump -n -i enp0s3 "ether host 08:00:27:b3:5f:f4"
      tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
      listening on enp0s3, link-type EN10MB (Ethernet), capture size 262144 bytes
      02:14:13.169998 IP 12.18.0.104 > 224.0.0.251: igmp v2 report 224.0.0.251
      02:16:13.263468 IP 12.18.0.104 > 224.0.0.251: igmp v2 report 224.0.0.251
      02:16:23.979173 IP 12.18.0.104 > 12.18.0.102: ICMP echo request, id 5096, seq 1, length 64
      ...
  Task:
  Слушаем трафик для определенного ip-адреса и порта
  Decision:
  # tcpdump -nn host 12.18.0.104 and port 22
  # ssh C@12.18.0.102
      C@12.18.0.102's password:
      Activate the web console with: systemctl enable --now cockpit.socket
      Last login: Wed Apr 1 02:23:14 2020 from 12.18.0.104
  # tcpdump -nn host 12.18.0.104 and port 22
      tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
      listening on enp0s3, link-type EN10MB (Ethernet), capture size 262144 bytes
      02:24:59.560146 IP 12.18.0.104.54596 > 12.18.0.102.22: Flags [S], seq 317028312, win 64240, options [mss 1460,sackOK,TS val 1889507030 ecr 0,nop,wscale 7], length 0
      02:24:59.560305 IP 12.18.0.102.22 > 12.18.0.104.54596: Flags [S.], seq 3182702760, ack 317028313, win 28960, options [mss 1460,sackOK,TS val 2821623951 ecr 1889507030,nop,wscale 7], length 0
      02:24:59.561023 IP 12.18.0.104.54596 > 12.18.0.102.22: Flags [.], ack 1, win 502, options [nop,nop,TS val 1889507031 ecr 2821623951], length 0
      02:24:59.563115 IP 12.18.0.104.54596 > 12.18.0.102.22: Flags [P.], seq 1:42, ack 1, win 502, options [nop,nop,TS val 1889507033 ecr 2821623951], length 41
      ...
      02:25:05.643352 IP 12.18.0.102.22 > 12.18.0.104.54596: Flags [.], ack 2575, win 292, options [nop,nop,TS val 2821630034 ecr 1889513113], length 0
      02:25:05.692938 IP 12.18.0.102.22 > 12.18.0.104.54596: Flags [F.], seq 3070, ack 2575, win 292, options [nop,nop,TS val 2821630084 ecr 1889513113], length 0
      02:25:05.693753 IP 12.18.0.104.54596 > 12.18.0.102.22: Flags [.], ack 3071, win 501, options [nop,nop,TS val 1889513164 ecr 2821630084], length 0
  Task:
  Перехватываем только ICMP-пакеты. Попингуйте свою систему с удаленного хоста, и вы увидите перехваченные пакеты в выводе tcpdump.
  Decision:
  # tcpdump -i enp0s3 -n -nn -ttt 'ip proto \icmp'
      tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
      listening on enp0s3, link-type EN10MB (Ethernet), capture size 262144 bytes
  # ping 12.18.0.102
      PING 12.18.0.102 (12.18.0.102) 56(84) bytes of data.
      64 bytes from 12.18.0.102: icmp_seq=1 ttl=64 time=1.91 ms
      64 bytes from 12.18.0.102: icmp_seq=2 ttl=64 time=1.54 ms
      64 bytes from 12.18.0.102: icmp_seq=3 ttl=64 time=1.54 ms
      --- 12.18.0.102 ping statistics ---
      3 packets transmitted, 3 received, 0% packet loss, time 2005ms
      rtt min/avg/max/mdev = 1.541/1.667/1.915/0.175 ms
  # tcpdump -i enp0s3 -n -nn -ttt 'ip proto \icmp'
      tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
      listening on enp0s3, link-type EN10MB (Ethernet), capture size 262144 bytes
      00:00:00.000000 IP 12.18.0.104 > 12.18.0.102: ICMP echo request, id 6223, seq 1, length 64
      00:00:00.000205 IP 12.18.0.102 > 12.18.0.104: ICMP echo reply, id 6223, seq 1, length 64
      00:00:01.002533 IP 12.18.0.104 > 12.18.0.102: ICMP echo request, id 6223, seq 2, length 64
      00:00:00.000163 IP 12.18.0.102 > 12.18.0.104: ICMP echo reply, id 6223, seq 2, length 64
      00:00:01.002037 IP 12.18.0.104 > 12.18.0.102: ICMP echo request, id 6223, seq 3, length 64
      00:00:00.000162 IP 12.18.0.102 > 12.18.0.104: ICMP echo reply, id 6223, seq 3, length 64
  Task:
  Перехватываем DNS-трафик между сервером и каким-нибудь узлом в сети.
  Decision:
  # tcpdump -i enp0s3 -n -nn -ttt 'host 12.18.0.1 and port 53'
      tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
      listening on enp0s3, link-type EN10MB (Ethernet), capture size 262144 bytes
      ...
  Task:
  Перехватываем входящий трафик на порт 80. Меняя номер порта, вы можете перехватывать трафик для любого сервиса
  Decision:
  # tcpdump -v -i enp0s3 dst port 80
      tcpdump: listening on enp0s3, link-type EN10MB (Ethernet), capture size 262144 bytes
      ...
  Task:
  Благодаря анализу трафика можно выяснять источники DOS/DDOS-атак. Например, во время атаки на сервер мы можем сохранить статистику по 80-му порту в файл и затем проанализировать его. В примере ниже мы сохраняем статистику в файл my.log для первых 500 пакетов. Если вы захотите более точную статистику, то количество пакетов можно увеличить.
  Decision:
  # tcpdump -v -n -w my.log dst port 80 -c 500
  # ls -l
      итого 4
      -rw-r--r--. 1 tcpdump tcpdump 24 апр 1 03:16 my.log
      drwxr-xr-x. 2 C C 6 мар 12 01:09 Видео
      drwxr-xr-x. 2 C C 6 мар 12 01:09 Документы
      drwxr-xr-x. 2 C C 6 мар 12 01:09 Загрузки
      drwxr-xr-x. 2 C C 6 апр 1 01:03 Изображения
      drwxr-xr-x. 2 C C 6 мар 12 01:09 Музыка
      drwxr-xr-x. 2 C C 6 мар 12 01:09 Общедоступные
      drwxr-xr-x. 2 C C 6 мар 12 01:09 'Рабочий стол'
      drwxr-xr-x. 2 C C 6 мар 12 01:09 Шаблоны
  [root@linuxbox ~]# tcpdump -nr my.log | awk '{print $3}' | grep -oE '[0-9]{1,}\. [0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}' | sort | uniq -c | sort –rn В
  Task:
  результате на экран будет выведено два столбца – количество подключений и IP-адрес. Чем больше подключений для одного IP-адреса, тем больше вероятность, что это какая-то нехорошая деятельность. IP-адреса, которые вызывают подозрение, можно заблокировать в iptable
  Decision:
  # iptables -A INPUT -s IP-адрес -j DROP
  Source:
  1. https://www.youtube.com/playlist?list=PLZhCxwdwDOs_mcD3BzbfiJX-V1kHbMjsh
  2. https://www.youtube.com/playlist?list=PLtSGboPf3g50Aejrp6KjQsqqjxvAO4aKw
  3. http://rus-linux.net/MyLDP/consol/installing-telnet.html

Журналирование
  Task:
  Как посмотреть последние логи ос/ядра?
  Task:
  Вытащить логи какие-нибудь
  Decision:
  $ ls /var/log/
  alternatives.log    btmp          faillog          private
  alternatives.log.1  btmp.1        fontconfig.log   speech-dispatcher
  apport.log          cups          gdm3             syslog
  apport.log.1        dist-upgrade  gpu-manager.log  syslog.1
  apt                 dmesg         hp               syslog.2.gz
  auth.log            dmesg.0       installer        syslog.3.gz
  auth.log.1          dmesg.1.gz    journal          ubuntu-advantage.log
  boot.log            dmesg.2.gz    kern.log         ubuntu-advantage.log.1
  boot.log.1          dmesg.3.gz    kern.log.1       unattended-upgrades
  boot.log.2          dmesg.4.gz    lastlog          vboxadd-install.log
  boot.log.3          dpkg.log      mysql            vboxadd-setup.log
  bootstrap.log       dpkg.log.1    openvpn          wtmp
  Task:
  Вытащить последние 1000 строк лога, первые 1200 строк логов
  $ tail -n 1000 /var/log/syslog
  $ head -n 1200 /var/log/syslog

Системные настройки
  Task:
  Система инициализации systemd
  Зайдите в rescue.target, посмотрите содержимое fstab, после чего вернитесь в graphical.target.
  Decision:
  $ systemctl get-default
      graphical.target
  $ systemctl list-units --type target --all
        UNIT                                                                          
        ...                                                                 
        graphical.target                                                              
        ...                                                             
        multi-user.target                                                             
        ...                                                           
        rescue.target                                                                                                                              
      lines 11-33
  $ sudo systemctl set-default rescue.target
      Removed /etc/systemd/system/default.target.
      Created symlink /etc/systemd/system/default.target → /usr/lib/systemd/system/rescue.target.
  $ systemctl get-default
      rescue.target
  $ cat /usr/lib/systemd/system/rescue.target
  #  SPDX-License-Identifier: LGPL-2.1+
  #
  #  This file is part of systemd.
  #
  #  systemd is free software; you can redistribute it and/or modify it
  #  under the terms of the GNU Lesser General Public License as published by
  #  the Free Software Foundation; either version 2.1 of the License, or
  #  (at your option) any later version.

  [Unit]
  Description=Rescue Mode
  Documentation=man:systemd.special(7)
  Requires=sysinit.target rescue.service
  After=sysinit.target rescue.service
  AllowIsolate=yes
  $ sudo cat /etc/fstab
  #
  # /etc/fstab
  # Created by anaconda on Mon Mar 21 05:33:35 2022
  #
  # Accessible filesystems, by reference, are maintained under '/dev/disk/'.
  # See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.
  #
  # After editing this file, run 'systemctl daemon-reload' to update systemd
  # units generated from this file.
  #
  /dev/mapper/ro_redos-root /                       ext4    defaults        1 1
  UUID=2fefa97c-6093-43b9-99f0-23f8a1467990 /boot                   ext4    defaults        1 2
  /dev/mapper/ro_redos-swap none                    swap    defaults        0 0
  $ sudo systemctl set-default graphical.target
      Removed /etc/systemd/system/default.target.
      Created symlink /etc/systemd/system/default.target → /usr/lib/systemd/system/graphical.target.
  $ systemctl get-default
      graphical.target
  Task:
  Сделайте multi-user.target режимом по умолчанию.
  Decision:
  $ sudo systemctl set-default multi-user.target
      Removed /etc/systemd/system/default.target.
      Created symlink /etc/systemd/system/default.target → /usr/lib/systemd/system/multi-user.target.
  $ systemctl get-default
      multi-user.target
  Task:
  Системный менеджер
  Отключите сервис sshd, перезапустите систему и посмотрите статус этого сервиса.
  Decision:
  $ sudo systemctl disable sshd
  $ sudo reboot
  Task:
  Запустите сервис sshd и посмотрите его статус.
  Decision:
  $ sudo systemctl enable sshd
  $ sudo systemctl start sshd
  $ sudo systemctl status sshd
  Task:
  Запретите сервису sshd запускаться.
  Decision:
  $ sudo systemctl mask sshd
  Task:
  Верните sshd право запускаться и вновь добавьте его в автозапуск. Перезапусти систему и убедитесь, что всё работает.
  Decision:
  $ sudo systemctl unmask sshd
  $ sudo systemctl enable sshd
  $ sudo systemctl start sshd
  $ sudo reboot
  $ systemctl status sshd
  Task:
  Установка Subversion - система контроля версий
  Decision:
  # yum list | grep subversion
      subversion.x86_64 1.10.2-1.module_el8.0.0+45+75bba4f4 @AppStream
      subversion-libs.x86_64 1.10.2-1.module_el8.0.0+45+75bba4f4 @AppStream
      subversion-devel.x86_64 1.10.2-1.module_el8.0.0+45+75bba4f4 AppStream
      subversion-gnome.x86_64 1.10.2-1.module_el8.0.0+45+75bba4f4 AppStream
      subversion-javahl.noarch 1.10.2-1.module_el8.0.0+45+75bba4f4 AppStream
      subversion-perl.x86_64 1.10.2-1.module_el8.0.0+45+75bba4f4 AppStream
      subversion-tools.x86_64 1.10.2-1.module_el8.0.0+45+75bba4f4 AppStream
  # yum -y install subversion
  # svnversion --version
      svnversion, version 1.10.2 (r1835932)
      compiled Jun 24 2019, 19:19:14 on x86_64-redhat-linux-gnu
      Copyright (C) 2018 The Apache Software Foundation.
      This software consists of contributions made by many people;
      see the NOTICE file for more information.
      Subversion is open source software, see http://subversion.apache.org/
  Task:
  Обновление рабочей копии
  Decision:
  svn update
  Task:
  Внесение изменений
  Decision:
  svn add
  svn delete
  svn copy
  svn move
  Task:
  Анализ изменений
  Decision:
  svn status
  svn diff
  svn revert
  Task:
  Слияние изменений, выполненных другими, с вашей рабочей копией
  Decision:
  svn update
  svn resolved
  Task:
  Фиксация изменений
  Decision:
  svn commit
  Task:
  Работаем с репозиторием
  Decision:
  # vim /etc/xinetd.d/ssh 
  # cat /etc/xinetd.d/ssh
      service ssh 
      {
      disable = yes
      socket_type = stream
      protocol = tcp
      port = 22
      wait = no
      user = root
      server = /usr/sbin/sshd
      server_args = -i
      only_from = 192.168.0.0
      }
  # systemctl restart xinetd
  # systemctl restart sshd
  Task:
  Для удобства работы я настроил работу по ключам у себя на машине, чтобы не приходилось вводить пароль каждый раз когда его спросят.
  Decision:
  # ssh-keygen -t rsa

      Generating public/private rsa key pair.
      Enter file in which to save the key (/root/.ssh/id_rsa):
      /root/.ssh/id_rsa already exists.
      Overwrite (y/n)? y
      Enter passphrase (empty for no passphrase):
      Enter same passphrase again:
      Your identification has been saved in /root/.ssh/id_rsa.
      Your public key has been saved in /root/.ssh/id_rsa.pub.
      The key fingerprint is:
      SHA256:tYHxX9xi+aUU3DsOAp5TmZnThmCtktDkAcHrAjkgKNI root@c8VB
      The key's randomart image is:
      +---[RSA 3072]----+
      |.. .o=o.oo B... |
      |* E o..o= X +.+.|
      |= . o.+ O o B +|
      | + . o * = = *.|
      | o . S o o + o|
      | . . . |
      | . |
      | |
      | |
      +----[SHA256]-----+
  # ssh-copy-id -i ~/.ssh/id_rsa.pub root@localhost
      /bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/root/.ssh/id_rsa.pub"
      /bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
      /bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
      root@localhost's password:
      Number of key(s) added: 1
      Now try logging into the machine, with: "ssh 'root@localhost'"
      and check to make sure that only the key(s) you wanted were added.
  # mkdir /svn
  Task:
  Создаем репозиторий
  Decision:
  # svnadmin create /svn/myrepo
  # svn info file:///svn/myrepo/
      Path: myrepo
      URL: file:///svn/myrepo
      Relative URL: ^/
      Repository Root: file:///svn/myrepo
      Repository UUID: bbe1dc47-235c-4cf4-b253-af3d81a943a3
      Revision: 0
      Node Kind: directory
      Last Changed Rev: 0
      Last Changed Date: 2020-04-09 21:36:41 -0400 (Чт, 09 апр 2020)
  Task:
  Репозиторий пустой о чем говорит “Revision: 0”. С каждым новым измением в репозитории номер ревизии будет увеличиваться на единицу.
  В каталоге docs я подготовил несколько файлов которые положат начало новому репозиторию
  Decision:
  # ls -l docs
      итого 12
      -rw-r--r--. 1 root root 14 апр 9 21:40 file1
      -rw-r--r--. 1 root root 14 апр 9 21:40 file2
      -rw-r--r--. 1 root root 15 апр 9 21:40 file3
  # svn import docs file:///svn/myrepo/ -m "start the dance"
      Adding docs/file1
      Adding docs/file2
      Adding docs/file3
      Committing transaction...
      Committed revision 1.
  # svn info file:///svn/myrepo/
      Path: myrepo
      URL: file:///svn/myrepo
      Relative URL: ^/
      Repository Root: file:///svn/myrepo
      Repository UUID: bbe1dc47-235c-4cf4-b253-af3d81a943a3
      Revision: 1
      Node Kind: directory
      Last Changed Author: root
      Last Changed Rev: 1
      Last Changed Date: 2020-04-09 21:41:48 -0400 (Чт, 09 апр 2020)
  # svn list file:///svn/myrepo/
      file1
      file2
      file3
  Task:
  У нас получился репозиторий с тремя файлами. Теперь мы создадим рабочую копию этого репозитория и поработаем с ней.
  Decision:
  # svn co file:///svn/myrepo/
      A myrepo/file1
      A myrepo/file2
      A myrepo/file3
      Checked out revision 1.
  # ls -l
      итого 0
      drwxr-xr-x. 2 root root 45 апр 9 21:40 docs
      drwxr-xr-x. 3 root root 57 апр 9 21:43 myrepo
  # cd myrepo/
  # ls -l
      итого 12
      -rw-r--r--. 1 root root 14 апр 9 21:43 file1
      -rw-r--r--. 1 root root 14 апр 9 21:43 file2
      -rw-r--r--. 1 root root 15 апр 9 21:43 file3
  # echo "new line" >> file1
  # cat myrepo/file1
      it is file 1
      new line
      new line2
  # svn commit -m "file1 has been modified"
      Sending file1
      Transmitting file data .done
      Committing transaction...
      Committed revision 2.
  # ls -l /svn/myrepo
      итого 12
      drwxr-xr-x. 2 root root 76 апр 9 21:36 conf
      drwxr-sr-x. 6 root root 4096 апр 9 21:46 db
      -r--r--r--. 1 root root 2 апр 9 21:36 format
      drwxr-xr-x. 2 root root 231 апр 9 21:36 hooks
      drwxr-xr-x. 2 root root 41 апр 9 21:36 locks
      -rw-r--r--. 1 root root 246 апр 9 21:36 README.txt
  # ifconfig
      ...
      inet 192.168.0.104
      ...
  Decision:
  # yum -y install subversion
  # pwd
      /home/linux
  Task:
  Получение копии репозитория с удаленного сервера где у вас есть аккаунт
  Убедитесь, что пользователь включен в нужную группу для доступа к репозиториям.
  Decision:
  # svn co svn+ssh://root@192.168.0.104/svn/myrepo
  root@192.168.0.104's password:
  A myrepo/file1
  A myrepo/file2
  A myrepo/file3
  Получена редакция 3.
  # ls myrepo/
      file1 file2 file3
  # cd myrepo/
  # cat file2
      it is file 2
  # vim file2
  # cat file2
      it is file 2
      new modificate 1
  # svn commit -m "file2 has been modified"
      root@192.168.0.104's password:
      Посылаю file2
      Передаю данные .done
      Committing transaction...
      Committed revision 4.
  # cat file3
      it is file 3
  # vim file3
  # cat file3
      it is file 3
      new file3
  # svn commit -m "file3 has been modified"
      Sending file3
      Transmitting file data .done
      Committing transaction...
      Committed revision 5.
  # svn info file:///svn/myrepo
      Path: myrepo
      URL: file:///svn/myrepo
      Relative URL: ^/
      Repository Root: file:///svn/myrepo
      Repository UUID: bbe1dc47-235c-4cf4-b253-af3d81a943a3
      Revision: 5
      Node Kind: directory
      Last Changed Author: root
      Last Changed Rev: 5
      Last Changed Date: 2020-04-29 07:43:37 -0400 (Ср, 29 апр 2020)
  # cat file3
      it is file 3
  # vim file3
  # cat file3
      it is file 3
      modified ubuntu3
  # svn commit -m "file3 has been modified ubuntu3"
      root@192.168.0.104's password:
      Посылаю file3
      Передаю данные .done
      Committing transaction...
      svn: E160028: Фиксация не удалась (подробности приведены ниже):
      svn: E160028: File '/file3' is out of date
  # svn update
      Updating '.':
      root@192.168.0.104's password:
      C file3
      Обновлено до редакции 5.
      Summary of conflicts:
      Text conflicts: 1
      Conflict discovered in file 'file3'.
      Select: (p) postpone, (df) show diff, (e) edit file, (m) merge,
      (mc) my side of conflict, (tc) their side of conflict,
      (s) show all options: m
      Merging 'file3'.
      Conflicting section found during merge:
      (1) their version (at line 2) |(2) your version (at line 2)
      --------------------------------------+--------------------------------------
      new file3 |modified ubuntu3
      --------------------------------------+--------------------------------------
      Select: (1) use their version, (2) use your version,
      (12) their version first, then yours,
      (21) your version first, then theirs,
      (e1) edit their version and use the result,
      (e2) edit your version and use the result,
      (eb) edit both versions and use the result,
      (p) postpone this conflicting section leaving conflict markers,
      (a) abort file merge and return to main menu: 2
      Merge of 'file3' completed.
      Select: (p) postpone, (df) show diff, (e) edit file, (m) merge,
      (r) mark resolved, (mc) my side of conflict,
      (tc) their side of conflict, (s) show all options: p
      Summary of conflicts:
      Text conflicts: 1
  # ls
      file1 file2 file3 file3.mine file3.r3 file3.r5
  # cat file3.r3
      it is file 3
  # cat file3.r5
      it is file 3
      new file3
  # cat file3.mine
      it is file 3
      modified ubuntu3
  # rm -f file3.r3 file3.r5 file3.mine
  # vim file3
  # cat file3
      it is file 3
      modified ubuntu3
  # svn commit -m "file3 has been modified ubuntu3"
      root@192.168.0.104's password:
      Посылаю file3
      Передаю данные .done
      Committing transaction...
      Committed revision 6.
  # svn update
      Updating '.':
      U file3
      U file2
      Updated to revision 6.
  # ls -l
      итого 12
      -rw-r--r--. 1 root root 33 апр 29 06:47 file1
      -rw-r--r--. 1 root root 30 апр 29 07:57 file2
      -rw-r--r--. 1 root root 30 апр 29 07:57 file3
  # cat file3
      it is file 3
      modified ubuntu3
  Task:
  Системный пользователь, который не является членом группы agents
  Decision:
  # svn list svn+ssh://mybestuser@linuxbox/svn/myrepo 
      mybestuser@linuxbox's password:
      file1
      file2
      file3
      secret/
  # svn list svn+ssh://mybestuser@linuxbox/svn/myrepo/secret
      mybestuser@linuxbox's password:
      svn: Authorization failed
  # svn list svn+ssh://mybestuser@linuxbox/svn/myrepo/secret/public
      mybestuser@linuxbox’s password:
      file3
  Task:
  Ограничение доступа
  У нас уже есть репозиторий /svn/myrepo и сейчас мы разберемся с правами доступа к нему.
  Decision:
  # useradd james
  # passwd james
  # ls -l /svn/myrepo/conf/
      итого 20
      -rw-r--r--. 1 root root 1080 апр 9 21:36 authz
      -rw-r--r--. 1 root root 885 апр 9 21:36 hooks-env.tmpl
      -rw-r--r--. 1 root root 309 апр 9 21:36 passwd
      -rw-r--r--. 1 root root 4391 апр 29 08:05 svnserve.conf
  # vim /svn/myrepo/conf/svnserve.conf
  # cat /svn/myrepo/conf/svnserve.conf
      ...
      [general]
      anon-access = none
      #auth-access = write
      #password-db = passwd
      authz-db = authz
      #realm = Bunch_Of_My_Repos
  Task:
  Передаваемая информация не шифруется. Этот способ устарел и я не рекомендую его использовать. Чтобы вы примерно понимали что это за файл я вам приведу пример
  Decision:
  # cat /svn/myrepo/conf/passwd
      [users]
      # harry = harryssecret
      # sally = sallyssecret
  # cat /svn/myrepo/conf/passwd
      This file is an example password file for svnserve.
      ### Its format is similar to that of svnserve.conf. As shown in the
      ### example below it contains one section labelled [users].
      ### The name and password for each user follow, one account per line.
      [users]
      #harry = harryssecret
      #sally = sallyssecret
      james = qaz
  Task:
  В файле svnserve.conf раскоментируем строку password-db = passwd, в файл authz добавим запись для пользователя harry если общая политика ему не подходит.
  Decision:
  # vim /svn/myrepo/conf/svnserve.conf
      ...
      [general]
      anon-access = none
      #auth-access = write
      password-db = passwd
      authz-db = authz
      #realm = Bunch_Of_My_Repos
  Task:
  Запустим службу svnserve
  Decision:
  # svnserve -d
  # svn list svn://harry@c8VB/svn/myrepo
      Authentication realm: <svn://c8VB:3690> bbe1dc47-235c-4cf4-b253-af3d81a943a3
      Password for 'root': *************
      Authentication realm: <svn://c8VB:3690> bbe1dc47-235c-4cf4-b253-af3d81a943a3
      Username: james
      Password for 'james': ***
      -----------------------------------------------------------------------
      ATTENTION! Your password for authentication realm:
      <svn://c8VB:3690> bbe1dc47-235c-4cf4-b253-af3d81a943a3
      can only be stored to disk unencrypted! You are advised to configure
      your system so that Subversion can store passwords encrypted, if
      possible. See the documentation for details.
      You can avoid future appearances of this warning by setting the value
      of the 'store-plaintext-passwords' option to either 'yes' or 'no' in
      '/root/.subversion/servers'.
      -----------------------------------------------------------------------
      Store password unencrypted (yes/no)? yes
      file1
      file2
      file3
  Task:
  В том же каталоге где и svnserve.conf (<путь к репозиторию>/conf/) создаем файл authz и вносим в него конфигурацию
  Decision:
  # vim /svn/myrepo/conf/authz
  # cat /svn/myrepo/conf/authz
      agents = james, piter
      [/]
      *=r
      [/secret]
      @agents = rw
      *=
      [/secret/public]
      * = rw
  Task:
  Системный пользователь, который является членом группы agents
  Decision:
  # svn list svn+ssh://james@192.168.0.104/svn/myrepo
      james@linuxbox's password:
      file1
      file2
      file3
      secret/
  # svn list svn+ssh://james@192.168.0.104/svn/myrepo/secret
      james@linuxbox's password:
      file1
      file2
      file3
      public/
  # svn list svn+ssh://james@192.168.0.104/svn/myrepo/secret/public
      james@linuxbox’s password:
      file3
  Source:
  1. https://www.youtube.com/playlist?list=PLtSGboPf3g50Aejrp6KjQsqqjxvAO4aKw
  2. https://www.youtube.com/playlist?list=PLdEqf7lxtAH--exov42yypdvOi7bDqoBQ
  3. https://losst.ru/proverka-linux-na-virusy
  4. https://www.youtube.com/watch?v=t6wO3qsxrSo&list=PL76C3E97EB0FDB323&index=18&t=0s
  5. https://linuxconfig.org/how-to-install-xinetd-service-in-redhat-8
  Task:
  В CentOS/Redhat/fedora нужно перечитать конфиг файл постгресса.
  Decision:
  # systemctl reload postgresql-bla-bla.servisw
  Task:
  Зайти в графическую настройку с командной строки в Ubuntu
  Столкнулся у себя с такой проблемой в декстопной версии Ubuntu, что пропали в панели меню настройки, а мне захотелось изменить в настроках фона фотографию.
  Decision:
  Зайти в настройки можно с помощью командной строки
  $ gnome-control-center
  Task:
  Как узнать дистрибутив?
  Decision:
  $ cat /etc/*-release
  DISTRIB_ID=Ubuntu
  DISTRIB_RELEASE=20.04
  DISTRIB_CODENAME=focal
  DISTRIB_DESCRIPTION="Ubuntu 20.04.5 LTS"
  NAME="Ubuntu"
  VERSION="20.04.5 LTS (Focal Fossa)"
  ID=ubuntu
  ID_LIKE=debian
  PRETTY_NAME="Ubuntu 20.04.5 LTS"
  VERSION_ID="20.04"
  HOME_URL="https://www.ubuntu.com/"
  SUPPORT_URL="https://help.ubuntu.com/"
  BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
  PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
  VERSION_CODENAME=focal
  UBUNTU_CODENAME=focal
  Source:
  1. https://losst.ru/kak-uznat-versiyu-linux?ysclid=l7mrzpkpk917754519#%D0%A3%D0%B7%D0%BD%D0%B0%D1%82%D1%8C_%D0%B4%D0%B8%D1%81%D1%82%D1%80%D0%B8%D0%B1%D1%83%D1%82%D0%B8%D0%B2

Расписание заданий
  Task:
  Составьте crontab файл для следующих процессов: 
  1. daily1.sh - ежедневно в 23:55. 
  2. daily2.sh - ежедневно в 8:00 и 17:00 
  3. hourly.sh - каждый час в рабочее время (пн-пт, 8:00-17:30) 
  4. happy_new_year.sh - в момент наступления нового года 
  5. quatre.sh - каждые 4 часа
  Decision:
  $ crontab -l
  ...
  55 23 * * * /home/de13ma/gabn/daily1.sh > /home/de13ma/gabn/addtestfile
  0 8-17 * * * /home/de13ma/gabn/daily2.sh > /home/de13ma/gabn/addtestfile
  0 8-17 * * 1-5 /home/de13ma/gabn/hourly.sh > /home/de13ma/gabn/addtestfile
  0 0 1 1 * /home/de13ma/gabn/happy_new_year.sh > /home/de13ma/gabn/addtestfile
  * */4 * * * /home/de13ma/gabn/quatre.sh > /home/de13ma/gabn/addtestfile
  Task:
  допустим у нас есть файл testcron.sh.
  $ cat testcron.sh
      #!/bin/bash
      echo "It is now $(date +%T) on (date +%A)"
  $chmod +x testcron.sh
  если его выполнить
  $ ./testcron.sh
      It is now 08:04:32 on (date +%A)
  Выполнить тестовый скрипт каждую минуту
  Decision:
  $ crontab -e
      No modification made
  $ crontab -e
      * * * * * /home/administrator/testcron.sh
  Task:
  Выполнить тестовый скрипт каждую минуту и добавим вывод в лог.
  Decision:
  $ crontab -e
      * * * * * /home/administrator/testcron.sh >> /home/administrator/test.log
  $ ls
      examples.desktop Видео Изображения 'Рабочий стол'
      testcron.sh Документы Музыка Шаблоны
      test.log Загрузки Общедоступные
  $ cat test.log
  $ cat test.log
      It is now 08:05:01 on (date +%A)
  $ crontab -l
      # Edit this file to introduce tasks to be run by cron.
      #
      # Each task to run has to be defined through a single line
      # indicating with different fields when the task will be run
      # and what command to run for the task
      #
      # To define the time you can provide concrete values for
      # minute (m), hour (h), day of month (dom), month (mon),
      # and day of week (dow) or use '*' in these fields (for 'any').#
      # Notice that tasks will be started based on the cron's system
      # daemon's notion of time and timezones.
      #
      # Output of the crontab jobs (including errors) is sent through
      # email to the user the crontab file belongs to (unless redirected).
      #
      # For example, you can run a backup of all your user accounts
      # at 5 a.m every week with:
      # 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
      #
      # For more information see the manual pages of crontab(5) and cron(8)
      #
      # m h dom mon dow command
      * * * * * /home/linux/testcron.sh >> /home/linux/test.log
  $ sudo crontab -l
      no crontab for root
  Task:
  Отредактируем таблицу cron root. Мы перезагрузим сервер в 4:15, вывод в null. /dev/null - вывода не будет, чтобы не спамило журнал системы.
  Decision:
  $ sudo crontab -e
      15 4 * * * /sbin/reboot > /dev/null 2>&1 #
      0 */2 * * * /etc/init.d/nginx restart >> /dev/null 2>&1 #Перезапустить nginx каждый чётный час - */2
  $ sudo crontab -l
      # Edit this file to introduce tasks to be run by cron.
      #
      # Each task to run has to be defined through a single line
      # indicating with different fields when the task will be run
      # and what command to run for the task
      #
      # To define the time you can provide concrete values for
      # minute (m), hour (h), day of month (dom), month (mon),
      # and day of week (dow) or use '*' in these fields (for 'any').#
      # Notice that tasks will be started based on the cron's system
      # daemon's notion of time and timezones.
      #
      # Output of the crontab jobs (including errors) is sent through
      # email to the user the crontab file belongs to (unless redirected).
      #
      # For example, you can run a backup of all your user accounts
      # at 5 a.m every week with:
      # 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
      #
      # For more information see the manual pages of crontab(5) and cron(8)
      #
      # m h dom mon dow command
      15 4 * * * /sbin/reboot > /dev/null 2>&1
      0 */2 * * * /etc/init.d/nginx restart >> /dev/null 2>&1
  $ cat test.log
      It is now 08:05:01 on (date +%A)
      It is now 08:06:01 on (date +%A)
  $ date
      Сб мар 7 08:06:01 MSK 2020
  $ journalctl -e
     мар 07 08:03:19 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
     мар 07 08:03:19 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
     мар 07 08:03:24 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
     мар 07 08:03:24 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
     мар 07 08:03:30 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
     мар 07 08:03:30 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
     мар 07 08:03:30 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
     мар 07 08:03:30 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
     мар 07 08:03:30 VirtualBox rtkit-daemon[1069]: Successfully made thread 2635 of
     мар 07 08:03:30 VirtualBox rtkit-daemon[1069]: Supervising 5 threads of 3 proces
     мар 07 08:03:35 VirtualBox rtkit-daemon[1069]: Supervising 5 threads of 3 proces
     мар 07 08:03:35 VirtualBox rtkit-daemon[1069]: Supervising 5 threads of 3 proces
     мар 07 08:04:01 VirtualBox CRON[2678]: pam_unix(cron:session): session opened fo
     мар 07 08:04:01 VirtualBox CRON[2679]: (linux) CMD (/home/linux/testcron.sh >> /
     мар 07 08:04:01 VirtualBox CRON[2678]: (CRON) info (No MTA installed, discarding
     мар 07 08:04:01 VirtualBox CRON[2678]: pam_unix(cron:session): session closed fo
     мар 07 08:05:01 VirtualBox CRON[2699]: pam_unix(cron:session): session opened fo
     мар 07 08:05:01 VirtualBox CRON[2700]: (linux) CMD (/home/linux/testcron.sh >> /
     мар 07 08:05:01 VirtualBox CRON[2699]: pam_unix(cron:session): session closed fo
     мар 07 08:05:09 VirtualBox gnome-shell[1033]: JS WARNING: [resource:///org/gnome
     мар 07 08:06:01 VirtualBox CRON[2719]: pam_unix(cron:session): session opened fo
     мар 07 08:06:01 VirtualBox CRON[2720]: (linux) CMD (/home/linux/testcron.sh >> /
     мар 07 08:06:01 VirtualBox CRON[2719]: pam_unix(cron:session): session closed fo
  $ cat /etc/crontab
      # /etc/crontab: system-wide crontab
      # Unlike any other crontab you don't have to run the `crontab'
      # command to install the new version when you edit this file
      # and files in /etc/cron.d. These files also have username fields,
      # that none of the other crontabs do.
      SHELL=/bin/sh
      PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
      # m h dom mon dow user command
      17 * * * * root cd / && run-parts --report /etc/cron.hourly
      25 6 * * * root test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )
      47 6 * * 7 root test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly )
      52 6 1 * * root test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.monthly )
  Task:
  Редактировать таблицу cron пользователя linux
  Decision:
  $ sudo crontab -u linux -e
      No modification made
  Task:
  Создайте скрипт, который создаёт файл. Настройте запуск этого скрипта раз в минуту. Проверьте результат.
  Decision:
  $ vim BASH-CronScript1.sh
  $ cat BASH-CronScript1.sh
  #!/bin/bash
  touch testfile
  $ ./BASH-CronScript1.sh
  $ sudo cp BASH-CronScript1.sh /usr/bin/
  $ BASH-CronScript1.sh
  $ ls -l testfile
      -rw-rw-r--. 1 ur ur 0 мая  4 09:48 testfile
  $ cat /etc/crontab
  SHELL=/bin/bash
  PATH=/sbin:/bin:/usr/sbin:/usr/bin
  MAILTO=root
  # For details see man 4 crontabs
  # Example of job definition:
  # .---------------- minute (0 - 59)
  # |  .------------- hour (0 - 23)
  # |  |  .---------- day of month (1 - 31)
  # |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
  # |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
  # |  |  |  |  |
  # *  *  *  *  * ur-name  command to be executed
  $ crontab -e
      no crontab for ur - using an empty one
      crontab: installing new crontab
  $ crontab -l
      *  *  *  *  *  /usr/bin/BASH-CronScript1.sh
  $ ls -l testfile
  -rw-rw-r--. 1 ur ur 0 мая  4 09:58 testfile
  $ ls -l testfile
  -rw-rw-r--. 1 ur ur 0 мая  4 09:59 testfile
  Task:
  Настройте в at задачу, чтобы она создала файл через 3 минуты.
  Decision:
  $ at now + 3 minutes
      warning: commands will be executed using /bin/sh
  at> /usr/bin/BASH-CronScript1.sh
  at> <EOT>
      job 3 at Wed May  4 10:34:00 2022
  $ ls -l testfile
      -rw-rw-r--. 1 ur ur 0 мая  4 10:34 testfile
  Task:
  Настройте cron, чтобы он создавал директорию при каждой перезагрузке.
  Decision:
  $ crontab -e
  crontab: installing new crontab
  $ ls
  $ crontab -l
  #*  *  *  *  *  /usr/bin/BASH-CronScript1.sh
  @reboot mkdir testdir
  $ ls -l
      ...
      drwxr-xr-x. 2 ur ur    4096 мая  4 10:37  testdir
      ...
  Task:
  Создайте пользователя backup и настройте для него cron, чтобы тот раз в день находил файлы старее 5 дней в директории /data и добавлял эти файлы в архив /backup/archive.tar, после чего удалял из исходной директории. Настройте cron у пользователя ur, чтобы он каждые 10 минут создавал файл в директории /data.
  Также у пользователя root создайте cron, чтобы он каждую пятницу в 23:30 записывал содержимое директории /data и содержимое архива /backup/archive.tar в файл /var/log/reports/текущаядата.
  Decision:
  $ sudo useradd backup2
  $ sudo passwd backup2
  $ sudo mkdir /backup/
  $ ls -l /data
      итого 0
      -rw-r--r--. 1 root root 0 апр 14 13:14 testfile1
      -rw-r--r--. 1 root root 0 апр 14 13:14 testfile2
      -rw-r--r--. 1 root root 0 апр 14 13:14 testfile3
      -rw-r--r--. 1 root root 0 апр 14 13:14 testfile4
      -rw-r--r--. 1 root root 0 апр 14 13:14 testfile5
  $ su - backup2
  $ ls -l /data/
  итого 0
  -rw-r--r--. 1 root root 0 апр 14 13:14 testfile1
  -rw-r--r--. 1 root root 0 апр 14 13:14 testfile2
  -rw-r--r--. 1 root root 0 апр 14 13:14 testfile3
  -rw-r--r--. 1 root root 0 апр 14 13:14 testfile4
  -rw-r--r--. 1 root root 0 апр 14 13:14 testfile5
  $ vim Linux-Gnulinux-TaskScheduler1.sh
  $ cat Linux-Gnulinux-TaskScheduler1.sh
  #!/bin/bash
  # Создайте пользователя backup и настройте для него cron, чтобы тот раз в день находил файлы старее 5 дней в директории /data и добавлял эти файлы в архив /backup/archive.tar, после чего удалял из исходной директории.
  if find /data/ -type f -mtime +5; then
      cd /data
      tar -cvf /backup/archive.tar testfile*
      rm -rf /data/testfile*
  else
      echo "No files"
  fi
  $ sudo rm -rf /backup/archive.tar
  $ sudo ./Linux-Gnulinux-TaskScheduler1.sh
  /data/testfile5
  /data/testfile1
  /data/testfile3
  /data/testfile2
  /data/testfile4
  testfile1
  testfile2
  testfile3
  testfile4
  testfile5
  $ ls -l /data/
  итого 0
  $ ls -l /backup/
  итого 12
  -rw-r--r--. 1 root root 10240 мая 11 11:19 archive.tar
  $ sudo tar -tf /backup/archive.tar
  testfile1
  testfile2
  testfile3
  testfile4
  testfile5
  $ crontab -e
      no crontab for backup2 - using an empty one
      crontab: installing new crontab
  $ crontab -l
      5 11 * * * tar --totals -cvf /backup/archive.tar /data/testfile{1..2} | rm -rf /data/testfile{1..2}
  $ sudo mv Linux-Gnulinux-TaskScheduler1.sh /usr/bin/
  $ exit
  $ sudo vim /var/spool/cron/backup2
  $ sudo cat /var/spool/cron/backup2
  @daily /usr/bin/Linux-Gnulinux-TaskScheduler1.sh
  $ vim Linux-Gnulinux-TaskScheduler2.sh
  $ cat Linux-Gnulinux-TaskScheduler2.sh
  #!/bin/bash
  touch /data/testfile0
  $ sudo chown user:user /data
  $ ls -l /
  ...
  drwxr-xr-x.   2 user user  4096 мая 11 11:19 data
  ...
  $ sudo mv Linux-Gnulinux-TaskScheduler2.sh /usr/bin
  $ whoami
  user
  $ crontab -e
  crontab: installing new crontab
  $ crontab -l
  #*  *  *  *  *  /usr/bin/BASH-CronScript1.sh
  @reboot mkdir testdir
  */10  *  *  *  *  /usr/bin/Linux-Gnulinux-TaskScheduler2.sh
  $ ls -l /data/
  итого 0
  -rw-r--r--. 1 user user 0 мая 12 08:57 testfile0
  $ sudo vim /usr/bin/Linux-Gnulinux-TaskScheduler3.sh
  $ sudo cat /usr/bin/Linux-Gnulinux-TaskScheduler3.sh
  #!/bin/bash
  # Также у пользователя root создайте cron, чтобы он каждую пятницу в 23:30 записывал содержимое директории /data и содержимое архива /backup/archive.tar в файл /var/log/reports/текущаядата.
  mkdir /var/log/reports
  ls -l /data > /var/log/reports/$(date +"%d.%m.%Y")
  tar -tf /backup/archive.tar >> /var/log/reports/$(date +"%d.%m.%Y")
  $ sudo vim /var/spool/cron/root
  $ sudo cat /var/spool/cron/root
  30  23  *  *  5  /usr/bin/Linux-Gnulinux-TaskScheduler3.sh
  Source:
  1. https://basis.gnulinux.pro/ru/latest/

Мини-проекты
  Task:
  Прорешать первый том CCNA R&S
  Task:
  Создать образную инфраструктуру с серверами, обеспечить отказоустойчивые каналы между офисами и бекап линиями, потом создать еще два офиса используя Python. Выключить каналы или роутеры или свичи на линиях. Включить Firewall на сервере или рабочем пк с определенными правилами
